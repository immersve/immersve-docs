"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[7379],{16860:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>N,contentTitle:()=>q,default:()=>L,frontMatter:()=>v,metadata:()=>w,toc:()=>R});var a=i(62540),r=i(43023),n=i(71552),t=i.n(n),d=(i(77180),i(3188)),l=i.n(d),c=(i(81738),i(64544)),o=i.n(c),m=i(50449),p=i.n(m),h=i(81730),u=i.n(h),x=i(97672),g=i.n(x),f=i(88443),j=i.n(f),b=(i(18565),i(81381)),y=(i(26269),i(22491));const v={id:"get-residential-addresses",title:"Get Residential Addresses",description:"Retrieve previously submitted residential addresses of the cardholder.",sidebar_label:"Get Residential Addresses",hide_title:!0,hide_table_of_contents:!0,api:"eJzNV9tu20YQ/ZXBPtkGdbFdOy0fCqh2YqgJnMBW0jaWgCyXI3FjcpfZi2xV0L8XsyR1d6K89UnkaubM7czscM4cn1gWP7DHmWCjiOkSDXdSq37KYjZB1zJoZYrKSZ63eJoatBYti1iKVhhZkiyL2R06I3GKUBqcSu1tPgPrk0I6hymsYcASA/QYXIYguEkznado2kMVx7HSDodqkEkLqNJSS+VAWhhrA/2iQGOn2BJapV4Q9Nt/rkCrfFbpDhWLWMkNL9ChocDmTPECWcxWZnpCaK9cP2URk+R8yV22E1H/etdB4JVqm0UMn3lR5oR8ecFf4a847qZn5920yy+T8auLC+y+Ss9/w6R7xiJm8JuXBlMWO+MxYlZkWHAWz5mblYRhnZFqwhaLEQnbUivKcjxnZ90u/QitHCpHj7wscylCkTpfLfk638XjxvAZxeewsGvnOvmKwlGSDJXaycqKV9Ld+iJBs+vTdmIGGQLJgwoKm7k4ZYuIFBEPxrsP0g0a3KBCw/N8Brw+g8Q7EFwBz62GBIHnZcaVL9BIsWn+vLdmP9T9UOu8wE2oT1I4bSSHSoJwnX5Sh+WHJDtTmed8gh3rE2+SjpButmmi58VjzlUafA5Ch6FXsiBVoGewFcDhvcpn4C2Co+6RY5hpDzX3gDd6vdtr4Cu1CLTL0DxJixF89dbVCAjDEPGQwbKjNv1/XVpdVAnn7oBcB99JtA0fLUKuBc2DJKGREfhswXqRAbfwqX8FR00JjkEbGPwNRwN85vZ4K4lv35ELBidSH1id0MOzCEqjp1IJjAhfcOW0KnC7u9eLVGrreH6l0wOC/RBkQeh0i1in3YsugQUvzOwwl/v37+H89PKydQZXlV5AXo6o+oye6wFLM1OqTdO3n8nw2Od5rxI6mG/1IPfKOuOF8wbTxtBWdJ3zHmz1TgSBKRE0uQTKQQS3+ASfkVfZpf6SLq9dqW00N06rmYlsTWzvzbQmuSDMX7rnFORW0/swBilFSjvgea6fMAWnoUQz1qaoEilIHJ6ky8K7QW61qhicNt33BY3RhijxZaiG6uTkzfu7P/rX169vT06G6g6t9kYgpBorW/gsrSO+Uc8hcIOgNFg/HkshUTnyoJDWhm7Y61A7XHI/eyG8MPgpGG+3GC2Vwwma9br+0j2v+9zblwbrigRvtElkmqKici0T9AOdJm9VN3O7v5tXCh8V9y7TRv6LFX1Wl+zDelwbbq+7M1pRiZeyFf5oEV8WFXUKdJmu16CwVriMxazDS9mp9wDbma+Wg3666Ly0LFk002Yf8SZnMcucK23cIbS2rNeattDFTgO+k1OE3oc+3AcMtoi2IRxa932MAVq3gTEil4Q30s2CTz0haGQM9CMqFj+MyMj2WcQG3EzQQb0/LeVKCW9xVonQyz0Kg4f8vRdxzbV7InHF001nlrSgFLB6naL3BLkJxK0e3mhTcMdi9udfA6LV0pfVnlRKOqgXwQx5GtTrnfG5RcR4DAJbEwQRbrxM0ULrd+h5l1HVqyYMq6qsJyX1cWO6ifynrNtKabGbrMNhKo2WTPcvKxVuLQX96zb0x/WpVJNq9mm9lIiq9YI2sgRB11fDEUVddycIgzzo0tZWaR2HHpVqrMlz6obKg9N2t91lq1Zsdnzia3PnFjwUvQ7oBh3crX1R9F76Kllbm/9XHyh12Rw+u06ZcxnGZOjpeT1lHqimLGLNnGERi9cnTfik2DdqRhHLtKVOYvN5wi1+NPliQcffPJq6C6fcSJ5Qth/mLJWWnlMWj3lu8TspPLqrB+wx/OjjaG+EDVsVUXXKc09vLGLUX/u/zxajRdTwmXytJGkWlG4NY+cCpCGynN43rwdssfgPk4Ij2g==",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},q=void 0,w={id:"get-residential-addresses",title:"Get Residential Addresses",description:"Retrieve previously submitted residential addresses of the cardholder.",source:"@site/docs/get-residential-addresses.api.mdx",sourceDirName:".",slug:"/get-residential-addresses",permalink:"/api-reference/get-residential-addresses",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-residential-addresses",title:"Get Residential Addresses",description:"Retrieve previously submitted residential addresses of the cardholder.",sidebar_label:"Get Residential Addresses",hide_title:!0,hide_table_of_contents:!0,api:"eJzNV9tu20YQ/ZXBPtkGdbFdOy0fCqh2YqgJnMBW0jaWgCyXI3FjcpfZi2xV0L8XsyR1d6K89UnkaubM7czscM4cn1gWP7DHmWCjiOkSDXdSq37KYjZB1zJoZYrKSZ63eJoatBYti1iKVhhZkiyL2R06I3GKUBqcSu1tPgPrk0I6hymsYcASA/QYXIYguEkznado2kMVx7HSDodqkEkLqNJSS+VAWhhrA/2iQGOn2BJapV4Q9Nt/rkCrfFbpDhWLWMkNL9ChocDmTPECWcxWZnpCaK9cP2URk+R8yV22E1H/etdB4JVqm0UMn3lR5oR8ecFf4a847qZn5920yy+T8auLC+y+Ss9/w6R7xiJm8JuXBlMWO+MxYlZkWHAWz5mblYRhnZFqwhaLEQnbUivKcjxnZ90u/QitHCpHj7wscylCkTpfLfk638XjxvAZxeewsGvnOvmKwlGSDJXaycqKV9Ld+iJBs+vTdmIGGQLJgwoKm7k4ZYuIFBEPxrsP0g0a3KBCw/N8Brw+g8Q7EFwBz62GBIHnZcaVL9BIsWn+vLdmP9T9UOu8wE2oT1I4bSSHSoJwnX5Sh+WHJDtTmed8gh3rE2+SjpButmmi58VjzlUafA5Ch6FXsiBVoGewFcDhvcpn4C2Co+6RY5hpDzX3gDd6vdtr4Cu1CLTL0DxJixF89dbVCAjDEPGQwbKjNv1/XVpdVAnn7oBcB99JtA0fLUKuBc2DJKGREfhswXqRAbfwqX8FR00JjkEbGPwNRwN85vZ4K4lv35ELBidSH1id0MOzCEqjp1IJjAhfcOW0KnC7u9eLVGrreH6l0wOC/RBkQeh0i1in3YsugQUvzOwwl/v37+H89PKydQZXlV5AXo6o+oye6wFLM1OqTdO3n8nw2Od5rxI6mG/1IPfKOuOF8wbTxtBWdJ3zHmz1TgSBKRE0uQTKQQS3+ASfkVfZpf6SLq9dqW00N06rmYlsTWzvzbQmuSDMX7rnFORW0/swBilFSjvgea6fMAWnoUQz1qaoEilIHJ6ky8K7QW61qhicNt33BY3RhijxZaiG6uTkzfu7P/rX169vT06G6g6t9kYgpBorW/gsrSO+Uc8hcIOgNFg/HkshUTnyoJDWhm7Y61A7XHI/eyG8MPgpGG+3GC2Vwwma9br+0j2v+9zblwbrigRvtElkmqKici0T9AOdJm9VN3O7v5tXCh8V9y7TRv6LFX1Wl+zDelwbbq+7M1pRiZeyFf5oEV8WFXUKdJmu16CwVriMxazDS9mp9wDbma+Wg3666Ly0LFk002Yf8SZnMcucK23cIbS2rNeattDFTgO+k1OE3oc+3AcMtoi2IRxa932MAVq3gTEil4Q30s2CTz0haGQM9CMqFj+MyMj2WcQG3EzQQb0/LeVKCW9xVonQyz0Kg4f8vRdxzbV7InHF001nlrSgFLB6naL3BLkJxK0e3mhTcMdi9udfA6LV0pfVnlRKOqgXwQx5GtTrnfG5RcR4DAJbEwQRbrxM0ULrd+h5l1HVqyYMq6qsJyX1cWO6ifynrNtKabGbrMNhKo2WTPcvKxVuLQX96zb0x/WpVJNq9mm9lIiq9YI2sgRB11fDEUVddycIgzzo0tZWaR2HHpVqrMlz6obKg9N2t91lq1Zsdnzia3PnFjwUvQ7oBh3crX1R9F76Kllbm/9XHyh12Rw+u06ZcxnGZOjpeT1lHqimLGLNnGERi9cnTfik2DdqRhHLtKVOYvN5wi1+NPliQcffPJq6C6fcSJ5Qth/mLJWWnlMWj3lu8TspPLqrB+wx/OjjaG+EDVsVUXXKc09vLGLUX/u/zxajRdTwmXytJGkWlG4NY+cCpCGynN43rwdssfgPk4Ij2g==",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Update Expected Spend Amount",permalink:"/api-reference/update-expected-spend-amount"},next:{title:"Submit Residential Addresses",permalink:"/api-reference/submit-residential-addresses"}},N={},R=[];function k(e){const s={admonition:"admonition",code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:i}=s;return i||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(b.default,{as:"h1",className:"openapi__heading",children:"Get Residential Addresses"}),"\n",(0,a.jsx)(l(),{method:"get",path:"/api/accounts/{cardholderId}/residential-addresses"}),"\n",(0,a.jsx)(s.p,{children:"Retrieve previously submitted residential addresses of the cardholder."}),"\n",(0,a.jsx)(s.admonition,{type:"note",children:(0,a.jsx)(s.p,{children:"This endpoint is for Immersve-conducted KYC only."})}),"\n",(0,a.jsx)(b.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsxs)(i,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,a.jsx)(s.p,{children:"Path Parameters"})})}),(0,a.jsx)("div",{children:(0,a.jsx)("ul",{children:(0,a.jsx)(p(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,a.jsx)("div",{children:(0,a.jsx)("div",{children:(0,a.jsxs)(t(),{label:void 0,id:void 0,children:[(0,a.jsxs)(y.default,{label:"200",value:"200",children:[(0,a.jsx)("div",{}),(0,a.jsx)("div",{children:(0,a.jsx)(o(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,a.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,a.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,a.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,a.jsx)("strong",{children:(0,a.jsx)(s.p,{children:"Schema"})})}),(0,a.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Array ["})})}),(0,a.jsx)(g(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,a.jsx)(g(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,a.jsx)(g(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria Street"}}),(0,a.jsx)(g(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,a.jsx)(g(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,a.jsx)(g(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,a.jsx)(g(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"Auckland"}}),(0,a.jsx)(g(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,a.jsx)(g(),{collapsible:!1,name:"country",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ISO 3166-2 Country code of the country the address is in.",example:"NZ"}}),(0,a.jsx)(g(),{collapsible:!1,name:"fullAddress",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The submitted unstructured address.",example:"1/3A Victoria Street, Epsom, Auckland 1050, New Zealand"}}),(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,a.jsx)(s.p,{children:"]"})})})]})]})}),(0,a.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,a.jsx)(u(),{responseExample:'[\n  {\n    "unitNumber": "1",\n    "streetNumber": "3A",\n    "streetName": "Victoria Street",\n    "town": "Auckland",\n    "suburb": "Epsom",\n    "state": "AKL",\n    "region": "Auckland",\n    "postalCode": "1050",\n    "country": "NZ",\n    "fullAddress": "1/3A Victoria Street, Epsom, Auckland 1050, New Zealand"\n  }\n]',language:"json"})})]})})})})]}),(0,a.jsxs)(y.default,{label:"403",value:"403",children:[(0,a.jsxs)("div",{children:[(0,a.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,a.jsx)(s.code,{children:"errorCode"})]}),(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]})]}),(0,a.jsx)("div",{children:(0,a.jsx)(o(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,a.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,a.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,a.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,a.jsx)("strong",{children:(0,a.jsx)(s.p,{children:"Schema"})})}),(0,a.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,a.jsx)(g(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,a.jsx)(g(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,a.jsx)(g(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,a.jsx)(g(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,a.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,a.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function L(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(k,{...e})}):k(e)}}}]);
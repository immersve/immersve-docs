"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[1293],{61426:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>m,default:()=>f,frontMatter:()=>c,metadata:()=>h,toc:()=>g});var a=i(25773),n=(i(27378),i(35318)),r=i(7743),s=i(30712),o=(i(76377),i(30980)),p=i(68388),l=i(34806),d=(i(23067),i(39798));const c={id:"initiate-login",title:"Initiate Login",description:"Initiate the login sequence for an existing user. Multiple authentication methods are supported.",sidebar_label:"Initiate Login",hide_title:!0,hide_table_of_contents:!0,api:{tags:["authentication"],description:"Initiate the login sequence for an existing user. Multiple authentication methods are supported.\nTo initiate login for a new user, use [Sign Up](/api-reference/sign-up/). To complete the login flow,\nuse [Complete Login](/api-reference/complete-login). For more details, see [Authentication](https://docs.immersve.com/guides/authentication).\n",security:[{none:[]}],requestBody:{content:{"application/json":{schema:{type:"object",required:["clientApplicationId","scopes"],properties:{loginMethod:{description:"The login method to use.",type:"string",enum:["algorand"],example:"algorand"},network:{description:"The blockchain network associated with the web3 address.\n\nFor more information on supported networks, see [Supported Chains](https://docs.immersve.com/guides/supported-chains/).\n",type:"string",example:"algorand-mainnet"},clientApplicationId:{description:"ID of the client application created in an Immersve partner profile.",type:"string",example:"29097f50d221858223a17633e36716f9"},scopes:{description:"An array of authorization scopes requested by the client application.",type:"array",items:{type:"string",enum:["cardholder-partner"]},example:["cardholder-partner"]},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x4d6c3443..."}},title:"login-init-request"}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{description:"The unique identifier of the login request.",type:"string",example:"49ae8f3a3928491"},loginMethod:{description:"The login method used.",type:"string",example:"algorand"},mode:{description:"Identifies intention of the user.",type:"string",enum:["cardholder-login"],example:"cardholder-login"},network:{description:"The blockchain network associated with the web3 address.",type:"string",example:"algorand-mainnet"},clientApplicationId:{description:"ID of the client application created in an Immersve partner profile.",type:"string",example:"29097f50d221858223a17633e36716f9"},scopes:{description:"An array of authorization scopes requested by the client application.",type:"array",items:{type:"string",enum:["cardholder-partner"]},example:["cardholder-partner"]},createdAt:{description:"The date and time the login request was created.",type:"string",example:"2024-02-26T08:24:11.047Z"},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x4d6c3443..."},signingChallenge:{type:"object",properties:{description:{description:"The description of the challenge.",type:"string",example:"Immersve wants to ..."},createdAt:{description:"The date and time the challenge was created.",type:"string",example:"2024-02-26T08:24:11.047Z"},expiresAt:{description:"The date and time the challenge expires.",type:"string",example:"2024-03-20T08:20:00Z"},message:{description:"The message to be signed by the web3 address owner.",example:"Immersve wants to ..."}}}},title:"login-init-response"}}}},403:{description:"**CLIENT_APPLICATION_DOMAIN_NOT_ALLOWED**\nClient application domain not allowed.\n\n**ACCOUNT_DOES_NOT_EXIST**\nUnable to log in. Account does not exist.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/auth/login-init",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{loginMethod:"algorand",network:"algorand-mainnet",clientApplicationId:"29097f50d221858223a17633e36716f9",scopes:["cardholder-partner"],address:"0x4d6c3443..."},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Initiate Login",description:{content:"Initiate the login sequence for an existing user. Multiple authentication methods are supported.\nTo initiate login for a new user, use [Sign Up](/api-reference/sign-up/). To complete the login flow,\nuse [Complete Login](/api-reference/complete-login). For more details, see [Authentication](https://docs.immersve.com/guides/authentication).\n",type:"text/plain"},url:{path:["auth","login-init"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},m=void 0,h={unversionedId:"initiate-login",id:"initiate-login",title:"Initiate Login",description:"Initiate the login sequence for an existing user. Multiple authentication methods are supported.",source:"@site/docs/initiate-login.api.mdx",sourceDirName:".",slug:"/initiate-login",permalink:"/api-reference/initiate-login",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"initiate-login",title:"Initiate Login",description:"Initiate the login sequence for an existing user. Multiple authentication methods are supported.",sidebar_label:"Initiate Login",hide_title:!0,hide_table_of_contents:!0,api:{tags:["authentication"],description:"Initiate the login sequence for an existing user. Multiple authentication methods are supported.\nTo initiate login for a new user, use [Sign Up](/api-reference/sign-up/). To complete the login flow,\nuse [Complete Login](/api-reference/complete-login). For more details, see [Authentication](https://docs.immersve.com/guides/authentication).\n",security:[{none:[]}],requestBody:{content:{"application/json":{schema:{type:"object",required:["clientApplicationId","scopes"],properties:{loginMethod:{description:"The login method to use.",type:"string",enum:["algorand"],example:"algorand"},network:{description:"The blockchain network associated with the web3 address.\n\nFor more information on supported networks, see [Supported Chains](https://docs.immersve.com/guides/supported-chains/).\n",type:"string",example:"algorand-mainnet"},clientApplicationId:{description:"ID of the client application created in an Immersve partner profile.",type:"string",example:"29097f50d221858223a17633e36716f9"},scopes:{description:"An array of authorization scopes requested by the client application.",type:"array",items:{type:"string",enum:["cardholder-partner"]},example:["cardholder-partner"]},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x4d6c3443..."}},title:"login-init-request"}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{description:"The unique identifier of the login request.",type:"string",example:"49ae8f3a3928491"},loginMethod:{description:"The login method used.",type:"string",example:"algorand"},mode:{description:"Identifies intention of the user.",type:"string",enum:["cardholder-login"],example:"cardholder-login"},network:{description:"The blockchain network associated with the web3 address.",type:"string",example:"algorand-mainnet"},clientApplicationId:{description:"ID of the client application created in an Immersve partner profile.",type:"string",example:"29097f50d221858223a17633e36716f9"},scopes:{description:"An array of authorization scopes requested by the client application.",type:"array",items:{type:"string",enum:["cardholder-partner"]},example:["cardholder-partner"]},createdAt:{description:"The date and time the login request was created.",type:"string",example:"2024-02-26T08:24:11.047Z"},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x4d6c3443..."},signingChallenge:{type:"object",properties:{description:{description:"The description of the challenge.",type:"string",example:"Immersve wants to ..."},createdAt:{description:"The date and time the challenge was created.",type:"string",example:"2024-02-26T08:24:11.047Z"},expiresAt:{description:"The date and time the challenge expires.",type:"string",example:"2024-03-20T08:20:00Z"},message:{description:"The message to be signed by the web3 address owner.",example:"Immersve wants to ..."}}}},title:"login-init-response"}}}},403:{description:"**CLIENT_APPLICATION_DOMAIN_NOT_ALLOWED**\nClient application domain not allowed.\n\n**ACCOUNT_DOES_NOT_EXIST**\nUnable to log in. Account does not exist.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/auth/login-init",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{loginMethod:"algorand",network:"algorand-mainnet",clientApplicationId:"29097f50d221858223a17633e36716f9",scopes:["cardholder-partner"],address:"0x4d6c3443..."},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Initiate Login",description:{content:"Initiate the login sequence for an existing user. Multiple authentication methods are supported.\nTo initiate login for a new user, use [Sign Up](/api-reference/sign-up/). To complete the login flow,\nuse [Complete Login](/api-reference/complete-login). For more details, see [Authentication](https://docs.immersve.com/guides/authentication).\n",type:"text/plain"},url:{path:["auth","login-init"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Sign Up",permalink:"/api-reference/sign-up"},next:{title:"Complete Login",permalink:"/api-reference/complete-login"}},u={},g=[{value:"Initiate Login",id:"initiate-login",level:2}],y={toc:g},x="wrapper";function f(e){let{components:t,...i}=e;return(0,n.kt)(x,(0,a.Z)({},y,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"initiate-login"},"Initiate Login"),(0,n.kt)("p",null,"Initiate the login sequence for an existing user. Multiple authentication methods are supported.\nTo initiate login for a new user, use ",(0,n.kt)("a",{parentName:"p",href:"/api-reference/sign-up/"},"Sign Up"),". To complete the login flow,\nuse ",(0,n.kt)("a",{parentName:"p",href:"/api-reference/complete-login"},"Complete Login"),". For more details, see ",(0,n.kt)("a",{parentName:"p",href:"https://docs.immersve.com/guides/authentication"},"Authentication"),"."),(0,n.kt)(s.Z,{mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Request Body"),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"loginMethod",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`algorand`]",schema:{description:"The login method to use.",type:"string",enum:["algorand"],example:"algorand"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"network",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The blockchain network associated with the web3 address.\n\nFor more information on supported networks, see [Supported Chains](https://docs.immersve.com/guides/supported-chains/).\n",type:"string",example:"algorand-mainnet"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"clientApplicationId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"ID of the client application created in an Immersve partner profile.",type:"string",example:"29097f50d221858223a17633e36716f9"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"scopes",required:!0,schemaName:"string[]",qualifierMessage:"**Possible values:** [`cardholder-partner`]",schema:{description:"An array of authorization scopes requested by the client application.",type:"array",items:{type:"string",enum:["cardholder-partner"]},example:["cardholder-partner"]},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"address",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x4d6c3443..."},mdxType:"SchemaItem"}))))),(0,n.kt)("div",null,(0,n.kt)(r.Z,{mdxType:"ApiTabs"},(0,n.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Successful operation")),(0,n.kt)("div",null,(0,n.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(l.Z,{mdxType:"SchemaTabs"},(0,n.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique identifier of the login request.",type:"string",example:"49ae8f3a3928491"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"loginMethod",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The login method used.",type:"string",example:"algorand"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"mode",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`cardholder-login`]",schema:{description:"Identifies intention of the user.",type:"string",enum:["cardholder-login"],example:"cardholder-login"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"network",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The blockchain network associated with the web3 address.",type:"string",example:"algorand-mainnet"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"clientApplicationId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ID of the client application created in an Immersve partner profile.",type:"string",example:"29097f50d221858223a17633e36716f9"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"scopes",required:!1,schemaName:"string[]",qualifierMessage:"**Possible values:** [`cardholder-partner`]",schema:{description:"An array of authorization scopes requested by the client application.",type:"array",items:{type:"string",enum:["cardholder-partner"]},example:["cardholder-partner"]},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The date and time the login request was created.",type:"string",example:"2024-02-26T08:24:11.047Z"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"address",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x4d6c3443..."},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.kt)("details",{style:{}},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"signingChallenge"),(0,n.kt)("span",{style:{opacity:"0.6"}}," object")),(0,n.kt)("div",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The description of the challenge.",type:"string",example:"Immersve wants to ..."},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The date and time the challenge was created.",type:"string",example:"2024-02-26T08:24:11.047Z"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"expiresAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The date and time the challenge expires.",type:"string",example:"2024-03-20T08:20:00Z"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"message",required:!1,schemaName:"",qualifierMessage:void 0,schema:{description:"The message to be signed by the web3 address owner.",example:"Immersve wants to ..."},mdxType:"SchemaItem"}))))))),(0,n.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(o.Z,{responseExample:'{\n  "id": "49ae8f3a3928491",\n  "loginMethod": "algorand",\n  "mode": "cardholder-login",\n  "network": "algorand-mainnet",\n  "clientApplicationId": "29097f50d221858223a17633e36716f9",\n  "scopes": [\n    "cardholder-partner"\n  ],\n  "createdAt": "2024-02-26T08:24:11.047Z",\n  "address": "0x4d6c3443...",\n  "signingChallenge": {\n    "description": "Immersve wants to ...",\n    "createdAt": "2024-02-26T08:24:11.047Z",\n    "expiresAt": "2024-03-20T08:20:00Z",\n    "message": "Immersve wants to ..."\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,n.kt)(d.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"CLIENT_APPLICATION_DOMAIN_NOT_ALLOWED"),"\nClient application domain not allowed."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"ACCOUNT_DOES_NOT_EXIST"),"\nUnable to log in. Account does not exist.")),(0,n.kt)("div",null,(0,n.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(l.Z,{mdxType:"SchemaTabs"},(0,n.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"},mdxType:"SchemaItem"})))),(0,n.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(o.Z,{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}f.isMDXComponent=!0}}]);
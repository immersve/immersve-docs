"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[7040],{72167:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>S,contentTitle:()=>N,default:()=>R,frontMatter:()=>v,metadata:()=>q,toc:()=>D});var i=a(62540),r=a(43023),t=a(71552),n=a.n(t),l=(a(77180),a(3188)),c=a.n(l),d=(a(81738),a(64544)),m=a.n(d),o=a(50449),p=a.n(o),h=a(81730),u=a.n(h),x=a(97672),b=a.n(x),g=a(88443),j=a.n(g),f=(a(18565),a(81381)),y=(a(26269),a(22491));const v={id:"retrieve-partner-kyc-statement",title:"Retrieve Partner KYC Statement",description:"Retrieve the KYC statement for the cardholder if it exists.",sidebar_label:"Retrieve Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},N=void 0,q={id:"retrieve-partner-kyc-statement",title:"Retrieve Partner KYC Statement",description:"Retrieve the KYC statement for the cardholder if it exists.",source:"@site/docs/retrieve-partner-kyc-statement.api.mdx",sourceDirName:".",slug:"/retrieve-partner-kyc-statement",permalink:"/api-reference/retrieve-partner-kyc-statement",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"retrieve-partner-kyc-statement",title:"Retrieve Partner KYC Statement",description:"Retrieve the KYC statement for the cardholder if it exists.",sidebar_label:"Retrieve Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"eJytWFtz4jgW/isqvWx3yhDuSbumpopu6FkmaUgBvTOZJJUR9iHWxJbckkzCUP7vW0e2wQYyTdfuS2Lkc/nO/cgbatiTpu4dfV579MGhPmhP8dhwKahLp2AUhxUQEwC5uv1EtGEGIhCGLKWypx5TfiBDHxThS8INgVeuja5Th8ZMsQgMKFSwoYJFQF26Y+h7nkyEGfnUoRzVxcwEdB/DaEDkcl8Vy1hRC7yyKA5Rcq/LLuASlg2/1W74DdZbLC+6XWhc+O0PsGi0qEMVfEu4Ap+6RiXgUO0FEDHqbqhZxyhDG8XFE03TB4dq8BLFzdqiZzG/gvW/gfmgqHv34ODJDDwFpnJY2LQ7RFEKdCyFBo2qWo0G/vOkMCAMPrI4DrnH0OLzvzSavTmEJhd/gWfQr0rGoAzPpG01Hlqx78r5UScS7lf92Gp1/csu9LqdD92LVmux7HWbF8AaC9bwe8tuj6Y2tkaUQ3iS8pyrpJmYgBnCNWHLJQ85M+CTF26CvYBXAbabnTcBdsK4jQA9BSisb05AxiPQhkUxJlo1y60ULsWegxqtVq3ZrDV780bbbbbd5mW92Wn9UdL7cX2aR0ZRBEqvgExBy0R5QMYsAvJuNB2/z3yTC7QOUTlRFQ5Xwv2eS1wW89ozrN3Z9US3v7YvAz9YDr+9fG7+ehXPXxA59yGKpQHhra/gBPh94oUchKnpBNMXfMJ9EIYvOagMeqxgBcJo4idZfsNbDm2C/1blhqzbsY4NGY90CRZTiq2PoAq5NhjJjIGwhUzMXjr9S+dYzRqBcAMVyW9UmhU4tySnhBYptjisvSKJsNV+/np9/TjufxlShw4mH6lD+4PBdDibYQPeOWVHljqUGaP4IjFwFOeh8h19FgqMkVS5HwpAUsBkabub4eZA56bULe+ozwxMlh+5MgHCLBgQ/z6prW21LpMVBqYPabo7zUOKR7DCgHjwA/EtWArbuHjambfNRrOuk74hITDkEkBiDh5U+LkmBfx/zIayjQWzTQeH+tJLsGHYWVayv5pAFaYfyqGCs5xGN/3Z7GYynWMWTUf/GU5nj9ejT8PxbFjNo/2XaQXuiX1ba5s+IokWoEg++0PugdCQn1ZLejBrtRudi64t3dwhpw2ojLgYDDrJe1+BueyC8R/XVVvxALPpNean6tvaljHhYhMxgx2XaXJ7e3tb+/KlNhjUyTQPv119CucfDIZOrdmoNVuIYgVK82yYfx+Gr/jKNqbCqTn3nt69YFbVf7i4pOX62hYVHip4OglMX5B+GAesTd6NZpNau9nr1Zrvt2HxpI9zKFagsbyKmsvfckFeAu5l4zvRuBRqsgAkW4HC0bC3a9iAlSCrfOOsPa+92nYO14r9iaYpUncabTSkCnyW2EJFjUIawsJQvmDuSBKDwqhaUMxD8t2OoYBpKbKR7yN+PPwTlJLqk/Thz3txL87OPk+mH0eDwXB8dnYvtqPal5DpsjtvXhUKCFNAhCQ6WS65hyMSEURcYzz1cUD1TM/V7afH2bw/H34ZjuePg8lw9jiezB+Hv49m87Mzci9u8g0qYJlmnSwinmWrWFeXF30vbDP6v2yZKDXR6JESLRcGnkCVA9pptFMnpx7bhf8w30ojTqoF930QtmgLn3+HpwgFtUnN9PGk3jF8FSwxgVT8b/DzStj18ZJdFdhlOKU5hluUfVHDFEyzbIzABNKnLn0C6zi8xbj0nMX8PF909fnmyLUnPc/34WqyIxBQq+LalKiQujQwJtbuOQqt83xnrHsyOijfGRP+Qr6STAQt32NmGOssnIWIR3RNyX2ohubXIvy9AKZsgLOHz7Y3Upf++tvcbiWVS9Fuctvj4lYXZK+d4gL4Wst30UPsAOSXhPugSe1n0k9MgC0my1jb/bjQRiW2YPS+/t9gEUj5fDKM/s3oanh7tBf3b0bkGdYkVhI7qE8Wa7KWCVZusa/n2qsXwB9ygLasVs7+nfF0ORlnjfvHtwemnsBsb1ujQZ2Mlvlp0bmVlFsKh5iAa+IxQRZAZN5Y3qHn83LK93fxRJgouN7bouJiKRH5dujRZr1Rb9Bd7WyvOv2bkb1CSm0iZos3N2j7uaHoctjPZqW6qJhYukH/jx8qcm8beDXncci4bUe27jZ5Nd9hKOg2VJo61D3+IeN4ST84NJDaoKDNZsE0fFVhmuLxtwRwU8FvByumOFugr+421Ocan33qLlmo4R9sf1csCO/J976VHDW0yDWBibZiYYK/qEOxQo9/rkkfUqfIRsSaUfY9D2JTknEwb7AZbZvlL0PcXPf6D4t51hjyB3s3OYav3EQy9fgXbyJHyX/Ckr6C9c9b8uzNmwzbWsuo0VMPaZr+F2HIgRA=",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Submit Partner KYC Statement",permalink:"/api-reference/submit-partner-kyc-statement"},next:{title:"Get a KYC profile",permalink:"/api-reference/get-a-kyc-profile"}},S={},D=[];function L(e){const s={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Retrieve Partner KYC Statement"}),"\n",(0,i.jsx)(c(),{method:"get",path:"/api/accounts/{cardholderAccountId}/partner-kyc-statement"}),"\n",(0,i.jsx)(s.p,{children:"Retrieve the KYC statement for the cardholder if it exists."}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(y.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(b(),{collapsible:!1,name:"accountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder account id.",example:"225d85e65495722bf6517ea0ba0d6f56"}}),(0,i.jsx)(b(),{collapsible:!1,name:"partnerAccountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The partner account id that is affiliated with the cardholder.",example:"314d85e65495722bf6517ea0ba0d4lp3"}}),(0,i.jsx)(b(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of KYC statement creation.",example:"2022-11-16T03:13:18.142Z"}}),(0,i.jsx)(b(),{collapsible:!1,name:"createdBy",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The Immersve Resource Name (IRN) that created the resource.",example:"irn:314d85e65495722bf6517ea0ba0d4lp3:api-key:SLOs3U38hdhfEqwF1JKpTw"}}),(0,i.jsx)(b(),{collapsible:!1,name:"idempotencyKey",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A client-supplied identifier that prevents duplicate creation.",example:"21ede8ef0d230d0a6bf755e07d39la54"}}),(0,i.jsx)(b(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"claims"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of claims about the cardholder's identity."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(b(),{collapsible:!1,name:"claimType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`FULL_NAME`, `DOB`, `ADDRESS`]",schema:{type:"string",description:"The type of claim.",enum:["FULL_NAME","DOB","ADDRESS"],example:"FULL_NAME"}}),(0,i.jsx)(b(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsxs)("summary",{style:{},children:[(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:(0,i.jsx)(s.p,{children:"object"})})]}),(0,i.jsx)("div",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the claim."})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"oneOf"})}),(0,i.jsxs)(j(),{children:[(0,i.jsxs)(y.default,{label:"FULL_NAME",value:"0-item-properties",children:[(0,i.jsx)(b(),{collapsible:!1,name:"givenName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Primary name.",example:"John"}}),(0,i.jsx)(b(),{collapsible:!1,name:"middleName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Other name(s).",example:"Foo Bar"}}),(0,i.jsx)(b(),{collapsible:!1,name:"familyName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Family name or surname.",example:"Doe"}}),(0,i.jsx)(b(),{collapsible:!1,name:"honorific",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Title used to address the cardholder.",example:"Mr"}})]}),(0,i.jsx)(y.default,{label:"DOB",value:"1-item-properties",children:(0,i.jsx)(b(),{collapsible:!1,name:"dateOfBirth",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder's date of birth formatted as YYYY-MM-DD",example:"1981-11-03"}})}),(0,i.jsxs)(y.default,{label:"ADDRESS",value:"2-item-properties",children:[(0,i.jsx)(b(),{collapsible:!1,name:"addressType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`RESIDENTIAL`]",schema:{type:"string",description:"The type of address.",enum:["RESIDENTIAL"],example:"RESIDENTIAL"}}),(0,i.jsx)(b(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,i.jsx)(b(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,i.jsx)(b(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria"}}),(0,i.jsx)(b(),{collapsible:!1,name:"streetType",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street type. e.g. Road, St, Avenue, Circuit.",example:"Avenue"}}),(0,i.jsx)(b(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,i.jsx)(b(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,i.jsx)(b(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,i.jsx)(b(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"AKL"}}),(0,i.jsx)(b(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,i.jsx)(b(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`]",schema:{type:"string",description:"Country code.",enum:["NZL"],example:"NZL"}})]})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(b(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"evidence"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of evidence supporting the claimed identity. At least one piece of evidence is required."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(b(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`PASSPORT`, `DRIVERS_LICENSE`]",schema:{type:"string",description:"The type of evidence.",enum:["PASSPORT","DRIVERS_LICENSE"],example:"DRIVERS_LICENSE"}}),(0,i.jsx)(b(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport number or the license number.",example:"DS230475"}}),(0,i.jsx)(b(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZL"],example:"NZL"}}),(0,i.jsx)(b(),{collapsible:!1,name:"expiry",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport expiry formatted as YYYY-MM-DD. Required for PASSPORT.",example:"2024-10-12"}}),(0,i.jsx)(b(),{collapsible:!1,name:"version",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The driver's license version. Required for DRIVERS_LICENSE.",example:"978"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(b(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An Alpha3 (ISO-3166-1) country code representing the country in which the user is being verified.",example:"NZL"}})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "accountId": "225d85e65495722bf6517ea0ba0d6f56",\n  "partnerAccountId": "314d85e65495722bf6517ea0ba0d4lp3",\n  "createdAt": "2022-11-16T03:13:18.142Z",\n  "createdBy": "irn:314d85e65495722bf6517ea0ba0d4lp3:api-key:SLOs3U38hdhfEqwF1JKpTw",\n  "idempotencyKey": "21ede8ef0d230d0a6bf755e07d39la54",\n  "claims": [\n    {\n      "claimType": "FULL_NAME"\n    }\n  ],\n  "evidence": [\n    {\n      "evidenceType": "DRIVERS_LICENSE",\n      "documentId": "DS230475",\n      "country": "NZL",\n      "expiry": "2024-10-12",\n      "version": "978"\n    }\n  ],\n  "region": "NZL"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"403",value:"403",children:[(0,i.jsxs)("div",{children:[(0,i.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,i.jsx)(s.code,{children:"errorCode"})]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"KYC_STATEMENT_DOES_NOT_EXIST"}),"\nPartner has not submitted any KYC statements"]})]}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(b(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(b(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(b(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(b(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function R(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(L,{...e})}):L(e)}}}]);
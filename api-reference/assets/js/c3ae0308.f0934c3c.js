"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[7040],{72167:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>L,contentTitle:()=>v,default:()=>S,frontMatter:()=>N,metadata:()=>q,toc:()=>C});var i=a(62540),r=a(43023),t=a(71552),n=a.n(t),l=(a(77180),a(3188)),d=a.n(l),c=(a(81738),a(64544)),m=a.n(c),o=a(50449),p=a.n(o),h=a(81730),u=a.n(h),x=a(97672),g=a.n(x),f=a(88443),j=a.n(f),y=(a(18565),a(81381)),b=(a(26269),a(22491));const N={id:"retrieve-partner-kyc-statement",title:"Retrieve Partner KYC Statement",description:"Retrieve the KYC statement for the cardholder if it exists.",sidebar_label:"Retrieve Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"eJytV21z2zYS/isYfLnEQ8l6seSU0+mMEis91amdsZRpU9vjgsTSRE0CDADa5mn4328WJCVSkht37r7YErTYffbZV6ypZfeG+tf0oQjprUc5mFCLzAolqU+vwGoBj0BsDOT86wdiLLOQgrQkUtqdhkzzWCUcNBEREZbAszDW9KlHM6ZZChY0GlhTyVKgPt1emIWhyqVdcOpRgeYyZmO6i2FxRlS0a4pVV9EKPLM0S1DzdMJO4R1EAz4aD/iATYPodDKBwSkf/wDBYEQ9quFbLjRw6ludg0dNGEPKqL+mtshQh7FayHtalrceNRDmWtjCoWeZOIfi38A4aOpf33p4soRQg+0cNj5tD1GVBpMpacCgqdFggP9CJS1Iix9ZliUiZOjx8V8G3V7vQ1PBXxBa5FWrDLQVlbaNxX0vdqlcHSSRCN7lcTSa8HcTmE5OfpicjkZBNJ0MT4ENAjbg02gypaWLrZXtEL7KeH2rZZnYmFkiDGFRJBLBLHDyJGy8E/AuwPHw5EWAJ0k2RoChBlQ2s69AJlIwlqUZJlo3y50WoeQOQYPRqDcc9obT1WDsD8f+8F1/eDL6o2X3ffE6RhZpCto8ArkCo3IdArlgKZA3i6uLtxU3tUJHiK6FunCElv73KPFZJnoPUPjLT5dm/GX8LuZxNP/29HH4y3m2ekLkgkOaKQsyLM7hFfBnJEwESNszOaYvcCI4SCsiAbqCnml4BGkN4XmV3/ASoUPgL1VuwiYnjtiEidS0YDGtWXEAVSKMxUhWFwgLVG530ulfpsZqCwQiLHQ0v1BpTuHKibwmtCixweH8lXmKrfbjl0+f7i5mv86pR88u31OPzs7OrubLJTbgLSlbsdKjzFotgtzCQZz7xrfyVSgwRkrXPDSAlITLyHU3K+yezXWrW15TzixcRu+FtjHCbC4g/l1RV9u6aIs1Dpa3Zbk9rUOKR/CIAQnhH8S3udL4JuT91r1NNtqiT2aWJMDwlgSSCQihc18Y0sD/22xgsqjpanvbqHGJ4VGuwhxbh5tqDRMY1kx0KcmYMQh7j77XKXwEbZCRlkauBZ72EhGCNEBx8HCB5KVCMqs0OlWndHFRTeOOsVZoNvHA4Gi4F9VQ+k5HkGSWZDEbkzeL5WVvPJxOe8O3pAZNQsWxhWUaDEamCVf9q5DkKRZh1flzg/uEIQGg2CNo7Co7Y+rij0+0nU26XlZ6D0XY27TwXjN6aVmi9MlgjI50gS9zF2O0KJUlLEnUE7ZcRTLQkdKpA8VCFN+OJw3MKFlNC4748fBP0FrpD4rDnzfyRh4dfby8er84O5tfHB3dyE2X5woqW25dItUypYEwDUQqYvIoEiF2V0SQCoOxNocB9Ss7518/3C1Xs9X81/nF6u7scr68u7hc3c1/XyxXR0fkRn6uh2/MKssmD1JhETqTRXfumRvpku3/sqCg1twgIy1ZIS3cg24H9GQwLr1ausrO/XxrdUelA8E5SMzaDeffudOEgrqkZuZwUm8vfJEst7HS4j/A60rY1mnLrw7sNpxWdeIAdj/0MAXLKhtTsLHi1Kf34IjDBdinxywTx/WOZI7XBzbm8rhepbrJjkBAPzYbd64T6tPY2sz4x6i0L+p1ox+qdK98l0zyQD2TSgVtr8BLjHUVzkbFHVLTog/N0Hqjxu8BMO0CXH34qHTKLPXpL7+t3EDr7NPbpu+OmwdBXP3sNW+H5169xuxjByA/54KDIb2fyCy3MbaYKmPdW0VIY3XuCsbs2v8Ngliph1fDmH1enM+/Hpy7s88L8gAFybTCDspJUJBC5Vi5zapXW+++Hf4RAcZddXp2nxuv11Pd7Al+eHlh+h7sZlFfnPXJIqpPm86tldpIeMTGwpCQSRIAUXVjeYPM1+VUr37ynjDZ3HrrikrISCHyZqT5dNgf9Ad0WzubLXn2eeFeH8rYlLnirR3avFSbLof9bNmqi46LrcfX//jGrdm28GyPs4QJ145c3a3rar7GUNBNqAz1qH/4DXy4pG89GitjUdF6HTADX3RSlnj8LQddVM/OR6YFC5Cr6zXOfPzMqR+xxMDf+P7mqu5nb8n3ntkHHW1yTbqNhCU5fqMexQo9/NIvb0uvyUbEWknOwhAy29KxN2+wGW2a5c/zFRLa7T8sE1VjqD+4tfYQvnYTqczjX9zCDor/iCV9DsVPG/HqlxcvbGqtkkambsuy/C9w6e5u",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},v=void 0,q={id:"retrieve-partner-kyc-statement",title:"Retrieve Partner KYC Statement",description:"Retrieve the KYC statement for the cardholder if it exists.",source:"@site/docs/retrieve-partner-kyc-statement.api.mdx",sourceDirName:".",slug:"/retrieve-partner-kyc-statement",permalink:"/api-reference/retrieve-partner-kyc-statement",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"retrieve-partner-kyc-statement",title:"Retrieve Partner KYC Statement",description:"Retrieve the KYC statement for the cardholder if it exists.",sidebar_label:"Retrieve Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Submit Partner KYC Statement",permalink:"/api-reference/submit-partner-kyc-statement"},next:{title:"Get a KYC profile",permalink:"/api-reference/get-a-kyc-profile"}},L={},C=[];function D(e){const s={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"Retrieve Partner KYC Statement"}),"\n",(0,i.jsx)(d(),{method:"get",path:"/api/accounts/{cardholderAccountId}/partner-kyc-statement"}),"\n",(0,i.jsx)(s.p,{children:"Retrieve the KYC statement for the cardholder if it exists."}),"\n",(0,i.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(b.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!1,name:"accountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder account id.",example:"225d85e65495722bf6517ea0ba0d6f56"}}),(0,i.jsx)(g(),{collapsible:!1,name:"partnerAccountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The partner account id that is affiliated with the cardholder.",example:"314d85e65495722bf6517ea0ba0d4lp3"}}),(0,i.jsx)(g(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of KYC statement creation.",example:"2022-11-16T03:13:18.142Z"}}),(0,i.jsx)(g(),{collapsible:!1,name:"createdBy",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The Immersve Resource Name (IRN) that created the resource.",example:"irn:314d85e65495722bf6517ea0ba0d4lp3:api-key:SLOs3U38hdhfEqwF1JKpTw"}}),(0,i.jsx)(g(),{collapsible:!1,name:"idempotencyKey",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A client-supplied identifier that prevents duplicate creation.",example:"21ede8ef0d230d0a6bf755e07d39la54"}}),(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"claims"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of claims about the cardholder's identity."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(g(),{collapsible:!1,name:"claimType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`FULL_NAME`, `DOB`, `ADDRESS`]",schema:{type:"string",description:"The type of claim.",enum:["FULL_NAME","DOB","ADDRESS"],example:"FULL_NAME"}}),(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsxs)("summary",{style:{},children:[(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:(0,i.jsx)(s.p,{children:"object"})})]}),(0,i.jsx)("div",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the claim."})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"oneOf"})}),(0,i.jsxs)(j(),{children:[(0,i.jsxs)(b.default,{label:"FULL_NAME",value:"0-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"givenName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Primary name.",example:"John"}}),(0,i.jsx)(g(),{collapsible:!1,name:"middleName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Other name(s).",example:"Foo Bar"}}),(0,i.jsx)(g(),{collapsible:!1,name:"familyName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Family name or surname.",example:"Doe"}}),(0,i.jsx)(g(),{collapsible:!1,name:"honorific",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Title used to address the cardholder.",example:"Mr"}})]}),(0,i.jsx)(b.default,{label:"DOB",value:"1-item-properties",children:(0,i.jsx)(g(),{collapsible:!1,name:"dateOfBirth",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder's date of birth formatted as YYYY-MM-DD",example:"1981-11-03"}})}),(0,i.jsxs)(b.default,{label:"ADDRESS",value:"2-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"addressType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`RESIDENTIAL`]",schema:{type:"string",description:"The type of address.",enum:["RESIDENTIAL"],example:"RESIDENTIAL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,i.jsx)(g(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,i.jsx)(g(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria"}}),(0,i.jsx)(g(),{collapsible:!1,name:"streetType",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street type. e.g. Road, St, Avenue, Circuit.",example:"Avenue"}}),(0,i.jsx)(g(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,i.jsx)(g(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,i.jsx)(g(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"AKL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,i.jsx)(g(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`]",schema:{type:"string",description:"Country code.",enum:["NZL"],example:"NZL"}})]})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"evidence"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of evidence supporting the claimed identity. At least one piece of evidence is required."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsxs)(j(),{children:[(0,i.jsxs)(b.default,{label:"passport",value:"0-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`PASSPORT`]",schema:{type:"string",description:"The type of evidence.",enum:["PASSPORT"]}}),(0,i.jsx)(g(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport number.",example:"DS230475"}}),(0,i.jsx)(g(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`, `AUS`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZL","AUS"],example:"NZL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"expiry",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport expiry formatted as YYYY-MM-DD.",example:"2024-10-12"}})]}),(0,i.jsxs)(b.default,{label:"drivers-license",value:"1-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`DRIVERS_LICENSE`]",schema:{type:"string",description:"The type of evidence.",enum:["DRIVERS_LICENSE"]}}),(0,i.jsx)(g(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The license number.",example:"DS230475"}}),(0,i.jsx)(g(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`, `AUS`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZL","AUS"],example:"NZL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Where appropriate, the state or region that issued the document, in the format provided by the issuer.\ne.g. for Australia a Victorian Drivers license, this would be 'VIC'.\nFor New Zealand no value is required.\n",example:"VIC"}}),(0,i.jsx)(g(),{collapsible:!1,name:"version",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The driver's license card number or version",example:"978"}})]})]})]}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(g(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An Alpha3 (ISO-3166-1) country code representing the country in which the user is being verified.",example:"NZL"}})]})]})}),(0,i.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "accountId": "225d85e65495722bf6517ea0ba0d6f56",\n  "partnerAccountId": "314d85e65495722bf6517ea0ba0d4lp3",\n  "createdAt": "2022-11-16T03:13:18.142Z",\n  "createdBy": "irn:314d85e65495722bf6517ea0ba0d4lp3:api-key:SLOs3U38hdhfEqwF1JKpTw",\n  "idempotencyKey": "21ede8ef0d230d0a6bf755e07d39la54",\n  "claims": [\n    {\n      "claimType": "FULL_NAME"\n    }\n  ],\n  "evidence": [\n    null,\n    null\n  ],\n  "region": "NZL"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(b.default,{label:"403",value:"403",children:[(0,i.jsxs)("div",{children:[(0,i.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,i.jsx)(s.code,{children:"errorCode"})]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"KYC_STATEMENT_DOES_NOT_EXIST"}),"\nPartner has not submitted any KYC statements"]})]}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(g(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(g(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(g(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function S(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(D,{...e})}):D(e)}}}]);
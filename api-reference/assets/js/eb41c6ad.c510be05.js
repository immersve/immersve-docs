"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[2738],{96953:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>m,default:()=>f,frontMatter:()=>d,metadata:()=>h,toc:()=>u});var s=a(25773),i=(a(27378),a(35318)),r=a(7743),n=a(30712),o=(a(76377),a(30980)),p=a(68388),l=a(34806),c=(a(23067),a(39798));const d={id:"create-challenge",title:"Create Challenge",description:"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed.",sidebar_label:"Create Challenge",hide_title:!0,hide_table_of_contents:!0,api:{tags:["authentication"],description:"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed.\n",requestBody:{content:{"application/json":{schema:{type:"object",required:["purpose","network","address"],properties:{purpose:{description:"The purpose of the challenge.",type:"string",enum:["claim-web3-address"]},network:{description:"The blockchain network associated with the web3 address.",type:"string",enum:["polygon-mainnet","polygon-amoy"]},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x123..."}},title:"create-challenge-request"}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{description:"The unique identifier of the challenge.",type:"string",example:"GlSDzZHcxrSDeJbKu"},purpose:{description:"The purpose of the challenge.",type:"string",enum:["claim-web3-address"]},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x123..."},network:{description:"The blockchain network associated with the web3 address.",type:"string",enum:["polygon-mainnet","polygon-amoy"]},description:{description:"The description of the challenge.",type:"string",example:"To verify ownership of the web3 address...."},expiresAt:{description:"The time the challenge expires.",type:"string",example:"2024-03-20T08:20:00.000Z"},createdAt:{description:"The time the challenge was created.",type:"string",example:"2024-03-20T08:20:00.000Z"},message:{description:"The message to be signed by the web3 address owner.",type:"string",example:"To verify ownership of the web3 address ..."}},title:"create-challenge-response"}}}},403:{description:"**INVALID_CHAIN**\nChain not supported.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/challenges",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{purpose:"claim-web3-address",network:"polygon-mainnet",address:"0x123..."},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Create Challenge",description:{content:"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed.\n",type:"text/plain"},url:{path:["api","challenges"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},m=void 0,h={unversionedId:"create-challenge",id:"create-challenge",title:"Create Challenge",description:"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed.",source:"@site/docs/create-challenge.api.mdx",sourceDirName:".",slug:"/create-challenge",permalink:"/api-reference/create-challenge",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"create-challenge",title:"Create Challenge",description:"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed.",sidebar_label:"Create Challenge",hide_title:!0,hide_table_of_contents:!0,api:{tags:["authentication"],description:"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed.\n",requestBody:{content:{"application/json":{schema:{type:"object",required:["purpose","network","address"],properties:{purpose:{description:"The purpose of the challenge.",type:"string",enum:["claim-web3-address"]},network:{description:"The blockchain network associated with the web3 address.",type:"string",enum:["polygon-mainnet","polygon-amoy"]},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x123..."}},title:"create-challenge-request"}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{description:"The unique identifier of the challenge.",type:"string",example:"GlSDzZHcxrSDeJbKu"},purpose:{description:"The purpose of the challenge.",type:"string",enum:["claim-web3-address"]},address:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x123..."},network:{description:"The blockchain network associated with the web3 address.",type:"string",enum:["polygon-mainnet","polygon-amoy"]},description:{description:"The description of the challenge.",type:"string",example:"To verify ownership of the web3 address...."},expiresAt:{description:"The time the challenge expires.",type:"string",example:"2024-03-20T08:20:00.000Z"},createdAt:{description:"The time the challenge was created.",type:"string",example:"2024-03-20T08:20:00.000Z"},message:{description:"The message to be signed by the web3 address owner.",type:"string",example:"To verify ownership of the web3 address ..."}},title:"create-challenge-response"}}}},403:{description:"**INVALID_CHAIN**\nChain not supported.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/challenges",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{purpose:"claim-web3-address",network:"polygon-mainnet",address:"0x123..."},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Create Challenge",description:{content:"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed.\n",type:"text/plain"},url:{path:["api","challenges"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Auth Token Exchange",permalink:"/api-reference/auth-token-exchange"},next:{title:"Initiate SIWE Login",permalink:"/api-reference/initiate-siwe-login"}},g={},u=[{value:"Create Challenge",id:"create-challenge",level:2}],y={toc:u},b="wrapper";function f(e){let{components:t,...a}=e;return(0,i.kt)(b,(0,s.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"create-challenge"},"Create Challenge"),(0,i.kt)("p",null,"This endpoint creates a challenge for the user to sign to verify ownership of their web3 address. By signing the message actions such as creating a funding source can be performed."),(0,i.kt)(n.Z,{mdxType:"MimeTabs"},(0,i.kt)(c.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Request Body"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(p.Z,{collapsible:!1,name:"purpose",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`claim-web3-address`]",schema:{description:"The purpose of the challenge.",type:"string",enum:["claim-web3-address"]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"network",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`polygon-mainnet`, `polygon-amoy`]",schema:{description:"The blockchain network associated with the web3 address.",type:"string",enum:["polygon-mainnet","polygon-amoy"]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"address",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x123..."},mdxType:"SchemaItem"}))))),(0,i.kt)("div",null,(0,i.kt)(r.Z,{mdxType:"ApiTabs"},(0,i.kt)(c.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Successful operation")),(0,i.kt)("div",null,(0,i.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(c.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(c.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(p.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique identifier of the challenge.",type:"string",example:"GlSDzZHcxrSDeJbKu"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"purpose",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`claim-web3-address`]",schema:{description:"The purpose of the challenge.",type:"string",enum:["claim-web3-address"]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"address",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The web3 address to which the challenge is directed.",type:"string",example:"0x123..."},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"network",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`polygon-mainnet`, `polygon-amoy`]",schema:{description:"The blockchain network associated with the web3 address.",type:"string",enum:["polygon-mainnet","polygon-amoy"]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The description of the challenge.",type:"string",example:"To verify ownership of the web3 address...."},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"expiresAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The time the challenge expires.",type:"string",example:"2024-03-20T08:20:00.000Z"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The time the challenge was created.",type:"string",example:"2024-03-20T08:20:00.000Z"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The message to be signed by the web3 address owner.",type:"string",example:"To verify ownership of the web3 address ..."},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "id": "GlSDzZHcxrSDeJbKu",\n  "purpose": "claim-web3-address",\n  "address": "0x123...",\n  "network": "polygon-mainnet",\n  "description": "To verify ownership of the web3 address....",\n  "expiresAt": "2024-03-20T08:20:00.000Z",\n  "createdAt": "2024-03-20T08:20:00.000Z",\n  "message": "To verify ownership of the web3 address ..."\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(c.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"INVALID_CHAIN"),"\nChain not supported.")),(0,i.kt)("div",null,(0,i.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(c.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(c.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(p.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}f.isMDXComponent=!0}}]);
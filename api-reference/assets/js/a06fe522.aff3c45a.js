"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[5142],{39195:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>E,contentTitle:()=>v,default:()=>C,frontMatter:()=>N,metadata:()=>q,toc:()=>M});var i=a(62540),r=a(43023),n=a(71552),t=a.n(n),l=(a(77180),a(3188)),c=a.n(l),d=(a(81738),a(64544)),m=a.n(d),o=a(50449),p=a.n(o),h=a(81730),u=a.n(h),x=a(97672),j=a.n(x),g=a(88443),f=a.n(g),b=(a(18565),a(81381)),y=(a(26269),a(22491));const N={id:"list-cards",title:"List Cards",description:"Lists cards by account.",sidebar_label:"List Cards",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},v=void 0,q={id:"list-cards",title:"List Cards",description:"Lists cards by account.",source:"@site/docs/list-cards.api.mdx",sourceDirName:".",slug:"/list-cards",permalink:"/api-reference/list-cards",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-cards",title:"List Cards",description:"Lists cards by account.",sidebar_label:"List Cards",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Get Card Details",permalink:"/api-reference/get-card"},next:{title:"Contact Details",permalink:"/api-reference/contact-details"}},E={},M=[];function k(e){const s={p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(b.default,{as:"h1",className:"openapi__heading",children:"List Cards"}),"\n",(0,i.jsx)(c(),{method:"get",path:"/api/accounts/{accountId}/cards"}),"\n",(0,i.jsx)(s.p,{children:"Lists cards by account."}),"\n",(0,i.jsx)(s.p,{children:"This API uses cursor-based pagination. Start by making a request without a cursor to get the first page. Use the nextCursor from the pageInfo in the response as the cursor for subsequent requests to retrieve further pages. Continue until nextCursor is undefined, indicating no more data."}),"\n",(0,i.jsx)(b.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"accountId",in:"path",description:"AccountId linked to transactions",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Query Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsxs)("ul",{children:[(0,i.jsx)(p(),{className:"paramsItem",param:{name:"limit",in:"query",description:"Number of records to return",required:!1,schema:{type:"number"}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cursor",in:"query",description:"Cursor to retrieve the next page of records",required:!1,schema:{type:"string"}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"excludeExpired",in:"query",description:"Filter by expiry state",required:!1,schema:{type:"boolean"}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"status",in:"query",description:"Filter by card status",required:!1,schema:{type:"string",enum:["created","active","cancelled","shipped"]}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"expiresAfter",in:"query",description:"Timestamp to filter out cards with an expiration date after the given time. Value should be an ISO 8601 string or RFC 2822 string. excludeExpired must be false",required:!1,schema:{type:"string"}}})]})})]}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(t(),{label:void 0,id:void 0,children:[(0,i.jsxs)(y.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Successful operation"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"items"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(j(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Card primary identifier",example:"91ad6fea3b52ca58d60d7fd310f789ec"}}),(0,i.jsx)(j(),{collapsible:!1,name:"accountId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"User account ID linked to card",example:"057aa15913a57f50577234c8426534c0"}}),(0,i.jsx)(j(),{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`virtual`]",schema:{type:"string",description:"Type of the card",enum:["virtual"]}}),(0,i.jsx)(j(),{collapsible:!1,name:"createdAt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of card creation",example:"2022-11-16T03:13:18.142Z"}}),(0,i.jsx)(j(),{collapsible:!1,name:"modifiedAt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of card modification",example:"2022-11-16T03:13:18.142Z"}}),(0,i.jsx)(j(),{collapsible:!1,name:"expiresAt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of card expiration",example:"2029-02-28T23:59:59.999Z"}}),(0,i.jsx)(j(),{collapsible:!1,name:"isBlocked",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Whether the card is blocked"}}),(0,i.jsx)(j(),{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`active`, `cancelled`, `created`, `shipped`]",schema:{type:"string",description:"Status of the card",enum:["active","cancelled","created","shipped"]}}),(0,i.jsx)(j(),{collapsible:!1,name:"fundingSourceIds",required:!0,schemaName:"array",qualifierMessage:void 0,schema:{type:"array",description:"List of Funding Source IDs linked to the card"}}),(0,i.jsx)(j(),{collapsible:!1,name:"cardProgramId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of card program linked to the card",example:"91ad6fea3b52ca58d60d7fd310f789ec"}}),(0,i.jsx)(j(),{collapsible:!1,name:"regionCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An Alpha2 (ISO-3166-1) country code representing the country where the card is issued.",example:"NZ"}}),(0,i.jsx)(j(),{collapsible:!1,name:"expiry",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Expiry date of the card in the format YYYYMM",example:"202409"}}),(0,i.jsx)(j(),{collapsible:!1,name:"panFirst6",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"First 6 digits of the card's PAN (Primary Account Number)",example:"123456"}}),(0,i.jsx)(j(),{collapsible:!1,name:"panLast4",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Last 4 digits of the card's PAN (Primary Account Number)",example:"1920"}}),(0,i.jsx)(j(),{collapsible:!1,name:"immersveExpiration",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Deprecated field, use expiresAt",example:"2022-11-16T03:18:23.431Z"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"pageInfo"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Page info for paginated results, undefined if no page info"})}),(0,i.jsx)(j(),{collapsible:!1,name:"nextCursor",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Cursor for next page, undefined if no more pages",example:"dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="}})]})]})})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "items": [\n    {\n      "id": "91ad6fea3b52ca58d60d7fd310f789ec",\n      "accountId": "057aa15913a57f50577234c8426534c0",\n      "type": "virtual",\n      "createdAt": "2022-11-16T03:13:18.142Z",\n      "modifiedAt": "2022-11-16T03:13:18.142Z",\n      "expiresAt": "2029-02-28T23:59:59.999Z",\n      "isBlocked": true,\n      "status": "active",\n      "fundingSourceIds": [\n        null\n      ],\n      "cardProgramId": "91ad6fea3b52ca58d60d7fd310f789ec",\n      "regionCode": "NZ",\n      "expiry": "202409",\n      "panFirst6": "123456",\n      "panLast4": "1920",\n      "immersveExpiration": "2022-11-16T03:18:23.431Z"\n    }\n  ],\n  "pageInfo": {\n    "nextCursor": "dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="\n  }\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Request fields are invalid"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"BAD_REQUEST"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errors",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",example:"Expected string, received number"}}})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "BAD_REQUEST",\n  "errors": [\n    "Expected string, received number"\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"403",value:"403",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"No Authorization to access resource."})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(j(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function C(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(k,{...e})}):k(e)}}}]);
"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[8148],{44785:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>T,contentTitle:()=>N,default:()=>S,frontMatter:()=>v,metadata:()=>q,toc:()=>E});var i=a(62540),r=a(43023),t=a(71552),n=a.n(t),l=(a(77180),a(3188)),d=a.n(l),c=(a(81738),a(64544)),m=a.n(c),o=a(50449),p=a.n(o),h=a(81730),u=a.n(h),x=a(97672),j=a.n(x),g=a(88443),y=a.n(g),f=(a(18565),a(81381)),b=(a(26269),a(22491));const v={id:"submit-kyc-statement",title:"Submit KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},N=void 0,q={id:"submit-kyc-statement",title:"Submit KYC Statement",description:"Submit a KYC statement about the cardholder.",source:"@site/docs/submit-kyc-statement.api.mdx",sourceDirName:".",slug:"/submit-kyc-statement",permalink:"/api-reference/submit-kyc-statement",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"submit-kyc-statement",title:"Submit KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"eJy9WG1v2zgS/isEv1xbyI6dl6bVhwWc2Dl4mzo5y+liLwmytDSyuJFILUkl1Rn+74shJVuy3aQ5HC5fYlHzxnl5ZkZLathCU/+WPpYhvfeozEExw6UYR9Snuphn3HQey7CjDTOQgTDUoxHoUPEcyahPA0tEGPny+zlZkxE2l4UhJgESMhUlMo1AdalHc6ZYBgYUql1SwTKgPt3QDMJQFsKMI+pRjvJzZpIdpeMhkfGWdMIcK2qB7yzLU5T88YSdwieIe9HhUS/qsY/z+PTkBHqn0dFnmPcOqUcV/FVwBRH1jSrAozpMIGPUX1JT5ihDG8XFgq5W944YtDmTUYkUoRQGveIvKcvzlIfWewd/ajRzuStKzv+E0LSU3lIeQZZLAyIsv0BpXy7wnh4NU8YzjRd64hGIEDBIucIwGQ4aBW8x71i97boBCVMOwnR0gQZDRFCy4TEHRUzCDEkgzTXB11IZ0pBPYqnuhGYxpCVRYFTJxYJUHtHkmZsEg+7SxuA7jJBmGTQSwzzzEMg76C66hMUG40aMYkKjUSRmPC0UvO/eiVnCNdGJLNKIhAkTC0D9BFiYkIjHMShkeAKluRR1OrSTsJRFZU33TrTS4rAP0Y/SImUnx3S1jsLrHhVkkOYJOyTvxsFV56j/8WOn/57YZFQlCWUEREGuQKOfK6/Ub7kgzwkPE3tYaFCEazIHJHsChVGJ2gk9+TfaViXGxjamFCv3BDvl2qBzHMPesvyHrlLAlKiKG2hJXqdsxFF0xgUzUiFBlYjlpCpiVDFDppVHmSivYlvi22IMN/Yiw6szuvJ+/P7i5vLyYTL4OnqRajAcTkdBQLE267PKOatVo25+3lM1S10B64ih1HW5mLJLBoakwJBLAMk5hNDi55rUVf6iXzeuaoJCLcY61KORDAvMaQuMVfLYvMi5Kmnj8jnTGs22Xnu7wKqemhIjxfG0k/IQhAbr6tdyoaVstZG1jsdq1Tjd12g6Fa44yjZG2wOdS6EdBh72evivHdE2FCQMywpEjU4QEV2EIWgdF2laoo3H+6RMnRVk07cIU0C4eGIpd677LztAG8bR0kKfy6iZqlwYWIBq1v9xr7fyKmrn61142oDFGYvItPajR0EpqbZ07OEaT74NLsfDh+noXzejYPYwnlzfzNb8+1Dnh7ndvmQGWrPFa9qda4mpUscOAK+C8CwBkkrn/LoZVEEiKMEF0CN/FaBK90CkIjkrU8kiwoxRfF4YaIOtvddt/767fq+7ldQLDmm0nZy36ytWdt9vv2/EuRXGZnAatcdy3rEvOpidK6vuuHe0m6dBYV2OoCOkISxN5TNExEiSg4qlyqxHWGj9g53aPitgWgpXJhH2Ijz8Y23JH3fiTnz4cHE1PRsPh6PJhw93YgpaFioEEklwuuC7RU6cHkCBLQ8hiS7imIe2qeegMq4RVvR+g7pOz5ffzx+C2WA2+jqazIKHydXsYXB5efXbaIiKr5kywvVH1BpKEfNFodwlXVW327+2Pf//Xp9Hb6jPC6nmPIpAvKE619FwMwrT+2eUDcONYIVJpOL/gYj+D/PxyObjyqMZmETiwpAXpk58nx6wnB9UM7k+WO4Z8VcHuYvpzoqhQT3VK0KhUurTxJhc+wcotMuzDJR+gm4osx0guORPQAbXYxJYGbYNtkUY0OZlGTNE/KaMezQpLBQ3pbVpYDsHmclHENS/vUcl22cenTG1AEOq+67pck7spI4k+BBAqOBnXu+V2DAtwFx26do2Zp0d6AJabTj4PAembP66HxdSZcxQn/76m8X7tS0bwM+5W1HsbpYAiyx7tcZ972B+PMLueBUAkH8WPAJNOr+QQWESHKIquMaxngttVGHRQNeq65u/Sbt2TKtdZ/28GMfRsf19t80YJ7eiIuNhl4zj6rQeFpWUawqPGFxlQibIHIispo93dplxRUpCBczyMlFzvbelijA13ayco7qod/e+11eazUaDS8Rmh7hdNkZ3N5d7dNPwbK9hBq7iM65sZfc/f+p3+v2ORQCvzb2Z2rdlJFJIXGhC6tOv6O8FfwJRzYu/ygTBOuNRlEJ1diElOWNIGbOMp/VoOZSwq7ZeA7aVsihSoHVFNR0F4+FoMhsPLqlHC8HNpMjmoPBOFv4UwOboaLA5c6q/8dBIxdn6vNb+BKJAzDTy2S4TRfiYMoHpo4t5oebUp6NcW6SxMIc0Xy6bEXGPudSGpa4H0H7vpNeYzd3qh/W+WWpul+1J26fXgyC4vprO2hO+T4fB4VHv+PRkW+B6hfDpYe/wuNPvdfqHFjS3BA+n42+jafBwOT4fTYLRz8tfX/Hb+LyxYPj08+knurpfYRnGEoO1edXv9rq9xpY3rtAaQdnOhFKbjFlkq6o22AwAwY++VTU+17z1s1WFHAa+m4M8Zdw2bNtWllW/u0VYwfyrOh71qL//s9b+pnfv0URqxHS6XM6ZhhuVrlZ4bEdWh/9PTHE2T13kI67xd0T9mKUaXrjsu2nV8d+T176c7b1ojZvCbogsLfCJevTRAs++W9q4VsiKtjrKc2dRp1pBa0k7cxmmn+PAPpabF2nvGwMI7ikenVcf5zJXR4o9YxqyZ2e0zF2T8ZfubElTJhaF3UuoE4l/fwMlSDPu",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"KYC",permalink:"/api-reference/kyc"},next:{title:"Get KYC Statement",permalink:"/api-reference/get-kyc-statement"}},T={},E=[];function M(e){const s={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Submit KYC Statement"}),"\n",(0,i.jsx)(d(),{method:"put",path:"/api/accounts/{cardholderAccountId}/partner-kyc-statement"}),"\n",(0,i.jsx)(s.p,{children:"Submit a KYC statement about the cardholder."}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsx)(m(),{className:"openapi-tabs__mime",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})}),(0,i.jsx)("strong",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"idempotencyKey",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A client-supplied identifier that helps support idempotency for\nsafely retrying requests without submitting the same statement twice (e.g. after a transient failure).\nThis should change for each different version of the KYC statement you submit.\n",example:"21ede8ef0d230d0a6bf755e07d39la54"}}),(0,i.jsx)(j(),{collapsible:!1,name:"region",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An Alpha2 (ISO-3166-1) country code representing the country in which the user is being verified.",example:"NZ"}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"claims"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of claims about the cardholder's identity."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsxs)(y(),{children:[(0,i.jsxs)(b.default,{label:"DOB",value:"0-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"claimType",required:!1,schemaName:"enum",qualifierMessage:"**Possible values:** [`DOB`]",schema:{type:"enum",description:"The type of claim.",example:"DOB",enum:["DOB"]}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the DOB claim."})}),(0,i.jsx)(j(),{collapsible:!1,name:"dateOfBirth",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder's date of birth formatted as YYYY-MM-DD",example:"1981-11-03"}})]})]})})]}),(0,i.jsxs)(b.default,{label:"FULL_NAME",value:"1-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"claimType",required:!1,schemaName:"enum",qualifierMessage:"**Possible values:** [`FULL_NAME`]",schema:{type:"enum",description:"The type of claim.",example:"FULL_NAME",enum:["FULL_NAME"]}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the FULL_NAME claim."})}),(0,i.jsx)(j(),{collapsible:!1,name:"honorific",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Title used to address the cardholder.",example:"Mr"}}),(0,i.jsx)(j(),{collapsible:!1,name:"givenName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Primary name.",example:"John"}}),(0,i.jsx)(j(),{collapsible:!1,name:"middleName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Other name(s).",example:"Foo Bar"}}),(0,i.jsx)(j(),{collapsible:!1,name:"familyName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Family name or surname.",example:"Doe"}})]})]})})]}),(0,i.jsxs)(b.default,{label:"ADDRESS",value:"2-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"claimType",required:!1,schemaName:"enum",qualifierMessage:"**Possible values:** [`ADDRESS`]",schema:{type:"enum",description:"The type of claim.",enum:["ADDRESS"]}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsxs)("summary",{style:{},children:[(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:(0,i.jsx)(s.p,{children:"object"})})]}),(0,i.jsx)("div",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the address claim."})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"oneOf"})}),(0,i.jsxs)(y(),{children:[(0,i.jsxs)(b.default,{label:"StructuredAddress",value:"0-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"addressType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`RESIDENTIAL`]",schema:{type:"string",description:"The type of address.",enum:["RESIDENTIAL"],example:"RESIDENTIAL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetType",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street type. e.g. Road, St, Avenue, Circuit.",example:"Avenue"}}),(0,i.jsx)(j(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,i.jsx)(j(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,i.jsx)(j(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"AKL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ISO 3166-2 Country code of the country the address is in.",example:"NZ"}})]}),(0,i.jsxs)(b.default,{label:"UnstructuredAddress",value:"1-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"addressType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`RESIDENTIAL`]",schema:{type:"string",description:"The type of address.",enum:["RESIDENTIAL"],example:"RESIDENTIAL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"fullAddress",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An address written as a single string. i.e. not an address that is structured\ninto individual components (e.g. unit number, street number,\nstreet name, etc.) This is useful when the address cannot be provided in\na structured way. We recommend using a structured address whenever\npossible as correct parsing is not guaranteed.",example:"2/45 Laddier Road, Centurion, The Reeds, Auckland, Auckland 0100, New Zealand"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ISO 3166-2 Country code of the country the address is in.",examples:["NZ","AU"]}})]})]})]})]})})]})]})]}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"evidence"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of evidence supporting the claimed identity. At least one piece of evidence is required."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsxs)(y(),{children:[(0,i.jsxs)(b.default,{label:"passport",value:"0-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`PASSPORT`]",schema:{type:"string",description:"The type of evidence.",enum:["PASSPORT"]}}),(0,i.jsx)(j(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport number.",example:"DS230475"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZ`, `AU`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZ","AU"],example:"NZ"}}),(0,i.jsx)(j(),{collapsible:!1,name:"expiry",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport expiry formatted as YYYY-MM-DD.",example:"2024-10-12"}})]}),(0,i.jsxs)(b.default,{label:"drivers-license",value:"1-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`DRIVERS_LICENSE`]",schema:{type:"string",description:"The type of evidence.",enum:["DRIVERS_LICENSE"]}}),(0,i.jsx)(j(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The license number.",example:"DS230475"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZ`, `AU`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZ","AU"],example:"NZ"}}),(0,i.jsx)(j(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Where appropriate, the state or region that issued the document, in the format provided by the issuer.\ne.g. for Australia a Victorian Drivers license, this would be 'VIC'.\nFor New Zealand no value is required.\n",example:"VIC"}}),(0,i.jsx)(j(),{collapsible:!1,name:"version",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The driver's license card number or version",example:"978"}})]})]})]}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(b.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"KYC statement has been submitted successfully"})}),(0,i.jsx)("div",{})]}),(0,i.jsxs)(b.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Request parameters are invalid"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"INVALID_REQUEST_INPUT"}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"errors"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(j(),{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Invalid type"}}),(0,i.jsx)(j(),{collapsible:!1,name:"path",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The location of the invalid path param, query param or payload attribute.",example:"items[1].attributes.invalidField"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})}),(0,i.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "INVALID_REQUEST_INPUT",\n  "errors": [\n    {\n      "message": "Invalid type",\n      "path": "items[1].attributes.invalidField"\n    }\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(b.default,{label:"403",value:"403",children:[(0,i.jsxs)("div",{children:[(0,i.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,i.jsx)(s.code,{children:"errorCode"})]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"KYC_STATEMENTS_NOT_ALLOWED"}),"\nPartner is not configured to submit KYC statements"]})]}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(j(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function S(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(M,{...e})}):M(e)}}}]);
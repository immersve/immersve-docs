"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[5042],{17314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>q,frontMatter:()=>y,metadata:()=>r,toc:()=>b});const r=JSON.parse('{"id":"get-spending-prerequisites","title":"Get Spending Prerequisites","description":"Check for outstanding cardholder \'Spending Prerequisites\'. Clients should","source":"@site/docs/get-spending-prerequisites.api.mdx","sourceDirName":".","slug":"/get-spending-prerequisites","permalink":"/api-reference/get-spending-prerequisites","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-spending-prerequisites","title":"Get Spending Prerequisites","description":"Check for outstanding cardholder \'Spending Prerequisites\'. Clients should","sidebar_label":"Get Spending Prerequisites","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"immersve-api","custom_edit_url":null},"sidebar":"primarySidebar","previous":{"title":"Prerequisites","permalink":"/api-reference/prerequisites"},"next":{"title":"Simulator","permalink":"/api-reference/simulator"}}');var i=n(62540),s=n(43023),a=n(20701),o=n.n(a),d=n(9923),p=n.n(d),c=n(27457),u=n.n(c),m=n(6815),h=n.n(m),l=(n(17202),n(11208),n(72034));const y={id:"get-spending-prerequisites",title:"Get Spending Prerequisites",description:"Check for outstanding cardholder 'Spending Prerequisites'. Clients should",sidebar_label:"Get Spending Prerequisites",hide_title:!0,hide_table_of_contents:!0,api:"eJztO2tvGzmSf4XgfdhkIMmvJE6EwwKyLCfa2LJPkmduYBky1V2SOO4me0m27T5D//1QJPulh+2ZzezeAZsvsdmsYrHeVSw/U8MWmrZvaKJAwd9TrrkBTW8bVCagmOFS9EPapgswTZ2ACLlYNOt7GzQEHSie4Gbapt0lBPdkLhWRqdGGWRgSMBUuZRSCIhM68pjIVRXThLZIN+IgjCZ6KdMonIhUAzFLIApMqgSEpHo24UIblQZ4sCZGkkXKQ7c/1aCIWSqZLpa4MBFIAJFiJpmyR9sdv0nEmrUmYiIKomrXI0wBCfkDDyEkXBiJWAGINmwBuk3OUgvUIN9/7TYIEyHpXJy3JuKXJQgCLFgSOUcC7D1KQMJFyANmHLXaMJNqwjWZUHk/obgoSrI93wImSKJkABDiZY1iQrPAkEdu7B25slx2lwGH+eb7r12ynd2375bGJLq9txfKQLd4HIPSD9AKZLxnGan37rNgh9T33k+E4zYKOpbIJDCMR5qwmUwNWcpHJDKQQqexo2Wn6CYCkWQyVVU1qcgKnhJQHEQArYmgDYpoQJsTGWa0/UwDKQwIgz+yJImQr1yKvd806uMz1cESYoY/mSwB2qZy9hsExuPhCkI0ADz5SsmFYnE/pA06d4IdyVQFYFcsJ9gsgk4sU2GqK91UKRBBhoaTKDQdw0Fb2mpoSxq0UVwsNoynf4r6YnU1cVCWiwpyVbGfUhGCoqtNIt+IHxF5xSUOtsT9yKOIsNQspeL/A4QtGIoKD1u//6uHuX144JwzQ2IpICNmyYw3bzIDwh4YjxApkaIgokFCEDLmghlrdSTmQiqSCm50jZKC76/Sku9Eds6sfwjJI1qZ5S0yIj+8RdxeE2VEiigjOk0SqYwm16NT2qAg0hgVBn+7XTXofRaM7dGvkYC7kBlokiHkNikFeVzyYEkSpkyGPiCQIkTLEAvCTeXA3EKbfgOgUiKUAFVZ8zQNIeQKAnOtojdIilwPz5E1jpTCg6LLmaH3dbggJGxurGeFjCzZA5BAxkkE+EUqAk8cf0Lw+yxwzkrrFs0pWnBnka/wCQWBmqMylP0aSQo0+qYGfjKPkkRgkKIcIJDOJ8XMkHfQWrTIXef67n2LjJdckzjVBi8kBeR24AA5aAICVcrqW2ENuREWDsrzm7DAArbIf87UX8lAGiBNYvAMrp3a5M7FqVmqcx27u8+CbzwMQYwMJPqOSHtx5P4yD1/KsspqijaQ5BysgFXYyJRi2RaRRlybXN8Qiw2R+p4n+Q37XqFIN1cect1vkW7pg7lwrERikAUukDlkOS8TJV101JAwxQxEGXngjHSu+q2K9ror4cJTYlXJRRbasO6bBaYZLJkQEGnrmFHIwnAWNVkYKtCa3q5WDWq4ieClfKTpYwNd4fbSwRuVgl3QiRTa+ebD/f1/KHzUPX09K9oUDzcQ2/WQo5ysd5PKQVo82YDFzizYAlDiTGSXc9q+eS6unTvtfhk9aePFsOaQNahLMTbjk/vefi7k5EOKdSMeqPKV2TObxQkN6oVAG3QWyeDersl7C+42584xR6FjpswUma5YYKaPihtLII/TCDkyDVgUWXjjIUNIFGCy5OXYeIMD2ZVsEAT13oAZo/gsxQ16IspT1tNQdDzkznLqzqZ4d+XN7ixyYJh2oczQBLyYN2nCb2BA6dyYdpLZIHxOvDbOImhhDhfwOQ8mooLlgamMzBjGMh89d+H7iyascn+bRUkBa+o1QtGgN7CiIb+gaMiVu9Gmmq0lOh6q4831TW7e23bui61qkByTNYEZ387Lv40uB6Rz0t8OSt5Zp8LFui/2SWqrnrIuQQGpZcNaRjzkJouYWLSkWuyB2HvYb31uHXzZYzOOvidoLU0c/Qe6ifcldzas/WWumR2ZQ8UanZWjPQjrH7ZsfmIYhPH0BL0xbOU1QufcKtCuGpSLJDUvOqyXr5BT9fKJhdbSTest6Z9an+5y29L61/Ean0i9HW8eQ1YrGxZkav61d/7B10u5MIcfP7nrrRo0BrOUb6gGRnWj8WA1L7bOhxcRoOd2JOsW+Q6Zq55jZoIlRi3kjbYOVCrMLkKYc+ESrs5J30bsii/K4wHpItadXmiNoAJKG8xFFhmm2lJzU6s4WxsSTd+SJqN07hKWRZKFd/XuQ1nRaBCuPscQg2m1S/2YIN/G4ytydTkatxyPLZ7XmexCh91c1Pr1w/No4q+6eTv2xooNj/KB2DpLxzkHvVaHVVyJTUm0ryPlPYjWH6pNx9uwFUTgF8xgW9TpeKH9XnY0998GtKl3M1jC94r0Yg+eIEgNND1iWpNEzqiDfftvyy3olwMWfpoDO5p9PAzYx8/hp/3weB4eHezPjz9/gQDpu63rMmbgf2LKdp8Ff2K6ls5i7vI1TNcgZjxC4urLyVIKpHkuo0g+Tu+zYIpSKfbhApIHMbjOCZhpXgg4pz9lRVfFgVRqgKn339iZ/H+fF7Io8mnXD80QJ9vUqq4491nwxm6AFNA0PIYG0RCkCqwfQ4ryTkC1YeJrRevyYCL6G20KW4Ha4r3eyFs1aGDYN/4Wz4S7LAXYjYky61FJDExwsZinkQ09TSObeZYr18ibCHhKIsZxP3lcZnk6zDURACGEjoG51n//tTsdXI6no3FnOO5h2ydf6V5eXJ33yrX+4OxyeNEZ9y8H00Gvd1p86P33VX/YH3y1KquAaSler9rPfc2ufbpPPKAj2TKyJDw3a1RbrMux9xHmENg6FkWrC5sLECVYrMeJscLQZeu2WubbbgWeM2PB/ULJVIQTEWBPX7uOz5zxKGfXG9MlJOx1EVcu5+5gL1TtIfRPrQh+7g37Z33L6EHnore+1jk9HfZGo/Xl08uTbUuXw+kOgJ/7o45dO7u8HuDCSf/yojce9ruj6Vmnf243XQ0vz/rnvel5/6I/ng57ne43uz66Hl31Bk4brgffB5e/DKwi1K78qtKnMbPMsM3OnCuVPXkwLD3/H/GJpZX8RftuEaLb4g3JbmdYvtXUPNadw3VH5hyi0AV0A/hqYZuvTq+Y1UHXbAOtGxNhG2XeOazBqpgLWDPh3BLcC0yROOuJuPPmsIMAqSwmvPQuHc+Vz36fcjHNyaS2JzetBFf81W1zCOo9q1qbCp9WfExYzxY6F+evZAuv5AMsjnbkAy9E//+TQbUaQ1er2x28rJzo2n5v6RK6PiCtZpL0eSIImdQ7eRPaJje4Tsiz+w+3WPrw0yTPECe0UftsUu2+r+VgtX1lvuD2buuN1QC8WtN2SYzFM+MVOt2/5+ovuAnf4gwTBnfOWaShsb7DtQI2MG3B5vZjQecIzwv3CrHVjaa4oc/kJnR922oD8LUjH1iUwqsH+tp4y4H1hdsNbpRH+bbKxlmTvJPwR1j2KuUzKaM/QHbCMowWu6Vs8/CL1LAZj7jJ3GFCigJwA6KkKW8c1emq0FSlZ7LeFHQ49p8+ns1OTw6PDj5+Ov7M5hDMjj4dz/ePDsMvR2efPhzOP304+LzP2FGNlIlva+wWyQ7zIDX9dBTA8fzg+PBj7/j46EO3d/j589nno0/HcHAyO/hw1PuyP5sdne1/PDhcY0apdYjGF4lVXhSc8D/kWr3dddxnwQ9xG/Wq6y0Ow5UCDjovnB9A8XlWK52rV5vkSaxV9jX+YqbmsG1LpiZ0dbvGxxi0LvgwLEs94lUF3+WikAhp35hsC6l8mivauSKNZzgqMCchMww74TXPsrr988TxghPfUjEXeP85CrGtOv9nk7Crwn8jHSyOdtLhQ3qJCf+7nYjVxCcAH9zLXj1TGbqXQZcI5knnA4t4/gj5Ax4BHZXder3DhYGFbeEWqcaH/f0iQRu82tY/YSEZ5u+aDQpKSdXdUVOVUP3Bz53z/ul02Puv695oPO0Prq7HBfw/0P32tvvK6Y61NgV0DRCzfFsPMJKO+XmH0QuJIAaX1zfI31NQmfsFc/i8PVokma0aLfZeNwe3reK7bnmsZ6gM64/FN8UVPd23698rcq6JsSqcSrrKEt60H5qomSuvo0ebOnqNXRLsSUhDGDp1V7snoLBCt+zwVU/RCfZVoY3qhYe8K8i4w3Gwn346uxye9E9Pe4OffpqIvtDpfM4DzLsRd8y1zmfoNo9qOQzn/Z97A/TsF/3RRWfc/YaYhuA7tRF/AIF+O5TgyLc+m/jn+OK7R9btDE+nV8PLr8POxdQrKuLrVocuClQziCQ2nCRhxQCGba9X2k9YYmgtA27ZgNzxR51dD077g6/T0eX1sNurHnZWbzYHTPhw46aDHIP9KTlRHik2ePLSf9j7is2fKltQjbGmTJSc88hWzizCOj4jPnEJbfeF5ZMeIZ/PAYeOyFzJuAhyoI3t6CycGK59hX3zFYzFf+Xw375rtfaw2LFVpVvbe09AhInEvlmtcrZ9MTfhlJ/uDa1Csb/m9WB0fXV1iS2wKV7ZXbV6Q4/Bq2wGJh+XgrDCqtG4M+5d9AbjXczCBwdtSOo6Tb5lWDSMEX2NXXaIDNsRb2Lbv8K9H/0O934m1cxO9vwO517YMy26iy8DXItiqA/93Q9zZ0d07dGRJlKb3HG2qXt92TU6rEE9AMaim/VnHJbwWiq6pVX6ADhkREYWB8UWyisvQZvhBpWuiuMWSQpSxU1maeoEOMFGxviqRds3t3jI+lqDjplagCEdNxNW7Es4PoK6LfjLCAIFb/m8FWOFtBGqq9PIOjGFAiALkL12I23TGTBlVdT9cGbbvbRN//aLzQgKWsqUIOG4gOMBiA5YaMHdwzd9aqIK3MNmAxsHj7/a6WHS/CvppDjJbLy5WRuuPlzmR+c3/12nawe02mTW29E4iKbNALc8xDu8fhfpn7ZIf+5X8wcQJWWxo5GHC9t3lzE36Ibeze1kpLXDctqUiRzqvbVG9ETDcqy5V75urk0Ql7a9+TRZfNoY1d3yqZydpW6wtRhk3T5puj5TWqKszHbWFmvjijcijaJbO28yl3gvtHsHc9Dab+3T0r0Uc4mdq75NHaU2MRPl4AXF+Ld9qn1dkJXxvn//ZcK//zLhz/7LBO94DDyZPfvciPrrZ0tcQLxBr5Tb4WZIvG3QJcbP9g19fsaGxrWKVitctiWPiw4PTHE0YRdKcseG8Qpdcpt2nco3rTnj9ij102H1zAfDkIPAMJKYF/feVkI8DrFgMPF/gBHbdIUq9oijDOyRtik+LCTOybef3dozxWm61FaO1OHEf/8LwU3o2g==",sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},g=void 0,f={},b=[];function I(e){const t={a:"a",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.default,{as:"h1",className:"openapi__heading",children:"Get Spending Prerequisites"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/api/spending-prerequisites",context:"endpoint"}),"\n",(0,i.jsx)(t.p,{children:'Check for outstanding cardholder "Spending Prerequisites". Clients should\nuse the returned prerequisite instructions to guide the user through the\ncard onboarding user journey.'}),"\n",(0,i.jsx)(t.p,{children:'Spending prerequisites are divided into three stages: Funding, KYC, and AML.\nWhen each of these three stages indicate the status is "ok" then the\ncardholder can proceed to transact with their card.'}),"\n",(0,i.jsxs)(t.p,{children:["See the ",(0,i.jsx)(t.a,{href:"https://docs.immersve.com/guides/kyc-spending-prerequisites/",children:"KYC Spending Prerequisites"}),"\nguide for more details about how to consume the prerequisite instructions\nfor your cardholder onboarding experience."]}),"\n",(0,i.jsx)(l.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(p(),{parameters:void 0}),"\n",(0,i.jsx)(u(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",required:["cardProgramId","fundingSourceId","spendableAmount","spendableCurrency"],properties:{cardProgramId:{type:"string",description:"ID of card program to create the card under"},fundingSourceId:{type:"string",description:"ID of the Funding Source the card will authorize against"},spendableAmount:{type:"string",description:"Amount of fiat money that should be available on the card, denominated in minor units"},spendableCurrency:{type:"string",description:"Currency to be used when creating the card. Currently only supports USD",enum:["USD"]},kycType:{type:"string",description:"Type of KYC depending on which party is conducting it",enum:["immersve-conducted","partner-conducted"]},kycRedirectUrl:{type:"string",description:"A URL to which the user can be redirected after they have completed or exited the kyc process."},kycRegion:{type:"string",description:"The country in which the user resides, in two letter country code format (e.g. `AU`). This must be one of the countries enabled in the card program for your partner account. <br> Note - this is only required when using the `kycHiddenSteps` option to hide the region KYC step."},kycHiddenSteps:{type:"array",description:"A list of KYC steps to skip in the Immersve Conducted UI. Cardholder information for these steps must be provided separately via API.",enum:["region","expected-spend","contact-channels","residential-address"]}},title:"get-spending-prerequisite-request"}}},required:!0}}),"\n",(0,i.jsx)(h(),{id:void 0,label:void 0,responses:{200:{content:{"application/json":{schema:{type:"object",properties:{prerequisites:{type:"array",items:{discriminator:{propertyName:"stage"},anyOf:[{title:"Funding Instruction",type:"object",required:["stage","status"],properties:{stage:{enum:["funding"]},status:{enum:["action-required","pending","blocked","ok"]},actionType:{enum:["smart_contract_write","simulator_call"]},type:{deprecated:!0,type:"string",description:"The prerequisite instruction type. This attribute is\ndeprecated. Clients should use `stage` and `actionType` instead.\n"},params:{description:"The parameters for the prerequisite instruction, if applicable. Specific\nparameters vary based on the prerequisite instruction's action type.\n",oneOf:[{title:"Smart Contract Write Params",type:"object",properties:{contractAddress:{type:"string",description:"The address of the smart contract"},abi:{description:"The JSON ABI of the smart contract (contains only required details. more details here https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json)",type:"array",items:{type:"object",properties:{type:{type:"string",enum:["function"]},name:{type:"string",example:"approve",description:"The name of the function"},inputs:{type:"array",items:{type:"object",properties:{name:{description:"The name of the parameter",type:"string",example:"_spender"},type:{description:"The type of the parameter",type:"string",example:"address"}}}}},outputs:{type:"array",items:{type:"object",properties:{name:{description:"The name of the parameter",type:"string"},type:{description:"The type of the parameter",type:"string",example:"uint256"}}}}}},method:{type:"string",description:"Smart contract method"},params:{type:"object",description:"Smart contract call params. Keys are matching names and order defined in ABI"}}},{title:"Simulator Call Params",type:"object",description:"Simulator strategy deposit instructions.",properties:{url:{type:"string",description:"The `payload` instructions should be send to this URL using an HTTP POST."},payload:{type:"object",description:"The payload with the instructions for the deposit.",properties:{amount:{type:"string",description:"The simulated deposit amount in minor units of the funding source token."},fundingSourceId:{type:"string",description:"The funding source to deposit funds to."}}}},example:{url:"https://test.immersve.com/api/simulator/execute-deposit",payload:{amount:1e6,fundingSourceId:"91ad6fea3b52ca58d60d7fd310f789ec"}}}]}}},{title:"KYC Instruction",type:"object",required:["stage","status"],properties:{stage:{enum:["kyc"]},status:{enum:["action-required","pending","blocked","ok"]},actionType:{enum:["submit_contact_email","submit_contact_phone","follow_kyc_url","submit_kyc_statement","set_expected_spend_amount","submit_residential_addresses"]},type:{deprecated:!0,type:"string",description:"The prerequisite instruction type. This attribute is\ndeprecated. Clients should use `stage` and `actionType` instead.\n"},params:{allOf:[{description:"The parameters for the prerequisite instruction, if applicable.\n",type:"object",properties:{kycUrl:{type:"string",description:"A one-time, secure URL for redirecting the cardholder to the\nImmersve-conducted KYC user experience.\n"},ctaHint:{type:"string",description:"Hint for supplying a meaningful call-to-action to the cardholder\nexplaining why action is needed.\n",enum:["KYC_NOT_STARTED","KYC_NOT_COMPLETED","KYC_INFORMATION_NEEDED","KYC_EXPIRING"]},reasons:{type:"array",description:"List of specific reasons why a KYC action is required. These coded reasons\ncan be used to help prompt users for more information when KYC background\nchecks have failed.\n",items:{type:"object",properties:{code:{type:"string",description:"KYC action reason code.",enum:["ID_NOT_VERIFIED","NAME_NOT_VERIFIED","ADDRESS_NOT_VERIFIED","DOB_NOT_VERIFIED","DOB_OR_ADDRESS_NOT_VERIFIED","VISA_NOT_FOUND","BIOMETRICS_FAILED","PROFILE_LIMIT_REACHED","SUSPENDED","UNKNOWN"]},description:{type:"string",description:"Human readable reason description."}}}},status:{deprecated:!0,type:"string",description:"The cardholder's KYC status. This attribute is deprecated. Clients should\nuse the prerequisite `status` field to detect when checks are in progress,\nthe `ctaHint` field to determine why action is required, and the params\n`reasons` field to detect when or why KYC checks have failed.\n",enum:["check_in_progress","kyc_required","kyc_check_failed"]}},title:"prerequisite-kyc-params"}]}}},{title:"AML Instruction",type:"object",properties:{stage:{enum:["aml"]},status:{enum:["pending","blocked","ok"]},type:{deprecated:!0,type:"string",description:"The prerequisite instruction type. This attribute is\ndeprecated. Clients should use `stage` instead.\n"}}}],title:"prerequisite-instruction"}}},title:"get-spending-prerequisite-response"},example:'{\n  "prerequisites": [\n    {\n      "stage": "funding",\n      "status": "action-required",\n      "actionType": "smart_contract_write",\n      "params": {\n        "abi": [\n          {\n            "constant": false,\n            "inputs": [\n              {\n                "name": "_spender",\n                "type": "address"\n              },\n              {\n                "name": "_value",\n                "type": "uint256"\n              }\n            ],\n            "name": "approve",\n            "outputs": [\n              {\n                "name": "",\n                "type": "bool"\n              }\n            ],\n            "payable": false,\n            "stateMutability": "nonpayable",\n            "type": "function"\n          }\n        ],\n        "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",\n        "method": "approve",\n        "params": {\n          "_spender": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",\n          "_value": "1000000"\n        }\n      }\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required",\n      "actionType": "follow_kyc_url",\n      "params": {\n        "kycUrl": "https://verify.immersve.com"\n        "reasons": [{\n          "code": "ADDRESS_NOT_VERIFIED"}],\n          "message": "Residential Address could not be matched in the required number of databases"\n        }]\n      }\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required"\n      "actionType": "submit_contact_email",\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required",\n      "actionType": "submit_contact_phone",\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required",\n      "actionType": "set_expected_spend_amount",\n    },\n    {\n      "stage": "aml",\n      "status": "pending",\n    }\n  ]\n}\n'}}},400:{description:"Request fields are invalid",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:400},statusName:{type:"string",example:"Bad Request"},errorCode:{type:"string",example:"INVALID_REQUEST_INPUT"},errors:{type:"array",items:{type:"object",properties:{message:{type:"string",example:"Invalid type"},path:{type:"string",description:"The location of the invalid path param, query param or payload attribute.",example:"items[1].attributes.invalidField"}}},required:["message","path"]}},required:["statusCode","statusName","errorCode"],title:"api-error-400"}}}},403:{description:"User is not allowed to perform the action with the reason stated in the `errorCode`\n\n**FORBIDDEN**\nInsufficient permissions to perform the action.\n\n**LIVENESS_MISMATCH**\nResource liveness does not match request liveness.\n\n**CARD_PROGRAM_INVALID**\nCard program does not belong to a partner this cardholder is associated with.\n\n**FUNDING_SOURCE_INVALID**\nFunding source cannot be used with this card program.\n\n**KYC_PROFILE_REGION_MISMATCH**\nThe KYC profile is already approved for a region different from the requested region.\nUse the [Get KYC Profile](../get-kyc-profile/) endpoint to determine the current region of the KYC profile.\n\n**UNSUPPORTED_KYC_REGION**\nThe KYC region is not yet supported.\n\n**KYC_STATEMENT_REGION_MISMATCH**\nThe latest unchecked KYC statement is for a region that is different from the requested region.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}}})]})}function q(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(I,{...e})}):I(e)}}}]);
"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[8024],{49379:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>M,contentTitle:()=>N,default:()=>w,frontMatter:()=>v,metadata:()=>q,toc:()=>S});var i=a(62540),r=a(43023),t=a(71552),l=a.n(t),n=(a(77180),a(3188)),m=a.n(n),c=(a(81738),a(64544)),d=a.n(c),o=a(50449),p=a.n(o),h=a(81730),u=a.n(h),x=a(97672),g=a.n(x),j=a(88443),y=a.n(j),b=(a(18565),a(81381)),f=(a(26269),a(22491));const v={id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},N=void 0,q={id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",source:"@site/docs/submit-partner-kyc-statement.api.mdx",sourceDirName:".",slug:"/submit-partner-kyc-statement",permalink:"/api-reference/submit-partner-kyc-statement",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"KYC",permalink:"/api-reference/kyc"},next:{title:"Retrieve Partner KYC Statement",permalink:"/api-reference/retrieve-partner-kyc-statement"}},M={},S=[];function D(e){const s={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(b.default,{as:"h1",className:"openapi__heading",children:"Submit Partner KYC Statement"}),"\n",(0,i.jsx)(m(),{method:"put",path:"/api/accounts/{cardholderAccountId}/partner-kyc-statement"}),"\n",(0,i.jsx)(s.p,{children:"Submit a KYC statement about the cardholder."}),"\n",(0,i.jsx)(b.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsx)(d(),{className:"openapi-tabs__mime",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})}),(0,i.jsx)("strong",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!1,name:"idempotencyKey",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A client-supplied identifier that prevents duplicate creation.",example:"21ede8ef0d230d0a6bf755e07d39la54"}}),(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"claims"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of claims about the cardholder's identity."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(g(),{collapsible:!1,name:"claimType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`FULL_NAME`, `DOB`, `ADDRESS`]",schema:{type:"string",description:"The type of claim.",enum:["FULL_NAME","DOB","ADDRESS"],example:"FULL_NAME"}}),(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsxs)("summary",{style:{},children:[(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:(0,i.jsx)(s.p,{children:"object"})})]}),(0,i.jsx)("div",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the claim."})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"oneOf"})}),(0,i.jsxs)(y(),{children:[(0,i.jsxs)(f.default,{label:"FULL_NAME",value:"0-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"givenName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Primary name.",example:"John"}}),(0,i.jsx)(g(),{collapsible:!1,name:"middleName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Other name(s).",example:"Foo Bar"}}),(0,i.jsx)(g(),{collapsible:!1,name:"familyName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Family name or surname.",example:"Doe"}}),(0,i.jsx)(g(),{collapsible:!1,name:"honorific",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Title used to address the cardholder.",example:"Mr"}})]}),(0,i.jsx)(f.default,{label:"DOB",value:"1-item-properties",children:(0,i.jsx)(g(),{collapsible:!1,name:"dateOfBirth",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder's date of birth formatted as YYYY-MM-DD",example:"1981-11-03"}})}),(0,i.jsxs)(f.default,{label:"ADDRESS",value:"2-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"addressType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`RESIDENTIAL`]",schema:{type:"string",description:"The type of address.",enum:["RESIDENTIAL"],example:"RESIDENTIAL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,i.jsx)(g(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,i.jsx)(g(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria"}}),(0,i.jsx)(g(),{collapsible:!1,name:"streetType",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street type. e.g. Road, St, Avenue, Circuit.",example:"Avenue"}}),(0,i.jsx)(g(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,i.jsx)(g(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,i.jsx)(g(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"AKL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,i.jsx)(g(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`]",schema:{type:"string",description:"Country code.",enum:["NZL"],example:"NZL"}})]})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"evidence"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of evidence supporting the claimed identity. At least one piece of evidence is required."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsxs)(y(),{children:[(0,i.jsxs)(f.default,{label:"passport",value:"0-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`PASSPORT`]",schema:{type:"string",description:"The type of evidence.",enum:["PASSPORT"]}}),(0,i.jsx)(g(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport number.",example:"DS230475"}}),(0,i.jsx)(g(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`, `AUS`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZL","AUS"],example:"NZL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"expiry",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport expiry formatted as YYYY-MM-DD.",example:"2024-10-12"}})]}),(0,i.jsxs)(f.default,{label:"drivers-license",value:"1-item-properties",children:[(0,i.jsx)(g(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`DRIVERS_LICENSE`]",schema:{type:"string",description:"The type of evidence.",enum:["DRIVERS_LICENSE"]}}),(0,i.jsx)(g(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The license number.",example:"DS230475"}}),(0,i.jsx)(g(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`, `AUS`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZL","AUS"],example:"NZL"}}),(0,i.jsx)(g(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Where appropriate, the state or region that issued the document, in the format provided by the issuer.\ne.g. for Australia a Victorian Drivers license, this would be 'VIC'.\nFor New Zealand no value is required.\n",example:"VIC"}}),(0,i.jsx)(g(),{collapsible:!1,name:"version",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The driver's license card number or version",example:"978"}})]})]})]}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(g(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An Alpha3 (ISO-3166-1) country code representing the country in which the user is being verified.",example:"NZL"}})]})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(l(),{label:void 0,id:void 0,children:[(0,i.jsxs)(f.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"object"})})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:"{}",language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Request parameters are invalid"})}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400}}),(0,i.jsx)(g(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"}}),(0,i.jsx)(g(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"BAD_REQUEST"}}),(0,i.jsx)(g(),{collapsible:!1,name:"errors",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",example:"Expected string, received number"}}})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "BAD_REQUEST",\n  "errors": [\n    "Expected string, received number"\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"403",value:"403",children:[(0,i.jsxs)("div",{children:[(0,i.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,i.jsx)(s.code,{children:"errorCode"})]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"KYC_STATEMENTS_NOT_ALLOWED"}),"\nPartner is not configured to submit KYC statements"]})]}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(g(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(g(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(g(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function w(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(D,{...e})}):D(e)}}}]);
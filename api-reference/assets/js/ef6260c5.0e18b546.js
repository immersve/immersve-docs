"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[8024],{49379:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>M,contentTitle:()=>N,default:()=>P,frontMatter:()=>b,metadata:()=>q,toc:()=>S});var i=a(62540),r=a(43023),t=a(71552),n=a.n(t),l=(a(77180),a(3188)),m=a.n(l),c=(a(81738),a(64544)),d=a.n(c),o=a(50449),p=a.n(o),h=a(81730),u=a.n(h),x=a(97672),j=a.n(x),g=a(88443),y=a.n(g),v=(a(18565),a(81381)),f=(a(26269),a(22491));const b={id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},N=void 0,q={id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",source:"@site/docs/submit-partner-kyc-statement.api.mdx",sourceDirName:".",slug:"/submit-partner-kyc-statement",permalink:"/api-reference/submit-partner-kyc-statement",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"KYC",permalink:"/api-reference/kyc"},next:{title:"Retrieve Partner KYC Statement",permalink:"/api-reference/retrieve-partner-kyc-statement"}},M={},S=[];function E(e){const s={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(v.default,{as:"h1",className:"openapi__heading",children:"Submit Partner KYC Statement"}),"\n",(0,i.jsx)(m(),{method:"put",path:"/api/accounts/{cardholderAccountId}/partner-kyc-statement"}),"\n",(0,i.jsx)(s.p,{children:"Submit a KYC statement about the cardholder."}),"\n",(0,i.jsx)(v.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsx)(d(),{className:"openapi-tabs__mime",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})}),(0,i.jsx)("strong",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"idempotencyKey",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A client-supplied identifier that prevents duplicate creation.",example:"21ede8ef0d230d0a6bf755e07d39la54"}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"claims"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of claims about the cardholder's identity."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(j(),{collapsible:!1,name:"claimType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`FULL_NAME`, `DOB`, `ADDRESS`]",schema:{type:"string",description:"The type of claim.",enum:["FULL_NAME","DOB","ADDRESS"],example:"FULL_NAME"}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsxs)("summary",{style:{},children:[(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:(0,i.jsx)(s.p,{children:"object"})})]}),(0,i.jsx)("div",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the claim."})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"oneOf"})}),(0,i.jsxs)(y(),{children:[(0,i.jsxs)(f.default,{label:"FULL_NAME",value:"0-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"givenName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Primary name.",example:"John"}}),(0,i.jsx)(j(),{collapsible:!1,name:"middleName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Other name(s).",example:"Foo Bar"}}),(0,i.jsx)(j(),{collapsible:!1,name:"familyName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Family name or surname.",example:"Doe"}}),(0,i.jsx)(j(),{collapsible:!1,name:"honorific",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Title used to address the cardholder.",example:"Mr"}})]}),(0,i.jsx)(f.default,{label:"DOB",value:"1-item-properties",children:(0,i.jsx)(j(),{collapsible:!1,name:"dateOfBirth",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder's date of birth formatted as YYYY-MM-DD",example:"1981-11-03"}})}),(0,i.jsxs)(f.default,{label:"ADDRESS",value:"2-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"addressType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`RESIDENTIAL`]",schema:{type:"string",description:"The type of address.",enum:["RESIDENTIAL"],example:"RESIDENTIAL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetType",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street type. e.g. Road, St, Avenue, Circuit.",example:"Avenue"}}),(0,i.jsx)(j(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,i.jsx)(j(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,i.jsx)(j(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"AKL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`]",schema:{type:"string",description:"Country code.",enum:["NZL"],example:"NZL"}})]})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"evidence"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of evidence supporting the claimed identity. At least one piece of evidence is required."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(j(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`PASSPORT`, `DRIVERS_LICENSE`]",schema:{type:"string",description:"The type of evidence.",enum:["PASSPORT","DRIVERS_LICENSE"],example:"DRIVERS_LICENSE"}}),(0,i.jsx)(j(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport number or the license number.",example:"DS230475"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZL`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZL"],example:"NZL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"expiry",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport expiry formatted as YYYY-MM-DD. Required for PASSPORT.",example:"2024-10-12"}}),(0,i.jsx)(j(),{collapsible:!1,name:"version",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The driver's license version. Required for DRIVERS_LICENSE.",example:"978"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(f.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"object"})})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:"{}",language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Request parameters are invalid"})}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"BAD_REQUEST"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errors",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",example:"Expected string, received number"}}})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "BAD_REQUEST",\n  "errors": [\n    "Expected string, received number"\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"403",value:"403",children:[(0,i.jsxs)("div",{children:[(0,i.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,i.jsx)(s.code,{children:"errorCode"})]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"KYC_STATEMENTS_NOT_ALLOWED"}),"\nPartner is not configured to submit KYC statements"]})]}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(y(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(j(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function P(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(E,{...e})}):E(e)}}}]);
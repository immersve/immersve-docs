"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[5142],{39195:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>q,contentTitle:()=>N,default:()=>L,frontMatter:()=>v,metadata:()=>Z,toc:()=>S});var i=a(62540),r=a(43023),n=a(71552),t=a.n(n),l=(a(77180),a(3188)),c=a.n(l),d=(a(81738),a(64544)),m=a.n(d),o=a(50449),p=a.n(o),u=a(81730),h=a.n(u),x=a(97672),g=a.n(x),j=a(88443),f=a.n(j),y=(a(18565),a(81381)),b=(a(26269),a(22491));const v={id:"list-cards",title:"List cards",description:"Lists cards by account.",sidebar_label:"List cards",hide_title:!0,hide_table_of_contents:!0,api:"eJztWG1vIjkS/iuWv9yMBAQaSALSrpTJ27G3l50JZPZuZtDJdFeDN912r+3mwiH++6rsfgUGyMxKdx/uU4LbVU+9V7nW1LC5psPP1GcqoNMGDUD7iieGS0GH9GeujSb4TZPZijDfl6kwrS/ii5gsuCZX70ck1aCJnyotVXPGNAQkYXMuGLJokbFhyiBtzJ65mBNGFPyegjbk39wsZGoIy4iJkWQOhpgFkJArbZAPtMiTBnsm4MVcu5uhkrE9wxsjEUrChf2tQCdSaCBM298Z51AqotOZRmRhcgk0IiowisMSSJgqswBlWeoWuZbCcJECSYXhURWca5KKAEIuIGgQLgLuM4OqCUliqYAEzLDWF0EbNGGKxWBAoYnXVLAY6JBmVhwFtEE5WjlhZkG3TX+V3yIRF88QoLBGMaGZjzc0bVDUgysI6NCoFBpU+wuIGR2uqVkliKSN4mJON5tGAR7xmJsc+PcU1GoH+SGNZ6CIDIkCX6LrnZ1SJWqgIYv0PlRh6Wuozg+HYa+LKCh8krvdOqUi0Eli7FEeXvwoDeD2JbGkB8W545EBhZELeH1FtGEGTkKeSRkBEzVopE71qZCYcaQgOVnXBgWRxjadFTBjVcRwWaLcPhM+RJE91AueJBDQad06aBZ9FRo44qoJj0EbFifordBJjansCgUmNmHC2c2WAUwJIAwZW5/O+RIEMTyGFvnIohSIXsg0CsgMkHA0/oVcnrc7xKlFpCKPd9fEu/S87KhF6q4kcaoNUlsDvS48pnjblQ2N3712G//UNR6nvg9ah2lEZAJOK7SpFAaEwfssSSJbCaQ4+00j0XoXVM5+Ax/TL1HIxnAHyQ3EunKNKcXQ6tvnBXmp3mfKnZfLmmIvN/IQuML7sQx4yLMfXL+LpP/sAiGPsTAVARfzsUyVDyObYnk8GOwLWwIH+4JvK58xhhPFY6ZWhAcgDIqgLGMWJxGSDjosOA+BdWd9z2f9y+C8HVyEQbfTDi8uB+DTTVW1o5BPGlTepMjoplI5bXurIrf7F4x1+oNOl/Uvwn67f3HhdXv+Zc8773d7fhuRHdgx0MkqsbXJ9psMJsvCJVcmZRGdbqruOM6xSC8ZulJgiV3IlSp4bc9rdjrNzvmk3R12usPOZavT8z6h6BWHfwOco/ZfB1mGyzcglrViG2/QbHtN73LidYf9wbA/aA0GA4tXhvFu5d0G/HUBtrnnPsImPsuoN0UWHJV7bO99xdl7C21Zh8uSuyfZdlN/dw5D2DtHSBwlGd3o6nSQy5Q7Y3Vco1vX22x93lKr6oRee4BcEybucDI7P87Y3iPnJOBzbmom+4sm768eyJv3WWnIBh3ixo63NeiO1+31zzPon5k2vePIeI30vhd44NkSwOMYlF66PuPi86gAN5Ao8NHtJOQQBQ0ckUmZHgcS6nLodVu9bucTzg7UcGMvOadaI7hxd19LqMvwHgcmjpMxzr7ZQA4BDshpZHSjHGEJD3FyTXKCneZUjr4n1Pxy3i7mtl0sOyXbObtmi+B+EY3u+xH89cP8n92PK98brEb3wfLTP/4+Z/cfV58+/PBDzS7Iomllrp5GXJumnUSaVu950ylNNxu81tvX3h+zN4n1lyZMoS2WLLK99U9q8q7IXMug2lO4MDCvN8Veu12UpAc7me0Z8wqjvWMByaS3ea+UVFsY+6iubv71ePvh6XY8KahOGUD2sLp9ScDH0HLfGjijA19CQIp3wKY+sFQMUdOzKv209CdLeNN+aKLrcid2d534IMlVahZS8f+4qdNIHAZAawx7WzFb/w13dl/hzjupZjwIQLzCmXe/PL4b3dzcPlBraKb3F6mS4EmwzE7g6sqf5J2u9Q5OH2AWMqBDOgdrOHzfDukZS/hZNp3ps3Ux123ObLYiHKhl/lhOVUSHdGFMoodnSNrKa3HLl/GeDrkEu44YWx4U3zV1Fga0OcxjgiWgymOKIvmp4mZlZbpy0TSRzyDo8PMUQbbPGnTCFO4xsvZS3Es4+Rus3BX8MQZfwSmf93KsiDbGiHVBWRemiAE0Ac3eQHZMAqZslLp/7qSKmaFD+tOvthwUspT1IOF4kD0KF8ACS549HF+aGAXPsDu3jAHIfcoD0KT5o81OfAa4jLNdggttVJptNDZ1zV+Frh3RZtdYp7NxFE1b9LciYwHEOL7l86JFRmF2ijOZ3T9JWdxoEIMrMp8JfJjKmBuskm9Q6ywVs7Eet2Iip3prE5JnTR6zwUnQabVbbVrm3SgLZIxXOx9JbWJmnZ4pZGfGPLNq6qzLGvj/Dd/3bfiy0DLwYs6SiHFbt23dWWdl7zPGXflCR2cMq69156Fpgy6kxtSm6zXa+ElFmw0euw0MVp+AazaLKjuNrzr18AZvr8yYveV2cIlLGTqktoyejvu6Fd4BOYp94TcK8tXl3QHMneXgd2PXt3gHoIs73wj5v7+PO2j32tqxNMEUfyiONnhl/L95zAaat+SENfpe2fKeIVZVmXKZywTe4Hs+6yUopPuOfTipJtLOpInaFWPS/e2EbjZ/AOCwvik=",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},N=void 0,Z={id:"list-cards",title:"List cards",description:"Lists cards by account.",source:"@site/docs/list-cards.api.mdx",sourceDirName:".",slug:"/list-cards",permalink:"/api-reference/list-cards",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-cards",title:"List cards",description:"Lists cards by account.",sidebar_label:"List cards",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Get card details",permalink:"/api-reference/get-card-details"},next:{title:"Contact Details",permalink:"/api-reference/contact-details"}},q={},S=[];function I(e){const s={p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"List cards"}),"\n",(0,i.jsx)(c(),{method:"get",path:"/api/accounts/{accountId}/cards"}),"\n",(0,i.jsx)(s.p,{children:"Lists cards by account."}),"\n",(0,i.jsx)(s.p,{children:"This API uses cursor-based pagination. Start by making a request without a cursor to get the first page. Use the nextCursor from the pageInfo in the response as the cursor for subsequent requests to retrieve further pages. Continue until nextCursor is undefined, indicating no more data."}),"\n",(0,i.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"accountId",in:"path",description:"AccountId linked to transactions",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Query Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsxs)("ul",{children:[(0,i.jsx)(p(),{className:"paramsItem",param:{name:"limit",in:"query",description:"Number of records to return",required:!1,schema:{type:"number"}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cursor",in:"query",description:"Cursor to retrieve the next page of records",required:!1,schema:{type:"string"}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"excludeExpired",in:"query",description:"Filter by expiry state",required:!1,schema:{type:"boolean"}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"status",in:"query",description:"Filter by card status",required:!1,schema:{type:"string",enum:["created","active","cancelled","shipped"]}}}),(0,i.jsx)(p(),{className:"paramsItem",param:{name:"expiresAfter",in:"query",description:"Timestamp to filter out cards with an expiration date after the given time. Value should be an ISO 8601 string or RFC 2822 string. excludeExpired must be false",required:!1,schema:{type:"string"}}})]})})]}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(t(),{label:void 0,id:void 0,children:[(0,i.jsxs)(b.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Successful operation"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"items"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(g(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Card primary identifier",example:"91ad6fea3b52ca58d60d7fd310f789ec"}}),(0,i.jsx)(g(),{collapsible:!1,name:"accountId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"User account ID linked to card",example:"057aa15913a57f50577234c8426534c0"}}),(0,i.jsx)(g(),{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`virtual`]",schema:{type:"string",description:"Type of the card",enum:["virtual"]}}),(0,i.jsx)(g(),{collapsible:!1,name:"createdAt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of card creation",example:"2022-11-16T03:13:18.142Z"}}),(0,i.jsx)(g(),{collapsible:!1,name:"modifiedAt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of card modification",example:"2022-11-16T03:13:18.142Z"}}),(0,i.jsx)(g(),{collapsible:!1,name:"expiresAt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of card expiration",example:"2029-02-28T23:59:59.999Z"}}),(0,i.jsx)(g(),{collapsible:!1,name:"isBlocked",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Whether the card is blocked"}}),(0,i.jsx)(g(),{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`active`, `cancelled`, `created`, `shipped`]",schema:{type:"string",description:"Status of the card",enum:["active","cancelled","created","shipped"]}}),(0,i.jsx)(g(),{collapsible:!1,name:"fundingSourceIds",required:!0,schemaName:"array",qualifierMessage:void 0,schema:{type:"array",description:"List of Funding Source IDs linked to the card"}}),(0,i.jsx)(g(),{collapsible:!1,name:"expiry",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Expiry date of the card",example:"202409"}}),(0,i.jsx)(g(),{collapsible:!1,name:"panFirst6",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"First 6 digits of the card's PAN (Primary Account Number)",example:"123456"}}),(0,i.jsx)(g(),{collapsible:!1,name:"panLast4",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Last 4 digits of the card's PAN (Primary Account Number)",example:"1920"}}),(0,i.jsx)(g(),{collapsible:!1,name:"immersveExpiration",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Deprecated field, use expiresAt",example:"2022-11-16T03:18:23.431Z"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(g(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"pageInfo"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Page info for paginated results, undefined if no page info"})}),(0,i.jsx)(g(),{collapsible:!1,name:"nextCursor",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Cursor for next page, undefined if no more pages",example:"dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="}})]})]})})]})]})}),(0,i.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(h(),{responseExample:'{\n  "items": [\n    {\n      "id": "91ad6fea3b52ca58d60d7fd310f789ec",\n      "accountId": "057aa15913a57f50577234c8426534c0",\n      "type": "virtual",\n      "createdAt": "2022-11-16T03:13:18.142Z",\n      "modifiedAt": "2022-11-16T03:13:18.142Z",\n      "expiresAt": "2029-02-28T23:59:59.999Z",\n      "isBlocked": true,\n      "status": "active",\n      "fundingSourceIds": [\n        null\n      ],\n      "expiry": "202409",\n      "panFirst6": "123456",\n      "panLast4": "1920",\n      "immersveExpiration": "2022-11-16T03:18:23.431Z"\n    }\n  ],\n  "pageInfo": {\n    "nextCursor": "dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="\n  }\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(b.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Request fields are invalid"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400}}),(0,i.jsx)(g(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"}}),(0,i.jsx)(g(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"BAD_REQUEST"}}),(0,i.jsx)(g(),{collapsible:!1,name:"errors",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",example:"Expected string, received number"}}})]})]})}),(0,i.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(h(),{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "BAD_REQUEST",\n  "errors": [\n    "Expected string, received number"\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(b.default,{label:"403",value:"403",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"No Authorization to access resource."})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(g(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(g(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(g(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(g(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(h(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function L(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(I,{...e})}):I(e)}}}]);
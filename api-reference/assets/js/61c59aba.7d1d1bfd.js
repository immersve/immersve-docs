"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[9905],{37011:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>S,contentTitle:()=>N,default:()=>A,frontMatter:()=>v,metadata:()=>q,toc:()=>w});var a=i(62540),r=i(43023),t=i(71552),n=i.n(t),l=(i(77180),i(3188)),d=i.n(l),o=(i(81738),i(64544)),c=i.n(o),m=i(50449),u=i.n(m),p=i(81730),h=i.n(p),x=i(97672),b=i.n(x),j=i(88443),g=i.n(j),f=(i(18565),i(81381)),y=(i(26269),i(22491));const v={id:"submit-residential-addresses",title:"Submit Residential Addresses",description:"Submit the current residential address of the cardholder in either structured or unstructured format.",sidebar_label:"Submit Residential Addresses",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},N=void 0,q={id:"submit-residential-addresses",title:"Submit Residential Addresses",description:"Submit the current residential address of the cardholder in either structured or unstructured format.",source:"@site/docs/submit-residential-addresses.api.mdx",sourceDirName:".",slug:"/submit-residential-addresses",permalink:"/api-reference/submit-residential-addresses",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"submit-residential-addresses",title:"Submit Residential Addresses",description:"Submit the current residential address of the cardholder in either structured or unstructured format.",sidebar_label:"Submit Residential Addresses",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Get Residential Addresses",permalink:"/api-reference/get-residential-addresses"},next:{title:"Prerequisites",permalink:"/api-reference/prerequisites"}},S={},w=[];function V(e){const s={admonition:"admonition",code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:i}=s;return i||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Submit Residential Addresses"}),"\n",(0,a.jsx)(d(),{method:"post",path:"/api/accounts/{cardholderId}/residential-addresses"}),"\n",(0,a.jsx)(s.p,{children:"Submit the current residential address of the cardholder in either structured or unstructured format."}),"\n",(0,a.jsx)(s.admonition,{type:"note",children:(0,a.jsx)(s.p,{children:"This endpoint is for Immersve-conducted KYC only."})}),"\n",(0,a.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsxs)(i,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,a.jsx)(s.p,{children:"Path Parameters"})})}),(0,a.jsx)("div",{children:(0,a.jsx)("ul",{children:(0,a.jsx)(u(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,a.jsx)(c(),{className:"openapi-tabs__mime",children:(0,a.jsx)(y.default,{label:"application/json",value:"application/json-schema",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,a.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,a.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,a.jsx)(s.p,{children:"Body"})}),(0,a.jsx)("span",{style:{opacity:"0.6"},children:(0,a.jsx)(s.p,{children:"array"})}),(0,a.jsx)("strong",{className:"openapi-schema__required",children:(0,a.jsx)(s.p,{children:"required"})})]}),(0,a.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Array ["})})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("span",{className:"badge badge--info",children:(0,a.jsx)(s.p,{children:"anyOf"})}),(0,a.jsxs)(g(),{children:[(0,a.jsxs)(y.default,{label:"Structured address",value:"0-item-properties",children:[(0,a.jsx)(b(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,a.jsx)(b(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,a.jsx)(b(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria"}}),(0,a.jsx)(b(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,a.jsx)(b(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,a.jsx)(b(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,a.jsx)(b(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"Auckland"}}),(0,a.jsx)(b(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,a.jsx)(b(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ISO 3166-2 Country code of the country the address is in.",example:"NZ"}})]}),(0,a.jsxs)(y.default,{label:"Unstructured address",value:"1-item-properties",children:[(0,a.jsx)(b(),{collapsible:!1,name:"fullAddress",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An address written as a single string.",example:"2/45 Laddier Road, Centurion, The Reeds, Auckland 0100, New Zealand"}}),(0,a.jsx)(b(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ISO 3166-2 Country code of the country the address is in.",example:"NZ"}})]})]})]}),(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,a.jsx)(s.p,{children:"]"})})})]})]})})}),"\n",(0,a.jsx)("div",{children:(0,a.jsx)("div",{children:(0,a.jsxs)(n(),{label:void 0,id:void 0,children:[(0,a.jsxs)(y.default,{label:"200",value:"200",children:[(0,a.jsx)("div",{}),(0,a.jsx)("div",{children:(0,a.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,a.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,a.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,a.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,a.jsx)("strong",{children:(0,a.jsx)(s.p,{children:"Schema"})})}),(0,a.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Array ["})})}),(0,a.jsx)(b(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,a.jsx)(b(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,a.jsx)(b(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria Street"}}),(0,a.jsx)(b(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,a.jsx)(b(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,a.jsx)(b(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,a.jsx)(b(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"Auckland"}}),(0,a.jsx)(b(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,a.jsx)(b(),{collapsible:!1,name:"country",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ISO 3166-2 Country code of the country the address is in.",example:"NZ"}}),(0,a.jsx)(b(),{collapsible:!1,name:"fullAddress",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The submitted unstructured address.",example:"1/3A Victoria Street, Epsom, Auckland 1050, New Zealand"}}),(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,a.jsx)(s.p,{children:"]"})})})]})]})}),(0,a.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,a.jsx)(h(),{responseExample:'[\n  {\n    "unitNumber": "1",\n    "streetNumber": "3A",\n    "streetName": "Victoria Street",\n    "town": "Auckland",\n    "suburb": "Epsom",\n    "state": "AKL",\n    "region": "Auckland",\n    "postalCode": "1050",\n    "country": "NZ",\n    "fullAddress": "1/3A Victoria Street, Epsom, Auckland 1050, New Zealand"\n  }\n]',language:"json"})})]})})})})]}),(0,a.jsxs)(y.default,{label:"403",value:"403",children:[(0,a.jsxs)("div",{children:[(0,a.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,a.jsx)(s.code,{children:"errorCode"})]}),(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]}),(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"KYC_ALREADY_PASSED"}),"\nResidential Addresses submission is not allowed after successful KYC checks (KYC profile is passed)."]})]}),(0,a.jsx)("div",{children:(0,a.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,a.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,a.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,a.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,a.jsx)("strong",{children:(0,a.jsx)(s.p,{children:"Schema"})})}),(0,a.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,a.jsx)(b(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,a.jsx)(b(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,a.jsx)(b(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,a.jsx)(b(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,a.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,a.jsx)(h(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function A(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(V,{...e})}):V(e)}}}]);
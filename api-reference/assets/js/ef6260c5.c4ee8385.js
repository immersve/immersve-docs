"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[8024],{49379:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>S,contentTitle:()=>N,default:()=>R,frontMatter:()=>v,metadata:()=>q,toc:()=>M});var i=a(62540),r=a(43023),t=a(71552),n=a.n(t),l=(a(77180),a(3188)),m=a.n(l),c=(a(81738),a(64544)),d=a.n(c),o=a(50449),p=a.n(o),h=a(81730),u=a.n(h),x=a(97672),j=a.n(x),g=a(88443),b=a.n(g),f=(a(18565),a(81381)),y=(a(26269),a(22491));const v={id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},N=void 0,q={id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",source:"@site/docs/submit-partner-kyc-statement.api.mdx",sourceDirName:".",slug:"/submit-partner-kyc-statement",permalink:"/api-reference/submit-partner-kyc-statement",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"submit-partner-kyc-statement",title:"Submit Partner KYC Statement",description:"Submit a KYC statement about the cardholder.",sidebar_label:"Submit Partner KYC Statement",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"KYC",permalink:"/api-reference/kyc"},next:{title:"Retrieve Partner KYC Statement",permalink:"/api-reference/retrieve-partner-kyc-statement"}},S={},M=[];function C(e){const s={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Submit Partner KYC Statement"}),"\n",(0,i.jsx)(m(),{method:"put",path:"/api/accounts/{cardholderAccountId}/partner-kyc-statement"}),"\n",(0,i.jsx)(s.p,{children:"Submit a KYC statement about the cardholder."}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsxs)(a,{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-params",children:(0,i.jsx)(s.p,{children:"Path Parameters"})})}),(0,i.jsx)("div",{children:(0,i.jsx)("ul",{children:(0,i.jsx)(p(),{className:"paramsItem",param:{name:"cardholderAccountId",in:"path",description:"ID of the cardholder account.",example:"65a7e8ef0d230d0a6bf755e07d39eb02",required:!0,schema:{type:"string"}}})})})]}),"\n",(0,i.jsx)(d(),{className:"openapi-tabs__mime",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})}),(0,i.jsx)("strong",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"idempotencyKey",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A client-supplied identifier that prevents duplicate creation.",example:"21ede8ef0d230d0a6bf755e07d39la54"}}),(0,i.jsx)(j(),{collapsible:!1,name:"region",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"An Alpha2 (ISO-3166-1) country code representing the country in which the user is being verified.",example:"NZ"}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"claims"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of claims about the cardholder's identity."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(j(),{collapsible:!1,name:"claimType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`FULL_NAME`, `DOB`, `ADDRESS`]",schema:{type:"string",description:"The type of claim.",enum:["FULL_NAME","DOB","ADDRESS"],example:"FULL_NAME"}}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsxs)("summary",{style:{},children:[(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"attributes"})}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:(0,i.jsx)(s.p,{children:"object"})})]}),(0,i.jsx)("div",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The attributes that support the claim."})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"oneOf"})}),(0,i.jsxs)(b(),{children:[(0,i.jsxs)(y.default,{label:"FULL_NAME",value:"0-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"givenName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Primary name.",example:"John"}}),(0,i.jsx)(j(),{collapsible:!1,name:"middleName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Other name(s).",example:"Foo Bar"}}),(0,i.jsx)(j(),{collapsible:!1,name:"familyName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Family name or surname.",example:"Doe"}}),(0,i.jsx)(j(),{collapsible:!1,name:"honorific",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Title used to address the cardholder.",example:"Mr"}})]}),(0,i.jsx)(y.default,{label:"DOB",value:"1-item-properties",children:(0,i.jsx)(j(),{collapsible:!1,name:"dateOfBirth",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The cardholder's date of birth formatted as YYYY-MM-DD",example:"1981-11-03"}})}),(0,i.jsxs)(y.default,{label:"ADDRESS",value:"2-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"addressType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`RESIDENTIAL`]",schema:{type:"string",description:"The type of address.",enum:["RESIDENTIAL"],example:"RESIDENTIAL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"unitNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unit number.",example:"1"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetNumber",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street number. Generally a number but can also be alphanumeric.",example:"3A"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street name.",example:"Victoria"}}),(0,i.jsx)(j(),{collapsible:!1,name:"streetType",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Street type. e.g. Road, St, Avenue, Circuit.",example:"Avenue"}}),(0,i.jsx)(j(),{collapsible:!1,name:"town",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The town/village/suburb/city.",example:"Auckland"}}),(0,i.jsx)(j(),{collapsible:!1,name:"suburb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The suburb in the town/city. Only use this if you require a suburb AND a town/city, otherwise, just use the "town" parameter.',example:"Epsom"}}),(0,i.jsx)(j(),{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state. Use local abbreviations such as VIC (Victoria) or TX (Texas).",example:"AKL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The county, province, or cantonment.",example:"AKL"}}),(0,i.jsx)(j(),{collapsible:!1,name:"postalCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Postal code.",example:"1050"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZ`]",schema:{type:"string",description:"Country code.",enum:["NZ"],example:"NZ"}})]})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(j(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"evidence"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A list of evidence supporting the claimed identity. At least one piece of evidence is required."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsxs)(b(),{children:[(0,i.jsxs)(y.default,{label:"passport",value:"0-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`PASSPORT`]",schema:{type:"string",description:"The type of evidence.",enum:["PASSPORT"]}}),(0,i.jsx)(j(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport number.",example:"DS230475"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZ`, `AU`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZ","AU"],example:"NZ"}}),(0,i.jsx)(j(),{collapsible:!1,name:"expiry",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The passport expiry formatted as YYYY-MM-DD.",example:"2024-10-12"}})]}),(0,i.jsxs)(y.default,{label:"drivers-license",value:"1-item-properties",children:[(0,i.jsx)(j(),{collapsible:!1,name:"evidenceType",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`DRIVERS_LICENSE`]",schema:{type:"string",description:"The type of evidence.",enum:["DRIVERS_LICENSE"]}}),(0,i.jsx)(j(),{collapsible:!1,name:"documentId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The license number.",example:"DS230475"}}),(0,i.jsx)(j(),{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`NZ`, `AU`]",schema:{type:"string",description:"The country that issued the document.",enum:["NZ","AU"],example:"NZ"}}),(0,i.jsx)(j(),{collapsible:!1,name:"region",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Where appropriate, the state or region that issued the document, in the format provided by the issuer.\ne.g. for Australia a Victorian Drivers license, this would be 'VIC'.\nFor New Zealand no value is required.\n",example:"VIC"}}),(0,i.jsx)(j(),{collapsible:!1,name:"version",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The driver's license card number or version",example:"978"}})]})]})]}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(y.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(b(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"object"})})})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:"{}",language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Request parameters are invalid"})}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(b(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"BAD_REQUEST"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errors",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",example:"Expected string, received number"}}})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "BAD_REQUEST",\n  "errors": [\n    "Expected string, received number"\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"403",value:"403",children:[(0,i.jsxs)("div",{children:[(0,i.jsxs)(s.p,{children:["Subject is not allowed to perform the action with the reason stated in the ",(0,i.jsx)(s.code,{children:"errorCode"})]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"FORBIDDEN"}),"\nResource does not exist or there are no sufficient permissions to perform the action."]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"KYC_STATEMENTS_NOT_ALLOWED"}),"\nPartner is not configured to submit KYC statements"]})]}),(0,i.jsx)("div",{children:(0,i.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(b(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(j(),{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403}}),(0,i.jsx)(j(),{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"}}),(0,i.jsx)(j(),{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"}}),(0,i.jsx)(j(),{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"}})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(u(),{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json"})})]})})})})]})]})})})]})}function R(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(C,{...e})}):C(e)}}}]);
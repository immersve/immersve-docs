"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[1961],{12293:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>J,contentTitle:()=>y,default:()=>b,frontMatter:()=>f,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"get-card","title":"Get Card Details","description":"Returns the non-sensitive details of a card by a given ID.","source":"@site/docs/get-card.api.mdx","sourceDirName":".","slug":"/get-card","permalink":"/api-reference/get-card","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-card","title":"Get Card Details","description":"Returns the non-sensitive details of a card by a given ID.","sidebar_label":"Get Card Details","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"immersve-api","custom_edit_url":null},"sidebar":"primarySidebar","previous":{"title":"Get Card Token","permalink":"/api-reference/get-card-token"},"next":{"title":"List Cards","permalink":"/api-reference/list-cards"}}');var a=r(62540),s=r(43023),d=r(20701),n=r.n(d),p=r(9923),o=r.n(p),c=r(27457),m=r.n(c),l=r(6815),u=r.n(l),h=(r(17202),r(11208),r(72034));const f={id:"get-card",title:"Get Card Details",description:"Returns the non-sensitive details of a card by a given ID.",sidebar_label:"Get Card Details",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"immersve-api",custom_edit_url:null},y=void 0,J={},g=[];function x(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Get Card Details"}),"\n",(0,a.jsx)(n(),{method:"get",path:"/api/cards/{cardId}",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"Returns the non-sensitive details of a card by a given ID."}),"\n",(0,a.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(o(),{parameters:[{name:"cardId",in:"path",description:"Primary identifier of the card to fetch",required:!0,schema:{type:"string"}}]}),"\n",(0,a.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(u(),{id:void 0,label:void 0,responses:{200:{content:{"application/json":{schema:{allOf:[{type:"object",required:["id","accountId","type","createdAt","modifiedAt","isBlocked","status","fundingSourceIds","expiresAt","cardProgramId","regionCode"],properties:{id:{type:"string",description:"Card primary identifier",example:"91ad6fea3b52ca58d60d7fd310f789ec"},accountId:{type:"string",description:"User account ID linked to card",example:"057aa15913a57f50577234c8426534c0"},type:{type:"string",description:"Type of the card",enum:["virtual"]},createdAt:{type:"string",description:"Timestamp of card creation",example:"2022-11-16T03:13:18.142Z"},modifiedAt:{type:"string",description:"Timestamp of card modification",example:"2022-11-16T03:13:18.142Z"},expiresAt:{type:"string",description:"Timestamp of card expiration",example:"2029-02-28T23:59:59.999Z"},isBlocked:{type:"boolean",description:"Whether the card is blocked"},status:{type:"string",description:"Status of the card",enum:["active","cancelled","created","shipped"]},fundingSourceIds:{type:"array",description:"List of Funding Source IDs linked to the card"},cardProgramId:{type:"string",description:"ID of card program linked to the card",example:"91ad6fea3b52ca58d60d7fd310f789ec"},regionCode:{type:"string",description:"An Alpha2 (ISO-3166-1) country code representing the country where the card is issued.",example:"NZ"},currency:{type:"string",description:"An ISO 4217 currency code representing the issuing currency of the card.",example:"USD"},expiry:{type:"string",description:"Expiry date of the card in the format YYYYMM",example:"202409"},panFirst6:{type:"string",description:"First 6 digits of the card's PAN (Primary Account Number)",example:"123456"},panLast4:{type:"string",description:"Last 4 digits of the card's PAN (Primary Account Number)",example:"1920"},immersveExpiration:{type:"string",description:"Deprecated field, use expiresAt",example:"2022-11-16T03:18:23.431Z"}},title:"card"},{type:"object",properties:{unfreezeAllowed:{type:"boolean",description:"Indicates whether the card can be unfrozen with the unfreeze endpoint",example:!0}}}]}}}},400:{description:"Request fields are invalid",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:400},statusName:{type:"string",example:"Bad Request"},errorCode:{type:"string",example:"INVALID_REQUEST_INPUT"},errors:{type:"array",items:{type:"object",properties:{message:{type:"string",example:"Invalid type"},path:{type:"string",description:"The location of the invalid path param, query param or payload attribute.",example:"items[1].attributes.invalidField"}}},required:["message","path"]}},required:["statusCode","statusName","errorCode"],title:"api-error-400"}}}},403:{description:"No Authorization to access resource.",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}}})]})}function b(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}}}]);
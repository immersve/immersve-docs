"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[1301],{72118:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>u,default:()=>b,frontMatter:()=>c,metadata:()=>h,toc:()=>g});var n=a(25773),i=(a(27378),a(35318)),r=a(7743),s=a(30712),o=a(76377),d=a(30980),m=a(68388),p=a(34806),l=(a(23067),a(39798));const c={id:"create-withdrawal-intent",title:"Create Withdrawal Intent",description:"Create a Withdrawal Intent for a given Funding Source.",sidebar_label:"Create Withdrawal Intent",hide_title:!0,hide_table_of_contents:!0,api:{tags:["funding-source"],description:"Create a Withdrawal Intent for a given Funding Source.\n\nFor more information on Withdrawal Intents\nsee the [Card Funding guide](https://docs.immersve.com/guides/card-funding)\n",parameters:[{name:"fundingSourceId",in:"path",description:"ID for the Funding Source.",example:"2be03cd65da12fe29b8910af7b4b85e7",required:!0,schema:{type:"string"}}],requestBody:{content:{"application/json":{schema:{type:"object",properties:{amount:{type:"number",description:"Withdrawal amount in minor units.",example:3e8}},required:["amount"]}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{amount:{type:"number",description:"Withdrawal amount in minor units.",example:3e8},id:{type:"string",description:"ID of the Withdrawal Intent.",example:"91ad6fea3b52ca58d60d7fd310f789ec"},createdAt:{type:"string",description:"Creation date of the Withdrawal Intent.",example:"2023-08-14T12:32:54"},expiresAt:{type:"string",description:"Expiration date of the Withdrawal Intent.",example:"2023-08-14T12:32:54"},walletAddress:{type:"string",description:"The wallet address to which the funds will be sent.",example:"0xA3058369d6A481B1ff08F62B352409c3D709De9b"},execution:{type:"object",properties:{contractAddress:{type:"string",description:"The address of smart contract to invoke.",example:"0xEe076427B04DDD26729889C869d3aE524A6362fD"},method:{type:"string",description:"The contract function to call.",example:"withdraw"},abi:{description:"The JSON ABI of the function being executed (contains only required details. more details here https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json)",type:"array",items:{type:"object",properties:{name:{type:"string",description:"The name of the function",example:"withdraw",enum:["withdraw"]},type:{type:"string",example:"function",enum:["function"]},input:{type:"array",items:{type:"object"},example:[]},output:{type:"array",items:{type:"object"},example:[]}}}},params:{type:"object",properties:{amount:{type:"number",description:"Withdrawal amount in minor units.",example:3e8},expiryDate:{type:"number",description:"The unix timestamp when the signature expires.",example:12345},nonce:{type:"number",description:"Unique identifier of current Withdrawal Intent.",example:1},signature:{type:"string",description:"The signed withdrawal approval.",example:"0x30450221..."}}}}}},title:"create-withdrawal-intent"}}}},403:{description:"**FORBIDDEN**\nInsufficient permissions to perform the action.\n\n**INSUFFICIENT_BALANCE**\nWithdrawal amount exceeds funding source balance.\n\n**TOO_MANY_PENDING_WITHDRAWALS**\nMaximum amount of intents exceeded (10).\n\n**FUNDING_STRATEGY_NOT_SUPPORTED**\nFunding strategy is not supported.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/funding-sources/{fundingSourceId}/withdraw",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{amount:3e8},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Create Withdrawal Intent",description:{content:"Create a Withdrawal Intent for a given Funding Source.\n\nFor more information on Withdrawal Intents\nsee the [Card Funding guide](https://docs.immersve.com/guides/card-funding)\n",type:"text/plain"},url:{path:["api","funding-sources",":fundingSourceId","withdraw"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID for the Funding Source.",type:"text/plain"},type:"any",value:"",key:"fundingSourceId"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},u=void 0,h={unversionedId:"create-withdrawal-intent",id:"create-withdrawal-intent",title:"Create Withdrawal Intent",description:"Create a Withdrawal Intent for a given Funding Source.",source:"@site/docs/create-withdrawal-intent.api.mdx",sourceDirName:".",slug:"/create-withdrawal-intent",permalink:"/api-reference/create-withdrawal-intent",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"create-withdrawal-intent",title:"Create Withdrawal Intent",description:"Create a Withdrawal Intent for a given Funding Source.",sidebar_label:"Create Withdrawal Intent",hide_title:!0,hide_table_of_contents:!0,api:{tags:["funding-source"],description:"Create a Withdrawal Intent for a given Funding Source.\n\nFor more information on Withdrawal Intents\nsee the [Card Funding guide](https://docs.immersve.com/guides/card-funding)\n",parameters:[{name:"fundingSourceId",in:"path",description:"ID for the Funding Source.",example:"2be03cd65da12fe29b8910af7b4b85e7",required:!0,schema:{type:"string"}}],requestBody:{content:{"application/json":{schema:{type:"object",properties:{amount:{type:"number",description:"Withdrawal amount in minor units.",example:3e8}},required:["amount"]}}},required:!0},responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{amount:{type:"number",description:"Withdrawal amount in minor units.",example:3e8},id:{type:"string",description:"ID of the Withdrawal Intent.",example:"91ad6fea3b52ca58d60d7fd310f789ec"},createdAt:{type:"string",description:"Creation date of the Withdrawal Intent.",example:"2023-08-14T12:32:54"},expiresAt:{type:"string",description:"Expiration date of the Withdrawal Intent.",example:"2023-08-14T12:32:54"},walletAddress:{type:"string",description:"The wallet address to which the funds will be sent.",example:"0xA3058369d6A481B1ff08F62B352409c3D709De9b"},execution:{type:"object",properties:{contractAddress:{type:"string",description:"The address of smart contract to invoke.",example:"0xEe076427B04DDD26729889C869d3aE524A6362fD"},method:{type:"string",description:"The contract function to call.",example:"withdraw"},abi:{description:"The JSON ABI of the function being executed (contains only required details. more details here https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json)",type:"array",items:{type:"object",properties:{name:{type:"string",description:"The name of the function",example:"withdraw",enum:["withdraw"]},type:{type:"string",example:"function",enum:["function"]},input:{type:"array",items:{type:"object"},example:[]},output:{type:"array",items:{type:"object"},example:[]}}}},params:{type:"object",properties:{amount:{type:"number",description:"Withdrawal amount in minor units.",example:3e8},expiryDate:{type:"number",description:"The unix timestamp when the signature expires.",example:12345},nonce:{type:"number",description:"Unique identifier of current Withdrawal Intent.",example:1},signature:{type:"string",description:"The signed withdrawal approval.",example:"0x30450221..."}}}}}},title:"create-withdrawal-intent"}}}},403:{description:"**FORBIDDEN**\nInsufficient permissions to perform the action.\n\n**INSUFFICIENT_BALANCE**\nWithdrawal amount exceeds funding source balance.\n\n**TOO_MANY_PENDING_WITHDRAWALS**\nMaximum amount of intents exceeded (10).\n\n**FUNDING_STRATEGY_NOT_SUPPORTED**\nFunding strategy is not supported.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/funding-sources/{fundingSourceId}/withdraw",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{amount:3e8},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Create Withdrawal Intent",description:{content:"Create a Withdrawal Intent for a given Funding Source.\n\nFor more information on Withdrawal Intents\nsee the [Card Funding guide](https://docs.immersve.com/guides/card-funding)\n",type:"text/plain"},url:{path:["api","funding-sources",":fundingSourceId","withdraw"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID for the Funding Source.",type:"text/plain"},type:"any",value:"",key:"fundingSourceId"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"List Funding Source Interactions",permalink:"/api-reference/list-funding-source-interactions"},next:{title:"Funding Channels",permalink:"/api-reference/funding-channel"}},y={},g=[{value:"Create Withdrawal Intent",id:"create-withdrawal-intent",level:2}],f={toc:g},x="wrapper";function b(e){let{components:t,...a}=e;return(0,i.kt)(x,(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"create-withdrawal-intent"},"Create Withdrawal Intent"),(0,i.kt)("p",null,"Create a Withdrawal Intent for a given Funding Source."),(0,i.kt)("p",null,"For more information on Withdrawal Intents\nsee the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.immersve.com/guides/card-funding"},"Card Funding guide")),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Path Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(o.Z,{className:"paramsItem",param:{name:"fundingSourceId",in:"path",description:"ID for the Funding Source.",example:"2be03cd65da12fe29b8910af7b4b85e7",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,i.kt)(s.Z,{mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Request Body"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"amount",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",description:"Withdrawal amount in minor units.",example:3e8},mdxType:"SchemaItem"}))))),(0,i.kt)("div",null,(0,i.kt)(r.Z,{mdxType:"ApiTabs"},(0,i.kt)(l.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Successful operation")),(0,i.kt)("div",null,(0,i.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(l.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"amount",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",description:"Withdrawal amount in minor units.",example:3e8},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of the Withdrawal Intent.",example:"91ad6fea3b52ca58d60d7fd310f789ec"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Creation date of the Withdrawal Intent.",example:"2023-08-14T12:32:54"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"expiresAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Expiration date of the Withdrawal Intent.",example:"2023-08-14T12:32:54"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"walletAddress",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The wallet address to which the funds will be sent.",example:"0xA3058369d6A481B1ff08F62B352409c3D709De9b"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"execution"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"contractAddress",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The address of smart contract to invoke.",example:"0xEe076427B04DDD26729889C869d3aE524A6362fD"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"method",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The contract function to call.",example:"withdraw"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"abi"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"The JSON ABI of the function being executed (contains only required details. more details here ",(0,i.kt)("a",{parentName:"p",href:"https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json"},"https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json"),")")),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(m.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`withdraw`]",schema:{type:"string",description:"The name of the function",example:"withdraw",enum:["withdraw"]},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`function`]",schema:{type:"string",example:"function",enum:["function"]},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"input",required:!1,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"object"},example:[]},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"output",required:!1,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"object"},example:[]},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"params"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"amount",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",description:"Withdrawal amount in minor units.",example:3e8},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"expiryDate",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",description:"The unix timestamp when the signature expires.",example:12345},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"nonce",required:!1,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",description:"Unique identifier of current Withdrawal Intent.",example:1},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"signature",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The signed withdrawal approval.",example:"0x30450221..."},mdxType:"SchemaItem"})))))))))),(0,i.kt)(l.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(d.Z,{responseExample:'{\n  "amount": 300000000,\n  "id": "91ad6fea3b52ca58d60d7fd310f789ec",\n  "createdAt": "2023-08-14T12:32:54",\n  "expiresAt": "2023-08-14T12:32:54",\n  "walletAddress": "0xA3058369d6A481B1ff08F62B352409c3D709De9b",\n  "execution": {\n    "contractAddress": "0xEe076427B04DDD26729889C869d3aE524A6362fD",\n    "method": "withdraw",\n    "abi": [\n      {\n        "name": "withdraw",\n        "type": "function",\n        "input": [],\n        "output": []\n      }\n    ],\n    "params": {\n      "amount": 300000000,\n      "expiryDate": 12345,\n      "nonce": 1,\n      "signature": "0x30450221..."\n    }\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(l.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"FORBIDDEN"),"\nInsufficient permissions to perform the action."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"INSUFFICIENT_BALANCE"),"\nWithdrawal amount exceeds funding source balance."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"TOO_MANY_PENDING_WITHDRAWALS"),"\nMaximum amount of intents exceeded (10)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"FUNDING_STRATEGY_NOT_SUPPORTED"),"\nFunding strategy is not supported.")),(0,i.kt)("div",null,(0,i.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(l.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"},mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"},mdxType:"SchemaItem"})))),(0,i.kt)(l.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(d.Z,{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);
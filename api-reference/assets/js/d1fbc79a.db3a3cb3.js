"use strict";(self.webpackChunkimsv_docs_docusaurus=self.webpackChunkimsv_docs_docusaurus||[]).push([[5042],{17314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>y,default:()=>S,frontMatter:()=>g,metadata:()=>i,toc:()=>b});const i=JSON.parse('{"id":"get-spending-prerequisites","title":"Get Spending Prerequisites","description":"Check for outstanding cardholder \'Spending Prerequisites\'. Clients should","source":"@site/docs/get-spending-prerequisites.api.mdx","sourceDirName":".","slug":"/get-spending-prerequisites","permalink":"/api-reference/get-spending-prerequisites","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-spending-prerequisites","title":"Get Spending Prerequisites","description":"Check for outstanding cardholder \'Spending Prerequisites\'. Clients should","sidebar_label":"Get Spending Prerequisites","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"immersve-api","custom_edit_url":null},"sidebar":"primarySidebar","previous":{"title":"Prerequisites","permalink":"/api-reference/prerequisites"},"next":{"title":"Simulator","permalink":"/api-reference/simulator"}}');var r=n(62540),s=n(43023),a=n(20701),o=n.n(a),d=n(9923),p=n.n(d),c=n(27457),u=n.n(c),l=n(6815),m=n.n(l),h=(n(17202),n(11208),n(72034));const g={id:"get-spending-prerequisites",title:"Get Spending Prerequisites",description:"Check for outstanding cardholder 'Spending Prerequisites'. Clients should",sidebar_label:"Get Spending Prerequisites",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"immersve-api",custom_edit_url:null},y=void 0,f={},b=[];function I(e){const t={a:"a",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Get Spending Prerequisites"}),"\n",(0,r.jsx)(o(),{method:"post",path:"/api/spending-prerequisites",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:'Check for outstanding cardholder "Spending Prerequisites". Clients should\nuse the returned prerequisite instructions to guide the user through the\ncard onboarding user journey.'}),"\n",(0,r.jsx)(t.p,{children:'Spending prerequisites are divided into three stages: Funding, KYC, and AML.\nWhen each of these three stages indicate the status is "ok" then the\ncardholder can proceed to transact with their card.'}),"\n",(0,r.jsxs)(t.p,{children:["See the ",(0,r.jsx)(t.a,{href:"https://docs.immersve.com/guides/kyc-spending-prerequisites/",children:"KYC Spending Prerequisites"}),"\nguide for more details about how to consume the prerequisite instructions\nfor your cardholder onboarding experience."]}),"\n",(0,r.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(p(),{parameters:void 0}),"\n",(0,r.jsx)(u(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",required:["cardProgramId","fundingSourceId","spendableAmount","spendableCurrency"],properties:{cardProgramId:{type:"string",description:"ID of card program to create the card under"},fundingSourceId:{type:"string",description:"ID of the Funding Source the card will authorize against"},spendableAmount:{type:"string",description:"Amount of fiat money that should be available on the card, denominated in minor units"},spendableCurrency:{type:"string",description:"Currency to be used when creating the card. Currently only supports USD",enum:["USD"]},fundingMode:{type:"string",description:"Hint for the prerequisite funding transaction type. Presently only universal-evm funding supports the funding mode hint. <br> `deposit` (default) \u2014 Funding instruction should be a token transfer. <br> `approval` \u2014 Funding instruction should be a token approval.",enum:["deposit","approval"]},kycType:{type:"string",description:"Type of KYC depending on which party is conducting it",enum:["immersve-conducted","partner-conducted"]},kycRedirectUrl:{type:"string",description:"A URL to which the user can be redirected after they have completed or exited the kyc process."},kycRegion:{type:"string",description:"The country in which the user resides, in two letter country code format (e.g. `AU`). This must be one of the countries enabled in the card program for your partner account. <br> Note - this is only required when using the `kycHiddenSteps` option to hide the region KYC step."},kycHiddenSteps:{type:"array",description:"A list of KYC steps to skip in the Immersve Conducted UI. Cardholder information for these steps must be provided separately via API.",enum:["region","expected-spend","contact-channels","residential-address"]}},title:"get-spending-prerequisite-request"}}},required:!0}}),"\n",(0,r.jsx)(m(),{id:void 0,label:void 0,responses:{200:{content:{"application/json":{schema:{type:"object",properties:{prerequisites:{type:"array",items:{discriminator:{propertyName:"stage"},anyOf:[{title:"Funding Instruction",type:"object",required:["stage","status"],properties:{stage:{enum:["funding"]},status:{enum:["action-required","pending","blocked","ok"]},actionType:{enum:["smart_contract_write","simulator_call"]},type:{deprecated:!0,type:"string",description:"The prerequisite instruction type. This attribute is\ndeprecated. Clients should use `stage` and `actionType` instead.\n"},params:{description:"The parameters for the prerequisite instruction, if applicable. Specific\nparameters vary based on the prerequisite instruction's action type.\n",oneOf:[{title:"Smart Contract Write Params",type:"object",properties:{contractAddress:{type:"string",description:"The address of the smart contract"},abi:{description:"The JSON ABI of the smart contract (contains only required details. more details here https://docs.soliditylang.org/en/v0.8.19/abi-spec.html#json)",type:"array",items:{type:"object",properties:{type:{type:"string",enum:["function"]},name:{type:"string",example:"approve",description:"The name of the function"},inputs:{type:"array",items:{type:"object",properties:{name:{description:"The name of the parameter",type:"string",example:"_spender"},type:{description:"The type of the parameter",type:"string",example:"address"}}}}},outputs:{type:"array",items:{type:"object",properties:{name:{description:"The name of the parameter",type:"string"},type:{description:"The type of the parameter",type:"string",example:"uint256"}}}}}},method:{type:"string",description:"Smart contract method"},params:{type:"object",description:"Smart contract call params. Keys are matching names and order defined in ABI"}}},{title:"Simulator Call Params",type:"object",description:"Simulator strategy deposit instructions.",properties:{url:{type:"string",description:"The `payload` instructions should be send to this URL using an HTTP POST."},payload:{type:"object",description:"The payload with the instructions for the deposit.",properties:{amount:{type:"string",description:"The simulated deposit amount in minor units of the funding source token."},fundingSourceId:{type:"string",description:"The funding source to deposit funds to."}}}},example:{url:"https://test.immersve.com/api/simulator/execute-deposit",payload:{amount:1e6,fundingSourceId:"91ad6fea3b52ca58d60d7fd310f789ec"}}}]}}},{title:"KYC Instruction",type:"object",required:["stage","status"],properties:{stage:{enum:["kyc"]},status:{enum:["action-required","pending","blocked","ok"]},actionType:{enum:["submit_contact_email","submit_contact_phone","follow_kyc_url","submit_kyc_statement","set_expected_spend_amount","submit_residential_addresses"]},type:{deprecated:!0,type:"string",description:"The prerequisite instruction type. This attribute is\ndeprecated. Clients should use `stage` and `actionType` instead.\n"},params:{allOf:[{description:"The parameters for the prerequisite instruction, if applicable.\n",type:"object",properties:{kycUrl:{type:"string",description:"A one-time, secure URL for redirecting the cardholder to the\nImmersve-conducted KYC user experience.\n"},ctaHint:{type:"string",description:"Hint for supplying a meaningful call-to-action to the cardholder\nexplaining why action is needed.\n",enum:["KYC_NOT_STARTED","KYC_NOT_COMPLETED","KYC_INFORMATION_NEEDED","KYC_EXPIRING"]},reasons:{type:"array",description:"List of specific reasons why a KYC action is required. These coded reasons\ncan be used to help prompt users for more information when KYC background\nchecks have failed.\n",items:{type:"object",properties:{code:{type:"string",description:"KYC action reason code.",enum:["ID_NOT_VERIFIED","NAME_NOT_VERIFIED","ADDRESS_NOT_VERIFIED","DOB_NOT_VERIFIED","DOB_OR_ADDRESS_NOT_VERIFIED","VISA_NOT_FOUND","BIOMETRICS_FAILED","PROFILE_LIMIT_REACHED","SUSPENDED","UNKNOWN"]},description:{type:"string",description:"Human readable reason description."}}}},status:{deprecated:!0,type:"string",description:"The cardholder's KYC status. This attribute is deprecated. Clients should\nuse the prerequisite `status` field to detect when checks are in progress,\nthe `ctaHint` field to determine why action is required, and the params\n`reasons` field to detect when or why KYC checks have failed.\n",enum:["check_in_progress","kyc_required","kyc_check_failed"]}},title:"prerequisite-kyc-params"}]}}},{title:"AML Instruction",type:"object",properties:{stage:{enum:["aml"]},status:{enum:["pending","blocked","ok"]},type:{deprecated:!0,type:"string",description:"The prerequisite instruction type. This attribute is\ndeprecated. Clients should use `stage` instead.\n"}}}],title:"prerequisite-instruction"}}},title:"get-spending-prerequisite-response"},example:'{\n  "prerequisites": [\n    {\n      "stage": "funding",\n      "status": "action-required",\n      "actionType": "smart_contract_write",\n      "params": {\n        "abi": [\n          {\n            "constant": false,\n            "inputs": [\n              {\n                "name": "_spender",\n                "type": "address"\n              },\n              {\n                "name": "_value",\n                "type": "uint256"\n              }\n            ],\n            "name": "approve",\n            "outputs": [\n              {\n                "name": "",\n                "type": "bool"\n              }\n            ],\n            "payable": false,\n            "stateMutability": "nonpayable",\n            "type": "function"\n          }\n        ],\n        "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",\n        "method": "approve",\n        "params": {\n          "_spender": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",\n          "_value": "1000000"\n        }\n      }\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required",\n      "actionType": "follow_kyc_url",\n      "params": {\n        "kycUrl": "https://verify.immersve.com"\n        "reasons": [{\n          "code": "ADDRESS_NOT_VERIFIED"}],\n          "message": "Residential Address could not be matched in the required number of databases"\n        }]\n      }\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required"\n      "actionType": "submit_contact_email",\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required",\n      "actionType": "submit_contact_phone",\n    },\n    {\n      "stage": "kyc",\n      "status": "action-required",\n      "actionType": "set_expected_spend_amount",\n    },\n    {\n      "stage": "aml",\n      "status": "pending",\n    }\n  ]\n}\n'}}},400:{description:"Request fields are invalid",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:400},statusName:{type:"string",example:"Bad Request"},errorCode:{type:"string",example:"INVALID_REQUEST_INPUT"},errors:{type:"array",items:{type:"object",properties:{message:{type:"string",example:"Invalid type"},path:{type:"string",description:"The location of the invalid path param, query param or payload attribute.",example:"items[1].attributes.invalidField"}}},required:["message","path"]}},required:["statusCode","statusName","errorCode"],title:"api-error-400"}}}},403:{description:"User is not allowed to perform the action with the reason stated in the `errorCode`\n\n**FORBIDDEN**\nInsufficient permissions to perform the action.\n\n**LIVENESS_MISMATCH**\nResource liveness does not match request liveness.\n\n**CARD_PROGRAM_INVALID**\nCard program does not belong to a partner this cardholder is associated with.\n\n**FUNDING_SOURCE_INVALID**\nFunding source cannot be used with this card program.\n\n**KYC_PROFILE_REGION_MISMATCH**\nThe KYC profile is already approved for a region different from the requested region.\nUse the [Get KYC Profile](../get-kyc-profile/) endpoint to determine the current region of the KYC profile.\n\n**UNSUPPORTED_KYC_REGION**\nThe KYC region is not yet supported.\n\n**KYC_STATEMENT_REGION_MISMATCH**\nThe latest unchecked KYC statement is for a region that is different from the requested region.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}}})]})}function S(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(I,{...e})}):I(e)}}}]);
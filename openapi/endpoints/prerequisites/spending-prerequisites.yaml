post:
  tags:
    - prerequisites
  summary: Get spending prerequisites
  description: |
    This endpoint returns the prerequisites required to permit the action (ex. create a new Immersve Card and load it with an amount). It also indicates if everything is in order before instructing the client of any blockchain transactions. Insufficient KYC and AML status may trigger an error response.
  requestBody:
    content:
      application/json:
        schema:
          $ref: './models/get-spending-prerequisite-request.yaml'
    required: true
  responses:
    '200':
      description: |
        User is allowed to perform action. Client should be able to create a card and load it with the specified amount.
        The client needs to parse transaction info and convert it to the chain-specific calls
      content:
        application/json:
          schema:
            $ref: './models/get-spending-prerequisite-response.yaml'
          example: |
            {
              "prerequisites": [
                {
                  "type": "smart_contract_write",
                  "params": {
                    "abi": [
                      {
                        "constant": false,
                        "inputs": [
                          {
                            "name": "_spender",
                            "type": "address"
                          },
                          {
                            "name": "_value",
                            "type": "uint256"
                          }
                        ],
                        "name": "approve",
                        "outputs": [
                          {
                            "name": "",
                            "type": "bool"
                          }
                        ],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                      }
                    ],
                    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
                    "method": "approve",
                    "params": {
                      "_spender": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
                      "_value": "1000000"
                    }
                  }
                },
                {
                  "type": "smart_contract_write",
                  "params": {
                    "abi": [
                      {
                        "inputs": [
                          {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                          }
                        ],
                        "name": "depositAndLock",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                      }
                    ],
                    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
                    "method": "depositAndLock",
                    "params": {
                      "_amount": "1000000"
                    }
                  }
                },
              ]
            }
    '403':
      description: |
        User is not allowed to perform the action with the reason stated in the `message`

        **FORBIDDEN**
        The cardholder is not found or the card program is not found or the caller doesn’t have permissions to create cards for the cardholder or card program.

        **LIVENESS_MISMATCH** 
        Card program or cardholder have the wrong liveness for the request.

        **CARD_PROGRAM_INVALID**
        Card program doesn’t belong to a partner this cardholder is associated with

        **FUNDING_SOURCE_INVALID**
        Funding source cannot be used with this card program
      content:
        application/json:
          schema:
            $ref: '../../models/api-error.yaml'

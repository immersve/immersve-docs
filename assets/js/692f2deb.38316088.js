"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[6824],{97425:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>b,frontMatter:()=>m,metadata:()=>u,toc:()=>y});var r=a(87462),n=(a(67294),a(3905)),i=(a(8209),a(26389)),s=a(94891),o=a(75190),_=a(47507),p=a(24310),l=a(63303),d=(a(75035),a(85162));const m={id:"set-a-card-pin",title:"Set a card PIN",description:"Set a new PIN on a card.",sidebar_label:"Set a card PIN",hide_title:!0,hide_table_of_contents:!0,api:{tags:["card"],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],parameters:[{name:"cardId",in:"path",description:"ID of card",required:!0,schema:{type:"string"}}],description:"Set a new PIN on a card.\n___________________________________________________________\nThe following validation rules are applied to the new PIN:\n- Must be exactly four digits\n- Can not be a repeating sequence: `0000`, `1111`, `2222`, `3333`, `4444`, `5555`, `6666`, `7777`, `8888`, or `9999`\n- Where `Y`, `M`, and `D` represent the customer's date of birth with the format `Y1Y2Y3Y4-M1M2-D1D2`, the PIN digits should not use the formats `Y1Y2Y3Y4`, `M1M2D1D2`, `Y3Y4M2D2`, `Y3Y4M1M2`. For example, if the date of birth is 1 April 1963 the following will not be accepted: 1963, 0401, 6341, 6304\n- Can not be the same as the last four digits of the PAN\n- Can not match any part of the customer's phone number(s)\n- Can not match any part of any reference number for the customer\n___________________________________________________________\n",requestBody:{content:{"application/json":{schema:{type:"object",required:["newPin"],properties:{newPin:{type:"string",description:"New PIN to set on the card",example:"1337"}},title:"set-card-pin-request"}}}},responses:{200:{description:"Successful operation"},400:{description:"Request fields are invalid",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:400},statusName:{type:"string",example:"Bad Request"},errorCode:{type:"string",example:"BAD_REQUEST"},errors:{type:"array",items:{type:"string",example:"Expected string, received number"}}},required:["statusCode","statusName","errorCode"],title:"api-error-400"}}}},403:{description:"User is not allowed to perform the action with the reason stated in the `errorCode`\n\n**FORBIDDEN**  \nThe card or cardholder does not exist or the user has insufficient permissions.\n\n**LIVENESS_MISMATCH**  \nResource liveness does not match request liveness.\n\n**INVALID_PIN_FORMAT**  \nThe PIN did not pass the validation rules.\n\n**CARD_SET_PIN_FORBIDDEN**  \nThe card is blocked, expired, or not active.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/cards/{cardId}/set-pin",servers:[{url:"https://api-sec.immersve.com/"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{newPin:"1337"},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Set a card PIN",description:{content:"Set a new PIN on a card.\n___________________________________________________________\nThe following validation rules are applied to the new PIN:\n- Must be exactly four digits\n- Can not be a repeating sequence: `0000`, `1111`, `2222`, `3333`, `4444`, `5555`, `6666`, `7777`, `8888`, or `9999`\n- Where `Y`, `M`, and `D` represent the customer's date of birth with the format `Y1Y2Y3Y4-M1M2-D1D2`, the PIN digits should not use the formats `Y1Y2Y3Y4`, `M1M2D1D2`, `Y3Y4M2D2`, `Y3Y4M1M2`. For example, if the date of birth is 1 April 1963 the following will not be accepted: 1963, 0401, 6341, 6304\n- Can not be the same as the last four digits of the PAN\n- Can not match any part of the customer's phone number(s)\n- Can not match any part of any reference number for the customer\n___________________________________________________________\n",type:"text/plain"},url:{path:["api","cards",":cardId","set-pin"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID of card",type:"text/plain"},type:"any",value:"",key:"cardId"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},c=void 0,u={unversionedId:"api-reference/set-a-card-pin",id:"api-reference/set-a-card-pin",title:"Set a card PIN",description:"Set a new PIN on a card.",source:"@site/docs/api-reference/set-a-card-pin.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/set-a-card-pin",permalink:"/api-reference/set-a-card-pin",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"set-a-card-pin",title:"Set a card PIN",description:"Set a new PIN on a card.",sidebar_label:"Set a card PIN",hide_title:!0,hide_table_of_contents:!0,api:{tags:["card"],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],parameters:[{name:"cardId",in:"path",description:"ID of card",required:!0,schema:{type:"string"}}],description:"Set a new PIN on a card.\n___________________________________________________________\nThe following validation rules are applied to the new PIN:\n- Must be exactly four digits\n- Can not be a repeating sequence: `0000`, `1111`, `2222`, `3333`, `4444`, `5555`, `6666`, `7777`, `8888`, or `9999`\n- Where `Y`, `M`, and `D` represent the customer's date of birth with the format `Y1Y2Y3Y4-M1M2-D1D2`, the PIN digits should not use the formats `Y1Y2Y3Y4`, `M1M2D1D2`, `Y3Y4M2D2`, `Y3Y4M1M2`. For example, if the date of birth is 1 April 1963 the following will not be accepted: 1963, 0401, 6341, 6304\n- Can not be the same as the last four digits of the PAN\n- Can not match any part of the customer's phone number(s)\n- Can not match any part of any reference number for the customer\n___________________________________________________________\n",requestBody:{content:{"application/json":{schema:{type:"object",required:["newPin"],properties:{newPin:{type:"string",description:"New PIN to set on the card",example:"1337"}},title:"set-card-pin-request"}}}},responses:{200:{description:"Successful operation"},400:{description:"Request fields are invalid",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:400},statusName:{type:"string",example:"Bad Request"},errorCode:{type:"string",example:"BAD_REQUEST"},errors:{type:"array",items:{type:"string",example:"Expected string, received number"}}},required:["statusCode","statusName","errorCode"],title:"api-error-400"}}}},403:{description:"User is not allowed to perform the action with the reason stated in the `errorCode`\n\n**FORBIDDEN**  \nThe card or cardholder does not exist or the user has insufficient permissions.\n\n**LIVENESS_MISMATCH**  \nResource liveness does not match request liveness.\n\n**INVALID_PIN_FORMAT**  \nThe PIN did not pass the validation rules.\n\n**CARD_SET_PIN_FORBIDDEN**  \nThe card is blocked, expired, or not active.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/cards/{cardId}/set-pin",servers:[{url:"https://api-sec.immersve.com/"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{newPin:"1337"},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Set a card PIN",description:{content:"Set a new PIN on a card.\n___________________________________________________________\nThe following validation rules are applied to the new PIN:\n- Must be exactly four digits\n- Can not be a repeating sequence: `0000`, `1111`, `2222`, `3333`, `4444`, `5555`, `6666`, `7777`, `8888`, or `9999`\n- Where `Y`, `M`, and `D` represent the customer's date of birth with the format `Y1Y2Y3Y4-M1M2-D1D2`, the PIN digits should not use the formats `Y1Y2Y3Y4`, `M1M2D1D2`, `Y3Y4M2D2`, `Y3Y4M1M2`. For example, if the date of birth is 1 April 1963 the following will not be accepted: 1963, 0401, 6341, 6304\n- Can not be the same as the last four digits of the PAN\n- Can not match any part of the customer's phone number(s)\n- Can not match any part of any reference number for the customer\n___________________________________________________________\n",type:"text/plain"},url:{path:["api","cards",":cardId","set-pin"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID of card",type:"text/plain"},type:"any",value:"",key:"cardId"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Create a card",permalink:"/api-reference/create-a-card"},next:{title:"Cancel a card",permalink:"/api-reference/cancel-a-card"}},h={},y=[{value:"Set a card PIN",id:"set-a-card-pin",level:2}],f={toc:y};function b(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"set-a-card-pin"},"Set a card PIN"),(0,n.kt)("p",null,"Set a new PIN on a card."),(0,n.kt)("hr",null),(0,n.kt)("p",null,"The following validation rules are applied to the new PIN:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Must be exactly four digits"),(0,n.kt)("li",{parentName:"ul"},"Can not be a repeating sequence: ",(0,n.kt)("inlineCode",{parentName:"li"},"0000"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"1111"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"2222"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"3333"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"4444"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"5555"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"6666"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"7777"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"8888"),", or ",(0,n.kt)("inlineCode",{parentName:"li"},"9999")),(0,n.kt)("li",{parentName:"ul"},"Where ",(0,n.kt)("inlineCode",{parentName:"li"},"Y"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"M"),", and ",(0,n.kt)("inlineCode",{parentName:"li"},"D")," represent the customer's date of birth with the format ",(0,n.kt)("inlineCode",{parentName:"li"},"Y1Y2Y3Y4-M1M2-D1D2"),", the PIN digits should not use the formats ",(0,n.kt)("inlineCode",{parentName:"li"},"Y1Y2Y3Y4"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"M1M2D1D2"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Y3Y4M2D2"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Y3Y4M1M2"),". For example, if the date of birth is 1 April 1963 the following will not be accepted: 1963, 0401, 6341, 6304"),(0,n.kt)("li",{parentName:"ul"},"Can not be the same as the last four digits of the PAN"),(0,n.kt)("li",{parentName:"ul"},"Can not match any part of the customer's phone number(s)"),(0,n.kt)("li",{parentName:"ul"},"Can not match any part of any reference number for the customer")),(0,n.kt)("hr",null),(0,n.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"Path Parameters")),(0,n.kt)("div",null,(0,n.kt)("ul",null,(0,n.kt)(o.Z,{className:"paramsItem",param:{name:"cardId",in:"path",description:"ID of card",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,n.kt)(s.Z,{mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Request Body")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"newPin",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"New PIN to set on the card",example:"1337"},mdxType:"SchemaItem"}))))),(0,n.kt)("div",null,(0,n.kt)(i.Z,{mdxType:"ApiTabs"},(0,n.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Successful operation")),(0,n.kt)("div",null)),(0,n.kt)(d.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Request fields are invalid")),(0,n.kt)("div",null,(0,n.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(l.Z,{mdxType:"SchemaTabs"},(0,n.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"BAD_REQUEST"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"errors",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",example:"Expected string, received number"}},mdxType:"SchemaItem"})))),(0,n.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(_.Z,{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "BAD_REQUEST",\n  "errors": [\n    "Expected string, received number"\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,n.kt)(d.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"User is not allowed to perform the action with the reason stated in the ",(0,n.kt)("inlineCode",{parentName:"p"},"errorCode")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"FORBIDDEN"),(0,n.kt)("br",{parentName:"p"}),"\n","The card or cardholder does not exist or the user has insufficient permissions."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"LIVENESS_MISMATCH"),(0,n.kt)("br",{parentName:"p"}),"\n","Resource liveness does not match request liveness."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"INVALID_PIN_FORMAT"),(0,n.kt)("br",{parentName:"p"}),"\n","The PIN did not pass the validation rules."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"CARD_SET_PIN_FORBIDDEN"),(0,n.kt)("br",{parentName:"p"}),"\n","The card is blocked, expired, or not active.")),(0,n.kt)("div",null,(0,n.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(l.Z,{mdxType:"SchemaTabs"},(0,n.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"},mdxType:"SchemaItem"})))),(0,n.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(_.Z,{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);
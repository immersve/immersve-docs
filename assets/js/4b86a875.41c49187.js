"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[8296],{4813:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>y,contentTitle:()=>u,default:()=>x,frontMatter:()=>m,metadata:()=>h,toc:()=>g});var i=t(87462),r=(t(67294),t(3905)),s=(t(19959),t(26389)),n=t(94891),c=t(74933),o=t(47507),d=t(24310),l=t(63303),p=(t(75035),t(85162));const m={id:"get-detailed-account-info",title:"Get detailed account info",description:"Get detailed account info",sidebar_label:"Get detailed account info",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts-custodial"],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],parameters:[{name:"accountId",in:"path",description:"ID of the account",required:!0,schema:{type:"string"}}],responses:{200:{content:{"application/json":{schema:{type:"object",properties:{accountId:{type:"string",description:"The unique account id",example:"225d85e65495722bf6517ea0ba0d6f56"},accountReference:{type:"string",description:"The external account reference generated by the caller",example:"da2ha4dk88zq9ox7u6wzh973gdt8ptrz"},firstName:{type:"string",example:"Joe"},lastName:{type:"string",example:"Doe"},cardName:{type:"string",example:"Joe D"},birthDate:{type:"string",example:"1980-01-01"},email:{type:"string",example:"JoeDoe@example.com"},phoneNumber:{type:"string",example:"+1 905-577-5464"},address:{type:"object",required:["country","city","state","address1","address2","zipCode"],properties:{country:{type:"string",description:"The user's country code, as a ISO 3166-1 alpha-2-code",minLength:2,maxLength:1,pattern:"^[a-zA-Z][a-zA-Z]$",example:"AU"},city:{type:"string",description:"The user's city",minLength:1,maxLength:50,example:"Perth"},state:{type:"string",description:"The user's state",minLength:1,maxLength:12,example:"VIC"},address1:{type:"string",description:"Address line 1",minLength:1,maxLength:50,example:"My address line 1"},address2:{type:"string",description:"Address line 2",minLength:1,maxLength:50,example:"My address line 2"},address3:{type:"string",description:"Address line 3",maxLength:50,example:"My address line 3"},zipCode:{type:"string",description:"Zip code",minLength:1,maxLength:20,example:"55416"}}},creationDate:{type:"string",format:"date-time",example:"2023-02-15T03:39:19Z"}}}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{errorCode:{description:"The error code",type:"string"},errorMessage:{description:"The error message",type:"string"},errorMap:{description:"An array of key-value pairs describing field errors",type:"array",items:{type:"object"}}},example:{success:!1,errorCode:"INVALID_BODY",errorMap:{firstName:"Required"}}}}}}},description:"Get detailed account info",method:"get",path:"/api/custodial/accounts/{accountId}",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"Get detailed account info",description:{type:"text/plain"},url:{path:["api","custodial","accounts",":accountId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID of the account",type:"text/plain"},type:"any",value:"",key:"accountId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET",auth:{type:"apikey",apikey:[{type:"any",value:"x-api-key",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"get api-method",info_path:"api-reference/immersve-api"},u=void 0,h={unversionedId:"api-reference/get-detailed-account-info",id:"api-reference/get-detailed-account-info",title:"Get detailed account info",description:"Get detailed account info",source:"@site/docs/api-reference/get-detailed-account-info.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/get-detailed-account-info",permalink:"/api-reference/get-detailed-account-info",draft:!1,tags:[],version:"current",frontMatter:{id:"get-detailed-account-info",title:"Get detailed account info",description:"Get detailed account info",sidebar_label:"Get detailed account info",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts-custodial"],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],parameters:[{name:"accountId",in:"path",description:"ID of the account",required:!0,schema:{type:"string"}}],responses:{200:{content:{"application/json":{schema:{type:"object",properties:{accountId:{type:"string",description:"The unique account id",example:"225d85e65495722bf6517ea0ba0d6f56"},accountReference:{type:"string",description:"The external account reference generated by the caller",example:"da2ha4dk88zq9ox7u6wzh973gdt8ptrz"},firstName:{type:"string",example:"Joe"},lastName:{type:"string",example:"Doe"},cardName:{type:"string",example:"Joe D"},birthDate:{type:"string",example:"1980-01-01"},email:{type:"string",example:"JoeDoe@example.com"},phoneNumber:{type:"string",example:"+1 905-577-5464"},address:{type:"object",required:["country","city","state","address1","address2","zipCode"],properties:{country:{type:"string",description:"The user's country code, as a ISO 3166-1 alpha-2-code",minLength:2,maxLength:1,pattern:"^[a-zA-Z][a-zA-Z]$",example:"AU"},city:{type:"string",description:"The user's city",minLength:1,maxLength:50,example:"Perth"},state:{type:"string",description:"The user's state",minLength:1,maxLength:12,example:"VIC"},address1:{type:"string",description:"Address line 1",minLength:1,maxLength:50,example:"My address line 1"},address2:{type:"string",description:"Address line 2",minLength:1,maxLength:50,example:"My address line 2"},address3:{type:"string",description:"Address line 3",maxLength:50,example:"My address line 3"},zipCode:{type:"string",description:"Zip code",minLength:1,maxLength:20,example:"55416"}}},creationDate:{type:"string",format:"date-time",example:"2023-02-15T03:39:19Z"}}}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{errorCode:{description:"The error code",type:"string"},errorMessage:{description:"The error message",type:"string"},errorMap:{description:"An array of key-value pairs describing field errors",type:"array",items:{type:"object"}}},example:{success:!1,errorCode:"INVALID_BODY",errorMap:{firstName:"Required"}}}}}}},description:"Get detailed account info",method:"get",path:"/api/custodial/accounts/{accountId}",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"Get detailed account info",description:{type:"text/plain"},url:{path:["api","custodial","accounts",":accountId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID of the account",type:"text/plain"},type:"any",value:"",key:"accountId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET",auth:{type:"apikey",apikey:[{type:"any",value:"x-api-key",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"get api-method",info_path:"api-reference/immersve-api"},sidebar:"primarySidebar",previous:{title:"Create an Account",permalink:"/api-reference/create-an-account"},next:{title:"Update an Account",permalink:"/api-reference/update-an-account"}},y={},g=[{value:"Get detailed account info",id:"get-detailed-account-info",level:2}],f={toc:g};function x(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},f,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"get-detailed-account-info"},"Get detailed account info"),(0,r.kt)("p",null,"Get detailed account info"),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Path Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(c.Z,{className:"paramsItem",param:{name:"accountId",in:"path",description:"ID of the account",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,r.kt)("div",null,(0,r.kt)(s.Z,{mdxType:"ApiTabs"},(0,r.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,r.kt)("div",null),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(l.Z,{mdxType:"SchemaTabs"},(0,r.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"accountId",required:!1,schemaDescription:"The unique account id",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"accountReference",required:!1,schemaDescription:"The external account reference generated by the caller",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"firstName",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"lastName",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"cardName",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"birthDate",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"email",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"phoneNumber",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"address"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"country",required:!1,schemaDescription:"The user's country code, as a ISO 3166-1 alpha-2-code",schemaName:"string",qualifierMessage:"**Possible values:** `>= 2 characters` and `<= 1 characters`, Value must match regular expression `^[a-zA-Z][a-zA-Z]$`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"city",required:!1,schemaDescription:"The user's city",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"state",required:!1,schemaDescription:"The user's state",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 12 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"address1",required:!1,schemaDescription:"Address line 1",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"address2",required:!1,schemaDescription:"Address line 2",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"address3",required:!1,schemaDescription:"Address line 3",schemaName:"string",qualifierMessage:"**Possible values:** `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"zipCode",required:!1,schemaDescription:"Zip code",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 20 characters`",defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{collapsible:!1,name:"creationDate",required:!1,schemaDescription:void 0,schemaName:"date-time",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(o.Z,{responseExample:'{\n  "accountId": "225d85e65495722bf6517ea0ba0d6f56",\n  "accountReference": "da2ha4dk88zq9ox7u6wzh973gdt8ptrz",\n  "firstName": "Joe",\n  "lastName": "Doe",\n  "cardName": "Joe D",\n  "birthDate": "1980-01-01",\n  "email": "JoeDoe@example.com",\n  "phoneNumber": "+1 905-577-5464",\n  "address": {\n    "country": "AU",\n    "city": "Perth",\n    "state": "VIC",\n    "address1": "My address line 1",\n    "address2": "My address line 2",\n    "address3": "My address line 3",\n    "zipCode": "55416"\n  },\n  "creationDate": "2023-02-15T03:39:19Z"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(p.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Error")),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(l.Z,{mdxType:"SchemaTabs"},(0,r.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"errorCode",required:!1,schemaDescription:"The error code",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"errorMessage",required:!1,schemaDescription:"The error message",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"errorMap",required:!1,schemaDescription:"An array of key-value pairs describing field errors",schemaName:"object[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(o.Z,{responseExample:'{\n  "success": false,\n  "errorCode": "INVALID_BODY",\n  "errorMap": {\n    "firstName": "Required"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}x.isMDXComponent=!0}}]);
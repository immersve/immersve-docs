"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[5589],{43046:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>h,contentTitle:()=>p,default:()=>x,frontMatter:()=>l,metadata:()=>u,toc:()=>y});var r=t(87462),s=(t(67294),t(3905)),i=(t(19959),t(26389)),n=t(94891),o=(t(74933),t(47507)),c=t(24310),d=t(63303),m=(t(75035),t(85162));const l={id:"create-an-account",title:"Create an Account",description:"Create an Account",sidebar_label:"Create an Account",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts-custodial"],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],requestBody:{content:{"application/json":{schema:{type:"object",required:["firstName","lastName","email","phoneNumber","address"],properties:{accountReference:{type:"string",description:"An external account reference generated by the caller in relation to the requested account",minLength:1,maxLength:256,example:"115cdd06-4f50-4235-9260-ed4954b9663b"},firstName:{type:"string",description:"The user's first name",minLength:1,maxLength:64,example:"Joe"},lastName:{type:"string",description:"The user's last name",minLength:1,maxLength:64,example:"Cardholder"},cardName:{type:"string",description:"The personalized card name",maxLength:26,example:"J Cardholder"},birthDate:{type:"string",description:"The user's birth date formatted as YYYY-MM-DD",maxLength:10,format:"date",example:"1980-01-31"},email:{type:"string",description:"The user's email address",minLength:1,maxLength:303,format:"email",example:"joe@joecardholder.com"},phoneNumber:{type:"string",description:"The user's phone number formatted as +xxxxxx",minLength:1,maxLength:38,pattern:"^+d{1,38}$",example:"+64211234567"},address:{type:"object",required:["country","city","state","address1","address2","zipCode"],properties:{country:{type:"string",description:"The user's country code, as a ISO 3166-1 alpha-2-code",minLength:2,maxLength:1,pattern:"^[a-zA-Z][a-zA-Z]$",example:"AU"},city:{type:"string",description:"The user's city",minLength:1,maxLength:50,example:"Perth"},state:{type:"string",description:"The user's state",minLength:1,maxLength:12,example:"VIC"},address1:{type:"string",description:"Address line 1",minLength:1,maxLength:50,example:"My address line 1"},address2:{type:"string",description:"Address line 2",minLength:1,maxLength:50,example:"My address line 2"},address3:{type:"string",description:"Address line 3",maxLength:50,example:"My address line 3"},zipCode:{type:"string",description:"Zip code",minLength:1,maxLength:20,example:"55416"}}}}}}},required:!0},responses:{201:{content:{"application/json":{schema:{type:"object",properties:{accountId:{type:"string"}}}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{errorCode:{description:"The error code",type:"string"},errorMessage:{description:"The error message",type:"string"},errorMap:{description:"An array of key-value pairs describing field errors",type:"array",items:{type:"object"}}},example:{success:!1,errorCode:"INVALID_BODY",errorMessage:"Invalid body",errorMap:{firstName:"Required"}}}}}}},description:"Create an Account",method:"post",path:"/api/custodial/accounts",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{accountReference:"115cdd06-4f50-4235-9260-ed4954b9663b",firstName:"Joe",lastName:"Cardholder",cardName:"J Cardholder",birthDate:"1980-01-31",email:"joe@joecardholder.com",phoneNumber:"+64211234567",address:{country:"AU",city:"Perth",state:"VIC",address1:"My address line 1",address2:"My address line 2",address3:"My address line 3",zipCode:"55416"}},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"Create an Account",description:{type:"text/plain"},url:{path:["api","custodial","accounts"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"apikey",apikey:[{type:"any",value:"x-api-key",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api"},p=void 0,u={unversionedId:"api-reference/create-an-account",id:"api-reference/create-an-account",title:"Create an Account",description:"Create an Account",source:"@site/docs/api-reference/create-an-account.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/create-an-account",permalink:"/api-reference/create-an-account",draft:!1,tags:[],version:"current",frontMatter:{id:"create-an-account",title:"Create an Account",description:"Create an Account",sidebar_label:"Create an Account",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts-custodial"],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],requestBody:{content:{"application/json":{schema:{type:"object",required:["firstName","lastName","email","phoneNumber","address"],properties:{accountReference:{type:"string",description:"An external account reference generated by the caller in relation to the requested account",minLength:1,maxLength:256,example:"115cdd06-4f50-4235-9260-ed4954b9663b"},firstName:{type:"string",description:"The user's first name",minLength:1,maxLength:64,example:"Joe"},lastName:{type:"string",description:"The user's last name",minLength:1,maxLength:64,example:"Cardholder"},cardName:{type:"string",description:"The personalized card name",maxLength:26,example:"J Cardholder"},birthDate:{type:"string",description:"The user's birth date formatted as YYYY-MM-DD",maxLength:10,format:"date",example:"1980-01-31"},email:{type:"string",description:"The user's email address",minLength:1,maxLength:303,format:"email",example:"joe@joecardholder.com"},phoneNumber:{type:"string",description:"The user's phone number formatted as +xxxxxx",minLength:1,maxLength:38,pattern:"^\\+\\d{1,38}$",example:"+64211234567"},address:{type:"object",required:["country","city","state","address1","address2","zipCode"],properties:{country:{type:"string",description:"The user's country code, as a ISO 3166-1 alpha-2-code",minLength:2,maxLength:1,pattern:"^[a-zA-Z][a-zA-Z]$",example:"AU"},city:{type:"string",description:"The user's city",minLength:1,maxLength:50,example:"Perth"},state:{type:"string",description:"The user's state",minLength:1,maxLength:12,example:"VIC"},address1:{type:"string",description:"Address line 1",minLength:1,maxLength:50,example:"My address line 1"},address2:{type:"string",description:"Address line 2",minLength:1,maxLength:50,example:"My address line 2"},address3:{type:"string",description:"Address line 3",maxLength:50,example:"My address line 3"},zipCode:{type:"string",description:"Zip code",minLength:1,maxLength:20,example:"55416"}}}}}}},required:!0},responses:{201:{content:{"application/json":{schema:{type:"object",properties:{accountId:{type:"string"}}}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{errorCode:{description:"The error code",type:"string"},errorMessage:{description:"The error message",type:"string"},errorMap:{description:"An array of key-value pairs describing field errors",type:"array",items:{type:"object"}}},example:{success:!1,errorCode:"INVALID_BODY",errorMessage:"Invalid body",errorMap:{firstName:"Required"}}}}}}},description:"Create an Account",method:"post",path:"/api/custodial/accounts",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{accountReference:"115cdd06-4f50-4235-9260-ed4954b9663b",firstName:"Joe",lastName:"Cardholder",cardName:"J Cardholder",birthDate:"1980-01-31",email:"joe@joecardholder.com",phoneNumber:"+64211234567",address:{country:"AU",city:"Perth",state:"VIC",address1:"My address line 1",address2:"My address line 2",address3:"My address line 3",zipCode:"55416"}},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"Create an Account",description:{type:"text/plain"},url:{path:["api","custodial","accounts"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"apikey",apikey:[{type:"any",value:"x-api-key",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api"},sidebar:"primarySidebar",previous:{title:"Accounts (Custodial)",permalink:"/api-reference/accounts-custodial"},next:{title:"Get detailed account info",permalink:"/api-reference/get-detailed-account-info"}},h={},y=[{value:"Create an Account",id:"create-an-account",level:2}],g={toc:y};function x(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,r.Z)({},g,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"create-an-account"},"Create an Account"),(0,s.kt)("p",null,"Create an Account"),(0,s.kt)(n.Z,{mdxType:"MimeTabs"},(0,s.kt)(m.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Request Body"),(0,s.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"accountReference",required:!1,schemaDescription:"An external account reference generated by the caller in relation to the requested account",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 256 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"firstName",required:!0,schemaDescription:"The user's first name",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 64 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"lastName",required:!0,schemaDescription:"The user's last name",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 64 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"cardName",required:!1,schemaDescription:"The personalized card name",schemaName:"string",qualifierMessage:"**Possible values:** `<= 26 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"birthDate",required:!1,schemaDescription:"The user's birth date formatted as YYYY-MM-DD",schemaName:"date",qualifierMessage:"**Possible values:** `<= 10 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"email",required:!0,schemaDescription:"The user's email address",schemaName:"email",qualifierMessage:"**Possible values:** `non-empty` and `<= 303 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"phoneNumber",required:!0,schemaDescription:"The user's phone number formatted as +xxxxxx",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 38 characters`, Value must match regular expression `^\\+\\d{1,38}$`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"address"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object"),(0,s.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"country",required:!0,schemaDescription:"The user's country code, as a ISO 3166-1 alpha-2-code",schemaName:"string",qualifierMessage:"**Possible values:** `>= 2 characters` and `<= 1 characters`, Value must match regular expression `^[a-zA-Z][a-zA-Z]$`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"city",required:!0,schemaDescription:"The user's city",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"state",required:!0,schemaDescription:"The user's state",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 12 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"address1",required:!0,schemaDescription:"Address line 1",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"address2",required:!0,schemaDescription:"Address line 2",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"address3",required:!1,schemaDescription:"Address line 3",schemaName:"string",qualifierMessage:"**Possible values:** `<= 50 characters`",defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"zipCode",required:!0,schemaDescription:"Zip code",schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 20 characters`",defaultValue:void 0,mdxType:"SchemaItem"})))))))),(0,s.kt)("div",null,(0,s.kt)(i.Z,{mdxType:"ApiTabs"},(0,s.kt)(m.Z,{label:"201",value:"201",mdxType:"TabItem"},(0,s.kt)("div",null),(0,s.kt)("div",null,(0,s.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(d.Z,{mdxType:"SchemaTabs"},(0,s.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"accountId",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "accountId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(m.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Error")),(0,s.kt)("div",null,(0,s.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(d.Z,{mdxType:"SchemaTabs"},(0,s.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"errorCode",required:!1,schemaDescription:"The error code",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"errorMessage",required:!1,schemaDescription:"The error message",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"errorMap",required:!1,schemaDescription:"An array of key-value pairs describing field errors",schemaName:"object[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,s.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "success": false,\n  "errorCode": "INVALID_BODY",\n  "errorMessage": "Invalid body",\n  "errorMap": {\n    "firstName": "Required"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}x.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[8493],{95776:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>u,contentTitle:()=>m,default:()=>x,frontMatter:()=>l,metadata:()=>y,toc:()=>h});var t=r(87462),s=(r(67294),r(3905)),i=(r(8209),r(26389)),n=r(94891),d=(r(75190),r(47507)),c=r(24310),p=r(63303),o=(r(75035),r(85162));const l={id:"create-a-new-card",title:"Create a new card",description:"Create a new card",sidebar_label:"Create a new card",hide_title:!0,hide_table_of_contents:!0,api:{tags:["cards-custodial"],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],requestBody:{content:{"application/json":{schema:{type:"object",required:["accountId","cardReference","cardProgramId","type"],properties:{accountId:{type:"string"},cardReference:{type:"string",description:"External card reference generated by the caller"},deliveryAddress:{type:"object",required:["country","city","state","address1","address2","zipCode"],properties:{country:{type:"string",description:"The user's country code, as a ISO 3166-1 alpha-2-code",minLength:2,maxLength:2,pattern:"^[a-zA-Z][a-zA-Z]$",example:"AU"},city:{type:"string",description:"The user's city",minLength:1,maxLength:50,example:"Perth"},state:{type:"string",description:"The user's state",minLength:1,maxLength:12,example:"VIC"},address1:{type:"string",description:"Address line 1",minLength:1,maxLength:50,example:"My address line 1"},address2:{type:"string",description:"Address line 2",minLength:1,maxLength:50,example:"My address line 2"},address3:{type:"string",description:"Address line 3",maxLength:50,example:"My address line 3"},zipCode:{type:"string",description:"Zip code",minLength:1,maxLength:20,example:"55416"}},title:"address",description:"Card delivery address"},cardProgramId:{type:"string",description:"The id of the card program"},type:{type:"string",enum:["PHYSICAL","VIRTUAL"]}},title:"create-card-request"}}},required:!0},responses:{200:{content:{"application/json":{schema:{type:"object",properties:{cardId:{type:"string",description:"The created card ID"}},title:"create-card-response"}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{errorCode:{description:"The error code",type:"string"},errorMessage:{description:"The error message",type:"string"},errorMap:{description:"An array of key-value pairs describing field errors",type:"array",items:{type:"object"}}},example:{success:!1,errorCode:"INVALID_BODY",errorMessage:"Invalid body",errorMap:{firstName:"Required"}},title:"custodial-error-response"}}}}},description:"Create a new card",method:"post",path:"/api/custodial/cards",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{accountId:"string",cardReference:"string",deliveryAddress:{country:"AU",city:"Perth",state:"VIC",address1:"My address line 1",address2:"My address line 2",address3:"My address line 3",zipCode:"55416"},cardProgramId:"string",type:"PHYSICAL"},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"Create a new card",description:{type:"text/plain"},url:{path:["api","custodial","cards"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"apikey",apikey:[{type:"any",value:"x-api-key",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},m=void 0,y={unversionedId:"api-reference/create-a-new-card",id:"api-reference/create-a-new-card",title:"Create a new card",description:"Create a new card",source:"@site/docs/api-reference/create-a-new-card.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/create-a-new-card",permalink:"/api-reference/create-a-new-card",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"create-a-new-card",title:"Create a new card",description:"Create a new card",sidebar_label:"Create a new card",hide_title:!0,hide_table_of_contents:!0,api:{tags:["cards-custodial"],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],requestBody:{content:{"application/json":{schema:{type:"object",required:["accountId","cardReference","cardProgramId","type"],properties:{accountId:{type:"string"},cardReference:{type:"string",description:"External card reference generated by the caller"},deliveryAddress:{type:"object",required:["country","city","state","address1","address2","zipCode"],properties:{country:{type:"string",description:"The user's country code, as a ISO 3166-1 alpha-2-code",minLength:2,maxLength:2,pattern:"^[a-zA-Z][a-zA-Z]$",example:"AU"},city:{type:"string",description:"The user's city",minLength:1,maxLength:50,example:"Perth"},state:{type:"string",description:"The user's state",minLength:1,maxLength:12,example:"VIC"},address1:{type:"string",description:"Address line 1",minLength:1,maxLength:50,example:"My address line 1"},address2:{type:"string",description:"Address line 2",minLength:1,maxLength:50,example:"My address line 2"},address3:{type:"string",description:"Address line 3",maxLength:50,example:"My address line 3"},zipCode:{type:"string",description:"Zip code",minLength:1,maxLength:20,example:"55416"}},title:"address",description:"Card delivery address"},cardProgramId:{type:"string",description:"The id of the card program"},type:{type:"string",enum:["PHYSICAL","VIRTUAL"]}},title:"create-card-request"}}},required:!0},responses:{200:{content:{"application/json":{schema:{type:"object",properties:{cardId:{type:"string",description:"The created card ID"}},title:"create-card-response"}}}},default:{description:"Error",content:{"application/json":{schema:{type:"object",properties:{errorCode:{description:"The error code",type:"string"},errorMessage:{description:"The error message",type:"string"},errorMap:{description:"An array of key-value pairs describing field errors",type:"array",items:{type:"object"}}},example:{success:!1,errorCode:"INVALID_BODY",errorMessage:"Invalid body",errorMap:{firstName:"Required"}},title:"custodial-error-response"}}}}},description:"Create a new card",method:"post",path:"/api/custodial/cards",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{accountId:"string",cardReference:"string",deliveryAddress:{country:"AU",city:"Perth",state:"VIC",address1:"My address line 1",address2:"My address line 2",address3:"My address line 3",zipCode:"55416"},cardProgramId:"string",type:"PHYSICAL"},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"Create a new card",description:{type:"text/plain"},url:{path:["api","custodial","cards"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"apikey",apikey:[{type:"any",value:"x-api-key",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Cards (Custodial)",permalink:"/api-reference/cards-custodial"},next:{title:"Close a card",permalink:"/api-reference/close-a-card"}},u={},h=[{value:"Create a new card",id:"create-a-new-card",level:2}],g={toc:h};function x(e){let{components:a,...r}=e;return(0,s.kt)("wrapper",(0,t.Z)({},g,r,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"create-a-new-card"},"Create a new card"),(0,s.kt)("p",null,"Create a new card"),(0,s.kt)(n.Z,{mdxType:"MimeTabs"},(0,s.kt)(o.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Request Body"),(0,s.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"accountId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"cardReference",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"External card reference generated by the caller"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{}},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"deliveryAddress"),(0,s.kt)("span",{style:{opacity:"0.6"}}," object")),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Card delivery address")),(0,s.kt)(c.Z,{collapsible:!1,name:"country",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** `>= 2 characters` and `<= 2 characters`, Value must match regular expression `^[a-zA-Z][a-zA-Z]$`",schema:{type:"string",description:"The user's country code, as a ISO 3166-1 alpha-2-code",minLength:2,maxLength:2,pattern:"^[a-zA-Z][a-zA-Z]$",example:"AU"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"city",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",schema:{type:"string",description:"The user's city",minLength:1,maxLength:50,example:"Perth"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"state",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 12 characters`",schema:{type:"string",description:"The user's state",minLength:1,maxLength:12,example:"VIC"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"address1",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",schema:{type:"string",description:"Address line 1",minLength:1,maxLength:50,example:"My address line 1"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"address2",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 50 characters`",schema:{type:"string",description:"Address line 2",minLength:1,maxLength:50,example:"My address line 2"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"address3",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** `<= 50 characters`",schema:{type:"string",description:"Address line 3",maxLength:50,example:"My address line 3"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"zipCode",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** `non-empty` and `<= 20 characters`",schema:{type:"string",description:"Zip code",minLength:1,maxLength:20,example:"55416"},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!1,name:"cardProgramId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The id of the card program"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`PHYSICAL`, `VIRTUAL`]",schema:{type:"string",enum:["PHYSICAL","VIRTUAL"]},mdxType:"SchemaItem"}))))),(0,s.kt)("div",null,(0,s.kt)(i.Z,{mdxType:"ApiTabs"},(0,s.kt)(o.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null),(0,s.kt)("div",null,(0,s.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(o.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.Z,{mdxType:"SchemaTabs"},(0,s.kt)(o.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"cardId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The created card ID"},mdxType:"SchemaItem"})))),(0,s.kt)(o.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(d.Z,{responseExample:'{\n  "cardId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(o.Z,{label:"default",value:"default",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Error")),(0,s.kt)("div",null,(0,s.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(o.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.Z,{mdxType:"SchemaTabs"},(0,s.kt)(o.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"errorCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The error code",type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"errorMessage",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The error message",type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"errorMap",required:!1,schemaName:"object[]",qualifierMessage:void 0,schema:{description:"An array of key-value pairs describing field errors",type:"array",items:{type:"object"}},mdxType:"SchemaItem"})))),(0,s.kt)(o.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(d.Z,{responseExample:'{\n  "success": false,\n  "errorCode": "INVALID_BODY",\n  "errorMessage": "Invalid body",\n  "errorMap": {\n    "firstName": "Required"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}x.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[7167],{60235:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>b,frontMatter:()=>m,metadata:()=>u,toc:()=>y});var n=a(87462),r=(a(67294),a(3905)),i=(a(8209),a(26389)),c=a(94891),o=(a(75190),a(47507)),s=a(24310),p=a(63303),d=(a(75035),a(85162));const m={id:"create-account",title:"Create Account",description:"Create account",sidebar_label:"Create Account",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts"],description:"Create account",requestBody:{content:{"application/json":{schema:{oneOf:[{title:"Create cardholder account",type:"object",required:["type","partnerAccountId","ownerUserId"],properties:{type:{type:"string",description:"The type of the account",enum:["cardholder"]},name:{type:"string",description:"Account name"},partnerAccountId:{type:"string",description:"The id of the partner account that this cardholder must be linked to",example:"12fff060a9550622e86a7a962f548c1d"},ownerUserId:{type:"string",description:"This user will be set as the owner of the created account",example:"9c4010f2946be546c716add4bf479410"}}},{title:"Create partner account",type:"object",required:["type","name"],properties:{type:{type:"string",description:"The type of the account",enum:["partner"]},name:{type:"string",description:"Account name"},parentAccountId:{type:"string",description:"Parent account. If provided, this account will be set as the parent of the created account",example:"dbc1d6aa6c0b2a5be2f567470623ede5"},ownerUserId:{type:"string",description:"Owner user id. If provided, this user will be set as the owner of the created account",example:"1a4d3b41756ce73db66ed969e4e86448"}}}],title:"create-account-request"}}},required:!0},responses:{200:{description:"Account created successfully",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The unique account ID",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},createdAt:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},modifiedAt:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},partnerAccountId:{type:"string",description:"The partner account ID that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},isActive:{type:"boolean",description:"Whether the account is active or not",example:!0},type:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]}},title:"account"}}}},403:{description:"User is not allowed to perform the action with the reason stated in the `message`\n\n**FORBIDDEN**\nInsufficient permissions to perform the action.\n\n**INVALID_PARTNER_ACCOUNT**\nThe partner account does not exist.\n\n**INVALID_PARENT_ACCOUNT**\nThe parent account does not exist or is not a partner account.\n\n**INVALID_USER**\nThe user does not exist or is not fully provisioned.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/accounts",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{type:"cardholder",name:"string",partnerAccountId:"12fff060a9550622e86a7a962f548c1d",ownerUserId:"9c4010f2946be546c716add4bf479410"},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Create Account",description:{content:"Create account",type:"text/plain"},url:{path:["api","accounts"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},l=void 0,u={unversionedId:"api-reference/create-account",id:"api-reference/create-account",title:"Create Account",description:"Create account",source:"@site/docs/api-reference/create-account.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/create-account",permalink:"/api-reference/create-account",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"create-account",title:"Create Account",description:"Create account",sidebar_label:"Create Account",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts"],description:"Create account",requestBody:{content:{"application/json":{schema:{oneOf:[{title:"Create cardholder account",type:"object",required:["type","partnerAccountId","ownerUserId"],properties:{type:{type:"string",description:"The type of the account",enum:["cardholder"]},name:{type:"string",description:"Account name"},partnerAccountId:{type:"string",description:"The id of the partner account that this cardholder must be linked to",example:"12fff060a9550622e86a7a962f548c1d"},ownerUserId:{type:"string",description:"This user will be set as the owner of the created account",example:"9c4010f2946be546c716add4bf479410"}}},{title:"Create partner account",type:"object",required:["type","name"],properties:{type:{type:"string",description:"The type of the account",enum:["partner"]},name:{type:"string",description:"Account name"},parentAccountId:{type:"string",description:"Parent account. If provided, this account will be set as the parent of the created account",example:"dbc1d6aa6c0b2a5be2f567470623ede5"},ownerUserId:{type:"string",description:"Owner user id. If provided, this user will be set as the owner of the created account",example:"1a4d3b41756ce73db66ed969e4e86448"}}}],title:"create-account-request"}}},required:!0},responses:{200:{description:"Account created successfully",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The unique account ID",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},createdAt:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},modifiedAt:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},partnerAccountId:{type:"string",description:"The partner account ID that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},isActive:{type:"boolean",description:"Whether the account is active or not",example:!0},type:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]}},title:"account"}}}},403:{description:"User is not allowed to perform the action with the reason stated in the `message`\n\n**FORBIDDEN**\nInsufficient permissions to perform the action.\n\n**INVALID_PARTNER_ACCOUNT**\nThe partner account does not exist.\n\n**INVALID_PARENT_ACCOUNT**\nThe parent account does not exist or is not a partner account.\n\n**INVALID_USER**\nThe user does not exist or is not fully provisioned.\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/accounts",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},jsonRequestBodyExample:{type:"cardholder",name:"string",partnerAccountId:"12fff060a9550622e86a7a962f548c1d",ownerUserId:"9c4010f2946be546c716add4bf479410"},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Create Account",description:{content:"Create account",type:"text/plain"},url:{path:["api","accounts"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"List Accounts",permalink:"/api-reference/list-accounts"},next:{title:"Cards",permalink:"/api-reference/card"}},h={},y=[{value:"Create Account",id:"create-account",level:2}],f={toc:y};function b(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"create-account"},"Create Account"),(0,r.kt)("p",null,"Create account"),(0,r.kt)(c.Z,{mdxType:"MimeTabs"},(0,r.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Request Body"),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)("li",null,(0,r.kt)("span",{className:"badge badge--info"},"oneOf"),(0,r.kt)(p.Z,{mdxType:"SchemaTabs"},(0,r.kt)(d.Z,{label:"Create cardholder account",value:"0-item-properties",mdxType:"TabItem"},(0,r.kt)(s.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`cardholder`]",schema:{type:"string",description:"The type of the account",enum:["cardholder"]},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Account name"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"partnerAccountId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The id of the partner account that this cardholder must be linked to",example:"12fff060a9550622e86a7a962f548c1d"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"ownerUserId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"This user will be set as the owner of the created account",example:"9c4010f2946be546c716add4bf479410"},mdxType:"SchemaItem"})),(0,r.kt)(d.Z,{label:"Create partner account",value:"1-item-properties",mdxType:"TabItem"},(0,r.kt)(s.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`partner`]",schema:{type:"string",description:"The type of the account",enum:["partner"]},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Account name"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"parentAccountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Parent account. If provided, this account will be set as the parent of the created account",example:"dbc1d6aa6c0b2a5be2f567470623ede5"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"ownerUserId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Owner user id. If provided, this user will be set as the owner of the created account",example:"1a4d3b41756ce73db66ed969e4e86448"},mdxType:"SchemaItem"})))))))),(0,r.kt)("div",null,(0,r.kt)(i.Z,{mdxType:"ApiTabs"},(0,r.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Account created successfully")),(0,r.kt)("div",null,(0,r.kt)(c.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(p.Z,{mdxType:"SchemaTabs"},(0,r.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(s.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unique account ID",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"modifiedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"partnerAccountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The partner account ID that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"isActive",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Whether the account is active or not",example:!0},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`cardholder`, `identity`, `partner`]",schema:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]},mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(o.Z,{responseExample:'{\n  "id": "e4b66d1ddecbf518f5f337n5e5a4f682",\n  "createdAt": "2022-11-16T03:13:18.142Z",\n  "modifiedAt": "2022-11-18T03:13:18.142Z",\n  "partnerAccountId": "c7d84a7bf1c34323732d21bc60d17s746",\n  "isActive": true,\n  "type": "cardholder"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(d.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"User is not allowed to perform the action with the reason stated in the ",(0,r.kt)("inlineCode",{parentName:"p"},"message")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"FORBIDDEN"),"\nInsufficient permissions to perform the action."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"INVALID_PARTNER_ACCOUNT"),"\nThe partner account does not exist."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"INVALID_PARENT_ACCOUNT"),"\nThe parent account does not exist or is not a partner account."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"INVALID_USER"),"\nThe user does not exist or is not fully provisioned.")),(0,r.kt)("div",null,(0,r.kt)(c.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(p.Z,{mdxType:"SchemaTabs"},(0,r.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(s.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"},mdxType:"SchemaItem"}),(0,r.kt)(s.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"},mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(o.Z,{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[2797],{69537:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>b,frontMatter:()=>d,metadata:()=>u,toc:()=>y});var i=a(87462),s=(a(67294),a(3905)),c=(a(8209),a(26389)),r=a(94891),n=(a(75190),a(47507)),o=a(24310),p=a(63303),m=(a(75035),a(85162));const d={id:"list-accounts",title:"List Accounts",description:"Get accounts for authenticated subject",sidebar_label:"List Accounts",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts"],description:"Get accounts for authenticated subject",responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"The unique account id",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},createdAt:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},modifiedAt:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},partnerAccountId:{type:"string",description:"The partner account id that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},isActive:{type:"boolean",description:"Whether the account is active or not",example:!0},type:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]}},title:"account"},title:"list-accounts-response"}}}},403:{description:"The caller is not allowed to list accounts for the user\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer"},message:{type:"string"},error:{type:"string"}},required:["statusCode","message","error"],title:"api-error"}}}}},method:"get",path:"/api/accounts",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]},{immersve_auth:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"List Accounts",description:{content:"Get accounts for authenticated subject",type:"text/plain"},url:{path:["api","accounts"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},l=void 0,u={unversionedId:"api-reference/list-accounts",id:"api-reference/list-accounts",title:"List Accounts",description:"Get accounts for authenticated subject",source:"@site/docs/api-reference/list-accounts.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/list-accounts",permalink:"/api-reference/list-accounts",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-accounts",title:"List Accounts",description:"Get accounts for authenticated subject",sidebar_label:"List Accounts",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts"],description:"Get accounts for authenticated subject",responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"The unique account id",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},createdAt:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},modifiedAt:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},partnerAccountId:{type:"string",description:"The partner account id that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},isActive:{type:"boolean",description:"Whether the account is active or not",example:!0},type:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]}},title:"account"},title:"list-accounts-response"}}}},403:{description:"The caller is not allowed to list accounts for the user\n",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer"},message:{type:"string"},error:{type:"string"}},required:["statusCode","message","error"],title:"api-error"}}}}},method:"get",path:"/api/accounts",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]},{immersve_auth:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account id. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API","x-logo":{url:"https://www.immersve.com/img/immersvelogo-bf8a9fe8408d733c996c2f7d8251e521.svg",altText:"Immersve logo"}},postman:{name:"List Accounts",description:{content:"Get accounts for authenticated subject",type:"text/plain"},url:{path:["api","accounts"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Accounts",permalink:"/api-reference/accounts"},next:{title:"Cards",permalink:"/api-reference/card"}},h={},y=[{value:"List Accounts",id:"list-accounts",level:2}],f={toc:y};function b(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,i.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"list-accounts"},"List Accounts"),(0,s.kt)("p",null,"Get accounts for authenticated subject"),(0,s.kt)("div",null,(0,s.kt)(c.Z,{mdxType:"ApiTabs"},(0,s.kt)(m.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Successful operation")),(0,s.kt)("div",null,(0,s.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.Z,{mdxType:"SchemaTabs"},(0,s.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(o.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unique account id",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"modifiedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"partnerAccountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The partner account id that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"isActive",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Whether the account is active or not",example:!0},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`cardholder`, `identity`, `partner`]",schema:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(n.Z,{responseExample:'[\n  {\n    "id": "e4b66d1ddecbf518f5f337n5e5a4f682",\n    "createdAt": "2022-11-16T03:13:18.142Z",\n    "modifiedAt": "2022-11-18T03:13:18.142Z",\n    "partnerAccountId": "c7d84a7bf1c34323732d21bc60d17s746",\n    "isActive": true,\n    "type": "cardholder"\n  }\n]',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(m.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"The caller is not allowed to list accounts for the user")),(0,s.kt)("div",null,(0,s.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.Z,{mdxType:"SchemaTabs"},(0,s.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(o.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"message",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"error",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,s.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(n.Z,{responseExample:'{\n  "statusCode": 0,\n  "message": "string",\n  "error": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);
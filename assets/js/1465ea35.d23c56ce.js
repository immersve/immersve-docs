"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[1701],{43867:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>b,frontMatter:()=>l,metadata:()=>y,toc:()=>g});var i=a(87462),r=(a(67294),a(3905)),n=a(26389),s=a(94891),o=a(75190),c=a(47507),p=a(24310),m=a(63303),d=(a(75035),a(85162));const l={id:"list-transactions",title:"List transactions",description:"List card purchase transactions by account",sidebar_label:"List transactions",hide_title:!0,hide_table_of_contents:!0,api:{tags:["transactions"],description:"List card purchase transactions by account",parameters:[{name:"accountId",in:"path",description:"accountId linked to transactions",required:!0,schema:{type:"string"}},{name:"limit",in:"query",description:"amount of records to return (max 1000)",required:!1,schema:{type:"number"}},{name:"cursor",in:"query",description:"cursor to retrieve the next page",required:!1,schema:{type:"string"}},{name:"fromUTC",in:"query",description:"Filter for transactions from this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",required:!1,schema:{type:"string"}},{name:"toUTC",in:"query",description:"Filter for transactions up to this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",required:!1,schema:{type:"string"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{items:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"The transaction ID",example:"1000000178145"},description:{type:"string",description:"A description of the transaction",example:"Air NZ Online Auckland"},accountId:{type:"string",description:"Which account this transaction belongs to",example:"225d85e65495722bf6517ea0ba0d6f56"},status:{type:"string",description:"The status of the transaction",enum:["init","holding","cleared","failed"]},cardId:{type:"string",description:"Which card this transaction belongs to",example:"6c474aa7a5dc45bff721b5a207cf0f47"},amount:{type:"string",description:"The billing amount of the transaction, an integer in the smallest denomination for the given currency",example:"31412"},currency:{type:"string",description:"The billing currency of the transaction",example:"USD"},acquirerAmount:{type:"string",description:"The acquirer amount of the transaction, an integer in the smallest denomination for the given currency",example:"31412"},acquirerCurrency:{type:"string",description:"The acquirer currency of the transaction",example:"NZD"},lockedFundCurrency:{type:"string",description:"The locked funds' currency of the transaction",example:"USDC"},feeAmount:{type:"string",description:"The fee amount of the transaction",example:"12"},chain:{type:"string",description:"The chain of the locked funds on",example:"Polygon"},transactionDate:{type:"string",format:"date-time",description:"The created date formatted in ISO of the transactions",example:"2022-11-09T03:24:15.182Z"},processedDate:{type:"string",format:"date-time",description:"The cleared date formatted in ISO of the transactions",example:"2022-11-09T03:24:15.182Z"},reference:{type:"string",description:"The reference used when making an enquiry through customer support",example:"1000000178145"},cardAcceptor:{type:"object",required:["city","countryCode","name"],properties:{city:{type:"string",description:"The city of the card acceptor",example:"Auckland"},countryCode:{type:"string",description:"The country code of the card acceptor",example:"NZ"},name:{type:"string",description:"The name of the card acceptor",example:"Air NZ Online"}}},creditDebitIndicator:{type:"string",description:"Indicates if the transaction was a credit or debit",enum:["credit","debit"]}},required:["id","description","accountId","status","cardId","amount","currency","acquirerAmount","acquirerCurrency","lockedFundCurrency","feeAmount","chain","transactionDate","reference","cardAcceptor"],title:"transaction"}},pageInfo:{type:"object",description:"Page info for paginated results, undefined if no page info",properties:{nextCursor:{type:"string",description:"Cursor for next page, undefined if no more pages",example:"dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="}},title:"page-info"}},title:"transactions-paging-result"}}}},400:{description:"Request fields are invalid",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:400},statusName:{type:"string",example:"Bad Request"},errorCode:{type:"string",example:"BAD_REQUEST"},errors:{type:"array",items:{type:"string",example:"Expected string, received number"}}},required:["statusCode","statusName","errorCode"],title:"api-error-400"}}}},403:{description:"No Authorization to access resource.",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/accounts/{accountId}/transactions",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"List transactions",description:{content:"List card purchase transactions by account",type:"text/plain"},url:{path:["api","accounts",":accountId","transactions"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"amount of records to return (max 1000)",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"cursor to retrieve the next page",type:"text/plain"},key:"cursor",value:""},{disabled:!1,description:{content:"Filter for transactions from this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",type:"text/plain"},key:"fromUTC",value:""},{disabled:!1,description:{content:"Filter for transactions up to this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",type:"text/plain"},key:"toUTC",value:""}],variable:[{disabled:!1,description:{content:"(Required) accountId linked to transactions",type:"text/plain"},type:"any",value:"",key:"accountId"}]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},u=void 0,y={unversionedId:"api-reference/list-transactions",id:"api-reference/list-transactions",title:"List transactions",description:"List card purchase transactions by account",source:"@site/docs/api-reference/list-transactions.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/list-transactions",permalink:"/api-reference/list-transactions",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-transactions",title:"List transactions",description:"List card purchase transactions by account",sidebar_label:"List transactions",hide_title:!0,hide_table_of_contents:!0,api:{tags:["transactions"],description:"List card purchase transactions by account",parameters:[{name:"accountId",in:"path",description:"accountId linked to transactions",required:!0,schema:{type:"string"}},{name:"limit",in:"query",description:"amount of records to return (max 1000)",required:!1,schema:{type:"number"}},{name:"cursor",in:"query",description:"cursor to retrieve the next page",required:!1,schema:{type:"string"}},{name:"fromUTC",in:"query",description:"Filter for transactions from this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",required:!1,schema:{type:"string"}},{name:"toUTC",in:"query",description:"Filter for transactions up to this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",required:!1,schema:{type:"string"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{items:{type:"array",items:{type:"object",properties:{id:{type:"string",description:"The transaction ID",example:"1000000178145"},description:{type:"string",description:"A description of the transaction",example:"Air NZ Online Auckland"},accountId:{type:"string",description:"Which account this transaction belongs to",example:"225d85e65495722bf6517ea0ba0d6f56"},status:{type:"string",description:"The status of the transaction",enum:["init","holding","cleared","failed"]},cardId:{type:"string",description:"Which card this transaction belongs to",example:"6c474aa7a5dc45bff721b5a207cf0f47"},amount:{type:"string",description:"The billing amount of the transaction, an integer in the smallest denomination for the given currency",example:"31412"},currency:{type:"string",description:"The billing currency of the transaction",example:"USD"},acquirerAmount:{type:"string",description:"The acquirer amount of the transaction, an integer in the smallest denomination for the given currency",example:"31412"},acquirerCurrency:{type:"string",description:"The acquirer currency of the transaction",example:"NZD"},lockedFundCurrency:{type:"string",description:"The locked funds' currency of the transaction",example:"USDC"},feeAmount:{type:"string",description:"The fee amount of the transaction",example:"12"},chain:{type:"string",description:"The chain of the locked funds on",example:"Polygon"},transactionDate:{type:"string",format:"date-time",description:"The created date formatted in ISO of the transactions",example:"2022-11-09T03:24:15.182Z"},processedDate:{type:"string",format:"date-time",description:"The cleared date formatted in ISO of the transactions",example:"2022-11-09T03:24:15.182Z"},reference:{type:"string",description:"The reference used when making an enquiry through customer support",example:"1000000178145"},cardAcceptor:{type:"object",required:["city","countryCode","name"],properties:{city:{type:"string",description:"The city of the card acceptor",example:"Auckland"},countryCode:{type:"string",description:"The country code of the card acceptor",example:"NZ"},name:{type:"string",description:"The name of the card acceptor",example:"Air NZ Online"}}},creditDebitIndicator:{type:"string",description:"Indicates if the transaction was a credit or debit",enum:["credit","debit"]}},required:["id","description","accountId","status","cardId","amount","currency","acquirerAmount","acquirerCurrency","lockedFundCurrency","feeAmount","chain","transactionDate","reference","cardAcceptor"],title:"transaction"}},pageInfo:{type:"object",description:"Page info for paginated results, undefined if no page info",properties:{nextCursor:{type:"string",description:"Cursor for next page, undefined if no more pages",example:"dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="}},title:"page-info"}},title:"transactions-paging-result"}}}},400:{description:"Request fields are invalid",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:400},statusName:{type:"string",example:"Bad Request"},errorCode:{type:"string",example:"BAD_REQUEST"},errors:{type:"array",items:{type:"string",example:"Expected string, received number"}}},required:["statusCode","statusName","errorCode"],title:"api-error-400"}}}},403:{description:"No Authorization to access resource.",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"post",path:"/api/accounts/{accountId}/transactions",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"List transactions",description:{content:"List card purchase transactions by account",type:"text/plain"},url:{path:["api","accounts",":accountId","transactions"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"amount of records to return (max 1000)",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"cursor to retrieve the next page",type:"text/plain"},key:"cursor",value:""},{disabled:!1,description:{content:"Filter for transactions from this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",type:"text/plain"},key:"fromUTC",value:""},{disabled:!1,description:{content:"Filter for transactions up to this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",type:"text/plain"},key:"toUTC",value:""}],variable:[{disabled:!1,description:{content:"(Required) accountId linked to transactions",type:"text/plain"},type:"any",value:"",key:"accountId"}]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Get a transaction",permalink:"/api-reference/get-a-transaction"},next:{title:"KYC",permalink:"/api-reference/kyc"}},h={},g=[{value:"List transactions",id:"list-transactions",level:2}],f={toc:g},x="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(x,(0,i.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"list-transactions"},"List transactions"),(0,r.kt)("p",null,"List card purchase transactions by account"),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Path Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"accountId",in:"path",description:"accountId linked to transactions",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Query Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"limit",in:"query",description:"amount of records to return (max 1000)",required:!1,schema:{type:"number"}},mdxType:"ParamsItem"}),(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"cursor",in:"query",description:"cursor to retrieve the next page",required:!1,schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"fromUTC",in:"query",description:"Filter for transactions from this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",required:!1,schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"toUTC",in:"query",description:"Filter for transactions up to this date (inclusive). Value should be a ISO 8601 string or RFC 2822 string",required:!1,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,r.kt)("div",null,(0,r.kt)(n.Z,{mdxType:"ApiTabs"},(0,r.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Successful operation")),(0,r.kt)("div",null,(0,r.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(m.Z,{mdxType:"SchemaTabs"},(0,r.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"items"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,r.kt)(p.Z,{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The transaction ID",example:"1000000178145"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"description",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A description of the transaction",example:"Air NZ Online Auckland"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"accountId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Which account this transaction belongs to",example:"225d85e65495722bf6517ea0ba0d6f56"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`init`, `holding`, `cleared`, `failed`]",schema:{type:"string",description:"The status of the transaction",enum:["init","holding","cleared","failed"]},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"cardId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Which card this transaction belongs to",example:"6c474aa7a5dc45bff721b5a207cf0f47"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"amount",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The billing amount of the transaction, an integer in the smallest denomination for the given currency",example:"31412"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"currency",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The billing currency of the transaction",example:"USD"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"acquirerAmount",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The acquirer amount of the transaction, an integer in the smallest denomination for the given currency",example:"31412"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"acquirerCurrency",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The acquirer currency of the transaction",example:"NZD"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"lockedFundCurrency",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The locked funds' currency of the transaction",example:"USDC"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"feeAmount",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The fee amount of the transaction",example:"12"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"chain",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The chain of the locked funds on",example:"Polygon"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"transactionDate",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"The created date formatted in ISO of the transactions",example:"2022-11-09T03:24:15.182Z"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"processedDate",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"The cleared date formatted in ISO of the transactions",example:"2022-11-09T03:24:15.182Z"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"reference",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The reference used when making an enquiry through customer support",example:"1000000178145"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"cardAcceptor"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)(p.Z,{collapsible:!1,name:"city",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The city of the card acceptor",example:"Auckland"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"countryCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The country code of the card acceptor",example:"NZ"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The name of the card acceptor",example:"Air NZ Online"},mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{collapsible:!1,name:"creditDebitIndicator",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`credit`, `debit`]",schema:{type:"string",description:"Indicates if the transaction was a credit or debit",enum:["credit","debit"]},mdxType:"SchemaItem"}),(0,r.kt)("li",null,(0,r.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,r.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"pageInfo"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,r.kt)("p",null,"Page info for paginated results, undefined if no page info")),(0,r.kt)(p.Z,{collapsible:!1,name:"nextCursor",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Cursor for next page, undefined if no more pages",example:"dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="},mdxType:"SchemaItem"}))))))),(0,r.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(c.Z,{responseExample:'{\n  "items": [\n    {\n      "id": "1000000178145",\n      "description": "Air NZ Online Auckland",\n      "accountId": "225d85e65495722bf6517ea0ba0d6f56",\n      "status": "init",\n      "cardId": "6c474aa7a5dc45bff721b5a207cf0f47",\n      "amount": "31412",\n      "currency": "USD",\n      "acquirerAmount": "31412",\n      "acquirerCurrency": "NZD",\n      "lockedFundCurrency": "USDC",\n      "feeAmount": "12",\n      "chain": "Polygon",\n      "transactionDate": "2022-11-09T03:24:15.182Z",\n      "processedDate": "2022-11-09T03:24:15.182Z",\n      "reference": "1000000178145",\n      "cardAcceptor": {\n        "city": "Auckland",\n        "countryCode": "NZ",\n        "name": "Air NZ Online"\n      },\n      "creditDebitIndicator": "credit"\n    }\n  ],\n  "pageInfo": {\n    "nextCursor": "dGhlIG5leHQgY3Vyc29yIGdvZXMgaGVyZQ=="\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(d.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Request fields are invalid")),(0,r.kt)("div",null,(0,r.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(m.Z,{mdxType:"SchemaTabs"},(0,r.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(p.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:400},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Bad Request"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"BAD_REQUEST"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"errors",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",example:"Expected string, received number"}},mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(c.Z,{responseExample:'{\n  "statusCode": 400,\n  "statusName": "Bad Request",\n  "errorCode": "BAD_REQUEST",\n  "errors": [\n    "Expected string, received number"\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(d.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"No Authorization to access resource.")),(0,r.kt)("div",null,(0,r.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(m.Z,{mdxType:"SchemaTabs"},(0,r.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(p.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"},mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(c.Z,{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);
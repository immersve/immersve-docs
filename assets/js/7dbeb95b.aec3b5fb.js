"use strict";(self.webpackChunkimmersve_docs=self.webpackChunkimmersve_docs||[]).push([[481],{42884:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>u,default:()=>g,frontMatter:()=>l,metadata:()=>h,toc:()=>b});var i=a(87462),n=(a(67294),a(3905)),c=(a(8209),a(26389)),r=a(94891),o=a(75190),s=a(47507),p=a(24310),d=a(63303),m=(a(75035),a(85162));const l={id:"get-an-account",title:"Get an account",description:"Get an Account by account id",sidebar_label:"Get an account",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts"],description:"Get an Account by account id",parameters:[{name:"accountId",in:"path",description:"Id of the account.",example:"225d85e65495722bf6517ea0ba0d6f56",required:!0,schema:{type:"string"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The unique account ID",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},createdAt:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},modifiedAt:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},partnerAccountId:{type:"string",description:"The partner account ID that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},isActive:{type:"boolean",description:"Whether the account is active or not",example:!0},type:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]}},title:"account"}}}},403:{description:"No Authorization to access resource",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"get",path:"/api/accounts/{accountId}",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Get an account",description:{content:"Get an Account by account id",type:"text/plain"},url:{path:["api","accounts",":accountId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Id of the account.",type:"text/plain"},type:"any",value:"",key:"accountId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},u=void 0,h={unversionedId:"api-reference/get-an-account",id:"api-reference/get-an-account",title:"Get an account",description:"Get an Account by account id",source:"@site/docs/api-reference/get-an-account.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/get-an-account",permalink:"/api-reference/get-an-account",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-an-account",title:"Get an account",description:"Get an Account by account id",sidebar_label:"Get an account",hide_title:!0,hide_table_of_contents:!0,api:{tags:["accounts"],description:"Get an Account by account id",parameters:[{name:"accountId",in:"path",description:"Id of the account.",example:"225d85e65495722bf6517ea0ba0d6f56",required:!0,schema:{type:"string"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The unique account ID",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},createdAt:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},modifiedAt:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},partnerAccountId:{type:"string",description:"The partner account ID that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},isActive:{type:"boolean",description:"Whether the account is active or not",example:!0},type:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]}},title:"account"}}}},403:{description:"No Authorization to access resource",content:{"application/json":{schema:{type:"object",properties:{statusCode:{type:"integer",example:403},statusName:{type:"string",example:"Forbidden"},errorCode:{type:"string",example:"FORBIDDEN"},reason:{type:"string",example:"Unauthorized"}},required:["statusCode","statusName","errorCode"],title:"api-error-403"}}}}},method:"get",path:"/api/accounts/{accountId}",servers:[{url:"https://api.immersve.com/",description:"Sandbox server"}],security:[{immersve_auth:[]},{apiKeyHeader:[],apiSecretHeader:[],accountIdHeader:[]}],securitySchemes:{immersve_auth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},apiKeyHeader:{type:"apiKey",in:"header",name:"x-api-key",description:"See Guides -> Authentication for instructions"},apiKeyHeaderWebhook:{type:"apiKey",in:"header",name:"APIKEY",description:"The API key provided by you to Immersve"},apiSecretHeader:{type:"apiKey",in:"header",name:"x-api-secret"},accountIdHeader:{type:"apiKey",in:"header",name:"x-account-id",description:"The target account ID. If targeting the root account, this can be omitted (for example creating an account)"}},info:{version:"1.0.0",title:"Immersve API"},postman:{name:"Get an account",description:{content:"Get an Account by account id",type:"text/plain"},url:{path:["api","accounts",":accountId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Id of the account.",type:"text/plain"},type:"any",value:"",key:"accountId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api-reference/immersve-api",custom_edit_url:null},sidebar:"primarySidebar",previous:{title:"Create Account",permalink:"/api-reference/create-account"},next:{title:"Cards",permalink:"/api-reference/card"}},y={},b=[{value:"Get an account",id:"get-an-account",level:2}],f={toc:b};function g(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"get-an-account"},"Get an account"),(0,n.kt)("p",null,"Get an Account by account id"),(0,n.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"Path Parameters")),(0,n.kt)("div",null,(0,n.kt)("ul",null,(0,n.kt)(o.Z,{className:"paramsItem",param:{name:"accountId",in:"path",description:"Id of the account.",example:"225d85e65495722bf6517ea0ba0d6f56",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,n.kt)("div",null,(0,n.kt)(c.Z,{mdxType:"ApiTabs"},(0,n.kt)(m.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Successful operation")),(0,n.kt)("div",null,(0,n.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(d.Z,{mdxType:"SchemaTabs"},(0,n.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unique account ID",example:"e4b66d1ddecbf518f5f337n5e5a4f682"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of account creation",example:"2022-11-16T03:13:18.142Z"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"modifiedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Timestamp of last account modification",example:"2022-11-18T03:13:18.142Z"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"partnerAccountId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The partner account ID that this account belongs to",example:"c7d84a7bf1c34323732d21bc60d17s746"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"isActive",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Whether the account is active or not",example:!0},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`cardholder`, `identity`, `partner`]",schema:{type:"string",description:"The account type",enum:["cardholder","identity","partner"]},mdxType:"SchemaItem"})))),(0,n.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(s.Z,{responseExample:'{\n  "id": "e4b66d1ddecbf518f5f337n5e5a4f682",\n  "createdAt": "2022-11-16T03:13:18.142Z",\n  "modifiedAt": "2022-11-18T03:13:18.142Z",\n  "partnerAccountId": "c7d84a7bf1c34323732d21bc60d17s746",\n  "isActive": true,\n  "type": "cardholder"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,n.kt)(m.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"No Authorization to access resource")),(0,n.kt)("div",null,(0,n.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(d.Z,{mdxType:"SchemaTabs"},(0,n.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(p.Z,{collapsible:!1,name:"statusCode",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",example:403},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"statusName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Forbidden"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"errorCode",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"FORBIDDEN"},mdxType:"SchemaItem"}),(0,n.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"Unauthorized"},mdxType:"SchemaItem"})))),(0,n.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(s.Z,{responseExample:'{\n  "statusCode": 403,\n  "statusName": "Forbidden",\n  "errorCode": "FORBIDDEN",\n  "reason": "Unauthorized"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}g.isMDXComponent=!0}}]);
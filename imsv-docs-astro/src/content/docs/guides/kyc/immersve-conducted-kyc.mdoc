---
title: Immersve Conducted KYC
slug: guides/immersve-conducted-kyc
---

In the Immersve-conducted KYC mode, partner application directs their users to
complete KYC through the Immersve UI. This contrasts with
{% link page="guides/partner-conducted-kyc" /%} mode where Immersve is not directly involved
with partners' cardholders.

We recommend this mode of KYC for partners not obligated to perform KYC as part
of their main product, like crypto wallets. That's because implementing one's
own KYC process can require a significant effort.

{% warning %}
  Once Immersve conducted KYC has been completed for an individual, the supported region associated with the wallet of
  the individual cannot be changed.

  In the event that an individual wished to go through KYC in another supported region, a new wallet would be required.

{% /warning %}

## How it works

{% list %}
  {% listitem "Identification" connector=true %}
    __Initiate Immersve Conducted KYC__ <br/>
   To begin the KYC process, call the {% link endpoint="get-spending-prerequisites" /%} endpoint specifying KYC type as **`immersve-conducted`**.
   There are a number of optional parameters you can set to change the behavior of the KYC process.

   See the {% link endpoint="get-spending-prerequisites" /%} endpoint reference for more details on the parameters,
   these are explained in more detail in the following sections.

   If Immersve already has complete KYC information for the individual owning the wallet, in the requested region the
   user will not be required to go through KYC.

  {% /listitem %}

  {% listitem "WarningIcon" connector=true %}
    __Handle any actions__ <br/>
    Depending on what options have been selected when calling spending
    prerequisites, the response may contain several actions.

    An action can be identified by looking at the list of
    prerequisites where `"stage": "kyc"` and `"status": "action-required"`.

    ```json
     [
      {
        "stage":"kyc",
        "status":"action-required",
        "actionType":"xxx"
      },
      //...other actions
    ]
    ```

    Each `actionType` identifies a specific action that must be made. e.g. `follow_kyc_url`,
        `submit_contact_email`, `submit_contact_phone`, `set_expected_spend_amount`

    Once the necessary action has been taken for each `actionType` the action is
    removed from the list.

  {% /listitem %}

  {% listitem "Browser" connector=true %}
    __Present the user with Immersve Conducted KYC UI__ <br/>
    The `follow_kyc_url` action is the gateway to starting Immersve Conducted KYC.
      ```json
         [
          {
            "stage":"kyc",
            "status":"action-required",
            "actionType":"follow_kyc_url",
            "params": {
              "kycUrl": "[url for user to follow]"
            },
          },
          //...other actions
        ]
        ```

    The partner should navigate
    the user to the URL provided in the response.

  {% /listitem %}

  {% listitem "Clock" connector=true %}
    __Wait for Identity Verification to complete__ <br/>
    Once the `follow_kyc_url` action has been completed. You will see a similar response
     to below from the {% link endpoint="get-spending-prerequisites" /%} endpoint.
    ```json
     [{"stage":"kyc","status":"pending"}]
    ```

    You must wait for the results of the KYC check to be returned.

  {% /listitem %}

  {% listitem "RocketLaunch" %}
    __Immersve Conducted KYC is complete__ <br/>
   Once all of the necessary actions have been completed and KYC checks have passed,
    all KYC prequisites have been completed. You'll see a similar response to the following:

    ```json
    [{"stage":"kyc","status":"ok"}]
    ```
  Congratulations you've finished the Immersve Conducted KYC process.

  {% /listitem %}

{% /list %}



## Integration steps

The following steps are for manual integration via a terminal. An integrating
application should implement this flow with whatever technology stack is
convenient.

### Prerequisites
This guide assumes that the partner has already obtained an access token or API
keys, and has the card program and funding source IDs ready.

```bash
token="<your_access_token>"
card_program_id="<your_card_program_id>"
funding_source_id="<funding_source_id>"
```

**Example Request:**
```bash
curl -X POST "https://test.immersve.com/api/spending-prerequisites" \
  -H 'Content-Type: application/json' \
  -H "Authorization: Bearer $token" \
  --data '{
    "cardProgramId": "'${card_program_id}'",
    "fundingSourceId": "'${funding_source_id}'",
    "spendableAmount": 100,
    "spendableCurrency": "USD",
    "kycType": "immersve-conducted",
    "kycRedirectUrl: "https://app.example.io",
  }'
```

**Example Response:**
```json
{
  "prerequisites": [
    {
      "stage": "kyc",
      "status": "action-required",
      "type": "kyc",
      "actionType": "follow_kyc_url",
      "params": {
        "status": "kyc_required",
        "kycUrl": "https://verify.test.immersve.com/kyc/session/hg40904ddkr43?code=r938j9g"
      }
    },
  ]
}
```

### Bypass KYC Steps (Optional)
Some KYC steps can be optionally bypassed by providing this information about the user in advance via
API and using the `kycHiddenSteps` option when requesting spending prerequisites.

If spending prerequisites is called with the `kycHiddenSteps` option but information about
 the user has not yet been supplied, the response from spending prerequisites will indicate
 that additional information is required instead of providing a KYC URL. KYC steps that can be
 bypassed are explained in the table below.

 {% table title="KYC steps that can be bypassed with `kycHiddenSteps`" %}
 * KYC Step
 * Description
 ---
 * <nobr>region</nobr>
 * The region the user resides in. This must be supplied using the `kycRegion` option on the
 {% link endpoint="get-spending-prerequisites" /%} request.
 ---
 * <nobr>contact-channels</nobr>
 * The user's contact details. See "Supply Contact Details" section below.
---
 * <nobr>expected-spend</nobr>
 * The user's anticipated monthly spend. See "Supply Expected Spend Amount" section below.
 ---
 * <nobr>residential-address</nobr>
 * The user's residential address. See "Supply Residential Address" section below.

 {% /table %}

### Supply Contact Details (Optional)

If you would like to supply the user's contact details ahead of time, you can do so by calling the
{% link endpoint="update-contact-details" /%} endpoint, before starting the KYC process.
This will then allow the user to check and update them as part of the Immersve Conducted KYC process.

{% note %}
Immersve will not perform validation of a user's contact details.
{% /note %}

Immersve requires users contact details (phone number and email) for the
following reasons, this should be explained to customers:

- Adding cards to Apple/Google Pay wallets (X-Pay)
- Performing 3DS validation for online transactions

If a user doesn't provide contact details, they risk online transactions being
rejected and might not be able to add cards to X-Pay wallets.

Before you share contact details with Immersve you must collect user consent via
a checkbox. This can be done at the same time as KYC information sharing.

{% endpointref name="update-contact-details" /%}

```bash
curl -X PATCH "https://${imsv_api_host}/api/accounts/${cardholder_account_id}/contact-details" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $token" \
  --data '{
    "email": {
      "emailAddress": "joe@cardholder.email",
    },
    "phone": {
      "phoneNumber": "+64123456789",
    }
  }'
```

### Supply Expected Spend Amount (Optional)

Regulations require that Immersve obtain information on the “nature and purpose”
of the proposed business relationship between ourselves and the cardholder.

Collection of the anticipated monthly spending level when onboarding a new cardholder is
one measure that assists in our understanding of the nature and purpose of the cardholder account.

If you are using the `kycHiddenSteps` option to bypass the expected spend KYC step, you will need to supply the user's expected spend ahead of time.
You can do this by calling the {% link endpoint="update-expected-spend-amount" /%} endpoint, before starting the KYC process.

{% endpointref name="update-expected-spend-amount" /%}

```bash
expected_spend_amount="" # in minor units
curl -X POST "https://${imsv_api_host}/api/accounts/${cardholder_account_id}/expected-spend-amount" \
  -H "Content-Type: application/json" \
  -H "X-Api-Key: ${card_issuer_api_key}" \
  -H "X-Api-Secret: ${card_issuer_api_secret}" \
  -H "X-Account-Id: ${cardholder_account_id}" \
  --data '{
    "expectedSpendAmount": "'${expected_spend_amount}'"
  }'
```

### Supply Residential Address (Optional)

If you would like to supply the user's residential address ahead of time, you can do so by calling the
{% link endpoint="submit-residential-addresses" /%} endpoint, before starting the KYC process.
This will then allow the user to check and update the address as part of the Immersve Conducted KYC process
(if `residential-address` step is not hidden).

You can submit either a structured or an unstructured address. We recommend using a structured address
whenever possible as correct parsing of an unstructured address is not guaranteed.

{% list %}
  {% listitem "ArrowRightCircle" %}
    **Structured Address**

    Organizes address details into predefined fields, making it easier to validate and process the data.

    ```json
    {
      "streetNumber": "140",
      "streetName": "Commonwealth Avenue",
      "town": "Yarralumla",
      "state": "ACT",
      "postalCode": "2600",
      "country": "AU"
    }
    ```
    Partners are strongly encouraged to use this format whenever possible.

  {% /listitem %}
  {% listitem "ArrowRightCircle" %}
    **Unstructured Address**

    This format consolidates the address into a single text string in the `fullAddress` field

    ```json
    {
      "fullAddress": "140 Commonwealth Ave, Yarralumla ACT 2600,
      Australia",
      "country": "AU"
    }
    ```

    Immersve will attempt to structure a submitted unstructured address for addresses
    in New Zealand and Australia.

  {% /listitem %}
{% /list %}

{% endpointref name="submit-residential-addresses" /%}

```bash
curl -X POST "https://${imsv_api_host}/api/accounts/${cardholder_account_id}/residential-addresses" \
  -H "Content-Type: application/json" \
  -H "X-Api-Key: ${card_issuer_api_key}" \
  -H "X-Api-Secret: ${card_issuer_api_secret}" \
  -H "X-Account-Id: ${cardholder_account_id}" \
  --data '[
  {
    "streetNumber": "140",
    "streetName": "Commonwealth Avenue",
    "town": "Yarralumla",
    "state": "ACT",
    "postalCode": "2600",
    "country": "AU"
  }
]'
```

### User goes through the KYC flow

Upon being redirected to the Immersve KYC page, the user will go through the
process that involves the collection of the user's contact details, expected spend
amount, residential address (if not hidden) and the verification of their identity
through document and biometry (facial scan) collection.

At the end of the process the user is presented with a screen indicating that their
profile is under review. The user does not have to stay on the page to know
the outcome, as it will be communicated via email. If they stay on the page, it
will update to display their KYC result once their KYC check has passed or failed.

Upon exiting the page, users are sent back to the **`redirectUrl`** provided
in the spending prerequisites request. If no **`redirectUrl`** was provided, the
exit button will close the browser tab.

### Unsuccessful KYC check

If the KYC check was unsuccessful, the spending prerequisites response will
return "kyc_check_failed" for the KYC prerequisite status, along with an array
listing the reasons for the failure. If possible, a new KYC URL will be provided
for the user to try again.

### Confirmation of KYC Completion

Once redirected, check the spending prerequisites again to
ensure no further KYC actions are required. Once there is no KYC prerequisite
returned, and given all other checks are completed, the cardholder will be
allowed to create and use their Immersve card.

**Example Request:**

```bash
curl -X POST "https://test.immersve.com/api/spending-prerequisites" \
  -H 'Content-Type: application/json' \
  -H "Authorization: Bearer $token" \
  --data '{
    "cardProgramId": "'${card_program_id}'",
    "fundingSourceId": "'${funding_source_id}'",
    "spendableAmount": 100,
    "spendableCurrency": "USD",
    "kycType": "immersve-conducted",
    "kycRedirectUrl: "https://app.example.io",
  }'
```

**Example Response:**

```json
{
  "prerequisites": []
}
```
##

## Testing

For a complete guide on passing KYC in test mode, please read {% link page="guides/pass-kyc-in-testmode" /%}

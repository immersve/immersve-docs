---
import { getCollection } from 'astro:content';

const allTokensInstalledOnNetwork = await getCollection('network-tokens');

interface Props {
  token: string;
  type: string;
}

const { token, type } = Astro.props;

const targetTokens = allTokensInstalledOnNetwork.filter(ft => ft.slug.includes(token) && ft.data.netType === type)

function wrappableAddress(addr: string) {
  return addr.match(/.{1,30}/g)!.join('<wbr>');
}

---
<div class="overflow-x-auto">
  <table>
    <thead>
      <tr>
        <th>Chain</th>
        <th>Token Address</th>
      </tr>
    </thead>
      <tbody>
      {targetTokens?.map(token => (
        <tr>
          <td><nobr>{token.data.title}</nobr></td>
          <td><a href={token.data.url} target="_blank" set:html={wrappableAddress(token.data.address)}></a></td>
        </tr>
      ))}
    </tbody>
  </table>
</div>

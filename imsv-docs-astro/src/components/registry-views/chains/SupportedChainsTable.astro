---
import { registry } from 'src/content/registry.mjs';

const supportedChains = registry.allChains().filter(chain => chain.name != 'none');
const fetchNetworksForChains = (chain: any) => registry.allNetworksByChainName(chain.name);
const columns = [ 'chain', 'protocols','networkNames' ];

const columnTitles: Record<string,string> = {
  chain: 'Chain',
  protocols: 'Protocols',
  networkNames:'Network Names'
};

---
<div class="overflow-x-auto">
  <table>
    <thead>
      <tr>
        {columns.map(column => (
          <th>{columnTitles[column]}</th>
        ))}
      </tr>
    </thead>
      <tbody>
      {supportedChains.map(chain => (
        <tr>
            {columns.map(column=> {
              switch(column) {
                case 'chain':
                  return <td><a href={chain.docsPath}>{chain.title}</a></td>
                case 'protocols':
                  return <td>
                    {Array(...chain.supportedProtocols).map(protocol => {
                      return <a href={protocol.docsPath}>{protocol.title}</a>
                    })}
                    </td>
                  case 'networkNames':
                    const networks = fetchNetworksForChains(chain);
                    return <td>{networks.map(network => network.networkName).join(', ')}</td>;
                default:
                  return <td></td>
              }
            })}
        </tr>
      ))}
    </tbody>
  </table>
</div>
